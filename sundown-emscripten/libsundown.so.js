// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// TODO: " u s e   s t r i c t ";

try {
  this['Module'] = Module;
} catch(e) {
  this['Module'] = Module = {};
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function(filename) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename).toString();
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename).toString();
    }
    return ret;
  };

  Module['load'] = function(f) {
    globalEval(read(f));
  };

  if (!Module['arguments']) {
    Module['arguments'] = process['argv'].slice(2);
  }
} else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  // Polyfill over SpiderMonkey/V8 differences
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function(f) { snarf(f) };
  }

  if (!Module['arguments']) {
    if (typeof scriptArgs != 'undefined') {
      Module['arguments'] = scriptArgs;
    } else if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
} else if (ENVIRONMENT_IS_WEB) {
  if (!Module['print']) {
    Module['print'] = function(x) {
      console.log(x);
    };
  }

  if (!Module['printErr']) {
    Module['printErr'] = function(x) {
      console.log(x);
    };
  }

  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (!Module['arguments']) {
    if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
} else if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...

  Module['load'] = importScripts;

} else {
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
if (!Module['preRun']) Module['preRun'] = [];
if (!Module['postRun']) Module['postRun'] = [];

  
// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (/^\[\d+\ x\ (.*)\]/.test(type)) return true; // [15 x ?] blocks. Like structs
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  bitshift64: function (low, high, op, bits) {
    var ander = Math.pow(2, bits)-1;
    if (bits < 32) {
      switch (op) {
        case 'shl':
          return [low << bits, (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits))];
        case 'ashr':
          return [(((low >>> bits ) | ((high&ander) << (32 - bits))) >> 0) >>> 0, (high >> bits) >>> 0];
        case 'lshr':
          return [((low >>> bits) | ((high&ander) << (32 - bits))) >>> 0, high >>> bits];
      }
    } else if (bits == 32) {
      switch (op) {
        case 'shl':
          return [0, low];
        case 'ashr':
          return [high, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high, 0];
      }
    } else { // bits > 32
      switch (op) {
        case 'shl':
          return [0, low << (bits - 32)];
        case 'ashr':
          return [(high >> (bits - 32)) >>> 0, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high >>>  (bits - 32) , 0];
      }
    }
    abort('unknown bitshift64 op: ' + [value, op, bits]);
  },
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type[type.length-1] == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = size;
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Types.types[field].alignSize;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      alignSize = type.packed ? 1 : Math.min(alignSize, Runtime.QUANTUM_SIZE);
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  addFunction: function (func) {
    var ret = FUNCTION_TABLE.length;
    FUNCTION_TABLE.push(func);
    FUNCTION_TABLE.push(0);
    return ret;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func) {
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        FUNCTION_TABLE[func].apply(null, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xff;
      if (needed) {
        buffer.push(code);
        needed--;
      }
      if (buffer.length == 0) {
        if (code < 128) return String.fromCharCode(code);
        buffer.push(code);
        if (code > 191 && code < 224) {
          needed = 1;
        } else {
          needed = 2;
        }
        return '';
      }
      if (needed > 0) return '';
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var ret;
      if (c1 > 191 && c1 < 224) {
        ret = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
      } else {
        ret = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function stackAlloc(size) { var ret = STACKTOP;STACKTOP += size;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"); return ret; },
  staticAlloc: function staticAlloc(size) { var ret = STATICTOP;STATICTOP += size;STATICTOP = ((((STATICTOP)+3)>>2)<<2); if (STATICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function alignMemory(size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 4))*(quantum ? quantum : 4); return ret; },
  makeBigInt: function makeBigInt(low,high,unsigned) { var ret = (unsigned ? (((low)>>>0)+(((high)>>>0)*4294967296)) : (((low)>>>0)+(((high)|0)*4294967296))); return ret; },
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



var CorrectionsMonitor = {
  MAX_ALLOWED: 0, // XXX
  corrections: 0,
  sigs: {},

  note: function(type, succeed, sig) {
    if (!succeed) {
      this.corrections++;
      if (this.corrections >= this.MAX_ALLOWED) abort('\n\nToo many corrections!');
    }
  },

  print: function() {
  }
};





//========================================
// Runtime essentials
//========================================

var __THREW__ = false; // Used in checking for thrown exceptions.

var ABORT = false;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;

function abort(text) {
  Module.print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Adding
//
//         __attribute__((used))
//
//       to the function definition will prevent that.
//
// Note: Closure optimizations will minify function names, making
//       functions no longer callable. If you run closure (on by default
//       in -O2 and above), you should export the functions you will call
//       by calling emcc with something like
//
//         -s EXPORTED_FUNCTIONS='["_func1","_func2"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  try {
    var func = eval('_' + ident);
  } catch(e) {
    try {
      func = globalScope['Module']['_' + ident]; // closure exported function
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
Module["ccall"] = ccall;

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  // TODO: optimize this, eval the whole function once instead of going through ccall each time
  return function() {
    return ccall(ident, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': HEAP32[((ptr)>>2)]=value; break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': (tempDoubleF64[0]=value,HEAP32[((ptr)>>2)]=tempDoubleI32[0],HEAP32[(((ptr)+(4))>>2)]=tempDoubleI32[1]); break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return (tempDoubleI32[0]=HEAP32[((ptr)>>2)],tempDoubleI32[1]=HEAP32[(((ptr)+(4))>>2)],tempDoubleF64[0]);
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));

  if (zeroinit) {
      _memset(ret, 0, size);
      return ret;
  }
  
  var i = 0, type;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);
    i += Runtime.getNativeTypeSize(type);
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  var utf8 = new Runtime.UTF8Processor();
  var nullTerminated = typeof(length) == "undefined";
  var ret = "";
  var i = 0;
  var t;
  while (1) {
    t = HEAPU8[((ptr)+(i))];
    if (nullTerminated && t == 0) break;
    ret += utf8.processCChar(t);
    i += 1;
    if (!nullTerminated && i == length) break;
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function Array_stringify(array) {
  var ret = "";
  for (var i = 0; i < array.length; i++) {
    ret += String.fromCharCode(array[i]);
  }
  return ret;
}
Module['Array_stringify'] = Array_stringify;

// Memory management

var FUNCTION_TABLE; // XXX: In theory the indexes here can be equal to pointers to stacked or malloced memory. Such comparisons should
                    //      be false, but can turn out true. We should probably set the top bit to prevent such issues.

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STACK_ROOT, STACKTOP, STACK_MAX;
var STATICTOP;
function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and STATICTOP is the new top.
  Module.printErr('Warning: Enlarging memory arrays, this is not fast! ' + [STATICTOP, TOTAL_MEMORY]);
  assert(STATICTOP >= TOTAL_MEMORY);
  assert(TOTAL_MEMORY > 4); // So the loop below will not be infinite
  while (TOTAL_MEMORY <= STATICTOP) { // Simple heuristic. Override enlargeMemory() if your program has something more optimal for it
    TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY);
  }
  var oldHEAP8 = HEAP8;
  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAPF64 = new Float64Array(buffer);
  HEAP8.set(oldHEAP8);
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 10485760;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
  assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
         'Cannot fallback to non-typed array case: Code is too specialized');

  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAPF64 = new Float64Array(buffer);

  // Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 255;
  assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

STACK_ROOT = STACKTOP = Runtime.alignMemory(1);
STACK_MAX = STACK_ROOT + TOTAL_STACK;

var tempDoublePtr = Runtime.alignMemory(STACK_MAX, 8);
var tempDoubleI8  = HEAP8.subarray(tempDoublePtr);
var tempDoubleI32 = HEAP32.subarray(tempDoublePtr >> 2);
var tempDoubleF32 = HEAPF32.subarray(tempDoublePtr >> 2);
var tempDoubleF64 = HEAPF64.subarray(tempDoublePtr >> 3);
function copyTempFloat(ptr) { // functions, because inlining this code is increases code size too much
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
  tempDoubleI8[4] = HEAP8[ptr+4];
  tempDoubleI8[5] = HEAP8[ptr+5];
  tempDoubleI8[6] = HEAP8[ptr+6];
  tempDoubleI8[7] = HEAP8[ptr+7];
}
STACK_MAX = tempDoublePtr + 8;

STATICTOP = alignMemoryPage(STACK_MAX);

var nullString = allocate(intArrayFromString('(null)'), 'i8', ALLOC_STATIC);

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}

var __ATINIT__ = []; // functions called during startup
var __ATMAIN__ = []; // functions called when main() is to be run
var __ATEXIT__ = []; // functions called during shutdown

function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);

  // Print summary of correction activity
  CorrectionsMonitor.print();
}

function String_len(ptr) {
  var i = ptr;
  while (HEAP8[(i++)]) {}; // Note: should be |!= 0|, technically. But this helps catch bugs with undefineds
  return i - ptr - 1;
}
Module['String_len'] = String_len;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[((buffer)+(i))]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer)+(i))]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

var STRING_TABLE = [];

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
  // TODO: clean up previous line
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var calledRun = false;
var runDependencyWatcher = null;
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 6000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    } 
    if (!calledRun) run();
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data

// === Body ===




function _hash_block_tag($str, $len) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $hval;
      $1=$str;
      $2=$len;
      var $3=$2; //@line 123 "src/html_blocks.h"
      $hval=$3; //@line 123 "src/html_blocks.h"
      var $4=$hval; //@line 125 "src/html_blocks.h"
      if ((($4)|0) == 1) {
        __label__ = 4; break;
      }
      else {
      __label__ = 3; break;
      }
      
    case 3: 
      var $6=$1; //@line 128 "src/html_blocks.h"
      var $7=(($6+1)|0); //@line 128 "src/html_blocks.h"
      var $8=HEAPU8[($7)]; //@line 128 "src/html_blocks.h"
      var $9=(($8)&255); //@line 128 "src/html_blocks.h"
      var $10=((($9)+(1))|0); //@line 128 "src/html_blocks.h"
      var $11=((STRING_TABLE._hash_block_tag_asso_values+$10)|0); //@line 128 "src/html_blocks.h"
      var $12=HEAPU8[($11)]; //@line 128 "src/html_blocks.h"
      var $13=(($12)&255); //@line 128 "src/html_blocks.h"
      var $14=$hval; //@line 128 "src/html_blocks.h"
      var $15=((($14)+($13))|0); //@line 128 "src/html_blocks.h"
      $hval=$15; //@line 128 "src/html_blocks.h"
      __label__ = 4; break; //@line 128 "src/html_blocks.h"
    case 4: 
      var $17=$1; //@line 131 "src/html_blocks.h"
      var $18=(($17)|0); //@line 131 "src/html_blocks.h"
      var $19=HEAPU8[($18)]; //@line 131 "src/html_blocks.h"
      var $20=(($19)&255); //@line 131 "src/html_blocks.h"
      var $21=((STRING_TABLE._hash_block_tag_asso_values+$20)|0); //@line 131 "src/html_blocks.h"
      var $22=HEAPU8[($21)]; //@line 131 "src/html_blocks.h"
      var $23=(($22)&255); //@line 131 "src/html_blocks.h"
      var $24=$hval; //@line 131 "src/html_blocks.h"
      var $25=((($24)+($23))|0); //@line 131 "src/html_blocks.h"
      $hval=$25; //@line 131 "src/html_blocks.h"
      __label__ = 5; break; //@line 132 "src/html_blocks.h"
    case 5: 
      var $27=$hval; //@line 134 "src/html_blocks.h"
      ;
      return $27; //@line 134 "src/html_blocks.h"
    default: assert(0, "bad label: " + __label__);
  }
}


function _find_block_tag($str, $len) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $key;
      var $s;
      $2=$str;
      $3=$len;
      var $4=$3; //@line 193 "src/html_blocks.h"
      var $5=(($4)>>>0) <= 10; //@line 193 "src/html_blocks.h"
      if ($5) { __label__ = 3; break; } else { __label__ = 12; break; } //@line 193 "src/html_blocks.h"
    case 3: 
      var $7=$3; //@line 193 "src/html_blocks.h"
      var $8=(($7)>>>0) >= 1; //@line 193 "src/html_blocks.h"
      if ($8) { __label__ = 4; break; } else { __label__ = 12; break; } //@line 193 "src/html_blocks.h"
    case 4: 
      var $10=$2; //@line 195 "src/html_blocks.h"
      var $11=$3; //@line 195 "src/html_blocks.h"
      var $12=_hash_block_tag($10, $11); //@line 195 "src/html_blocks.h"
      $key=$12; //@line 195 "src/html_blocks.h"
      var $13=$key; //@line 197 "src/html_blocks.h"
      var $14=(($13)|0) <= 37; //@line 197 "src/html_blocks.h"
      if ($14) { __label__ = 5; break; } else { __label__ = 11; break; } //@line 197 "src/html_blocks.h"
    case 5: 
      var $16=$key; //@line 197 "src/html_blocks.h"
      var $17=(($16)|0) >= 0; //@line 197 "src/html_blocks.h"
      if ($17) { __label__ = 6; break; } else { __label__ = 11; break; } //@line 197 "src/html_blocks.h"
    case 6: 
      var $19=$key; //@line 199 "src/html_blocks.h"
      var $20=((_find_block_tag_wordlist+($19<<2))|0); //@line 199 "src/html_blocks.h"
      var $21=HEAP32[(($20)>>2)]; //@line 199 "src/html_blocks.h"
      $s=$21; //@line 199 "src/html_blocks.h"
      var $22=$2; //@line 201 "src/html_blocks.h"
      var $23=HEAPU8[($22)]; //@line 201 "src/html_blocks.h"
      var $24=(($23)&255); //@line 201 "src/html_blocks.h"
      var $25=$s; //@line 201 "src/html_blocks.h"
      var $26=HEAPU8[($25)]; //@line 201 "src/html_blocks.h"
      var $27=(($26)&255); //@line 201 "src/html_blocks.h"
      var $28=$24 ^ $27; //@line 201 "src/html_blocks.h"
      var $29=$28 & -33; //@line 201 "src/html_blocks.h"
      var $30=(($29)|0)==0; //@line 201 "src/html_blocks.h"
      if ($30) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 201 "src/html_blocks.h"
    case 7: 
      var $32=$2; //@line 201 "src/html_blocks.h"
      var $33=$s; //@line 201 "src/html_blocks.h"
      var $34=$3; //@line 201 "src/html_blocks.h"
      var $35=_strncasecmp($32, $33, $34); //@line 201 "src/html_blocks.h"
      var $36=(($35)|0)!=0; //@line 201 "src/html_blocks.h"
      if ($36) { __label__ = 10; break; } else { __label__ = 8; break; } //@line 201 "src/html_blocks.h"
    case 8: 
      var $38=$3; //@line 201 "src/html_blocks.h"
      var $39=$s; //@line 201 "src/html_blocks.h"
      var $40=(($39+$38)|0); //@line 201 "src/html_blocks.h"
      var $41=HEAP8[($40)]; //@line 201 "src/html_blocks.h"
      var $42=(($41 << 24) >> 24); //@line 201 "src/html_blocks.h"
      var $43=(($42)|0)==0; //@line 201 "src/html_blocks.h"
      if ($43) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 201 "src/html_blocks.h"
    case 9: 
      var $45=$s; //@line 202 "src/html_blocks.h"
      $1=$45; //@line 202 "src/html_blocks.h"
      __label__ = 13; break; //@line 202 "src/html_blocks.h"
    case 10: 
      __label__ = 11; break; //@line 203 "src/html_blocks.h"
    case 11: 
      __label__ = 12; break; //@line 204 "src/html_blocks.h"
    case 12: 
      $1=0; //@line 205 "src/html_blocks.h"
      __label__ = 13; break; //@line 205 "src/html_blocks.h"
    case 13: 
      var $50=$1; //@line 206 "src/html_blocks.h"
      ;
      return $50; //@line 206 "src/html_blocks.h"
    default: assert(0, "bad label: " + __label__);
  }
}
_find_block_tag["X"]=1;

function _sd_markdown_new($extensions, $max_nesting, $callbacks, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $md;
      $2=$extensions;
      $3=$max_nesting;
      $4=$callbacks;
      $5=$opaque;
      $md=0; //@line 2403 "src/markdown.c"
      var $6=$3; //@line 2405 "src/markdown.c"
      var $7=(($6)>>>0) > 0; //@line 2405 "src/markdown.c"
      if ($7) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 2405 "src/markdown.c"
    case 3: 
      var $9=$4; //@line 2405 "src/markdown.c"
      var $10=(($9)|0)!=0; //@line 2405 "src/markdown.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 2405 "src/markdown.c"
    case 4: 
      __label__ = 6; break; //@line 2405 "src/markdown.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str25)|0), 2405, ((STRING_TABLE.___func___sd_markdown_new)|0), ((STRING_TABLE.__str26)|0)); //@line 2405 "src/markdown.c"
      __label__ = 6; break; //@line 2405 "src/markdown.c"
    case 6: 
      var $14=_malloc(432); //@line 2407 "src/markdown.c"
      var $15=$14; //@line 2407 "src/markdown.c"
      $md=$15; //@line 2407 "src/markdown.c"
      var $16=$md; //@line 2408 "src/markdown.c"
      var $17=(($16)|0)!=0; //@line 2408 "src/markdown.c"
      if ($17) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 2408 "src/markdown.c"
    case 7: 
      $1=0; //@line 2409 "src/markdown.c"
      __label__ = 26; break; //@line 2409 "src/markdown.c"
    case 8: 
      var $20=$md; //@line 2411 "src/markdown.c"
      var $21=(($20)|0); //@line 2411 "src/markdown.c"
      var $22=$21; //@line 2411 "src/markdown.c"
      var $23=$4; //@line 2411 "src/markdown.c"
      var $24=$23; //@line 2411 "src/markdown.c"
      assert(104 % 1 === 0, 'memcpy given ' + 104 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');for (var $$src = $24>>2, $$dest = $22>>2, $$stop = $$src + 26; $$src < $$stop; $$src++, $$dest++) {
        HEAP32[$$dest] = HEAP32[$$src]
      }; //@line 2411 "src/markdown.c"
      var $25=$md; //@line 2413 "src/markdown.c"
      var $26=(($25+396)|0); //@line 2413 "src/markdown.c"
      var $27=(($26)|0); //@line 2413 "src/markdown.c"
      var $28=_stack_init($27, 4); //@line 2413 "src/markdown.c"
      var $29=$md; //@line 2414 "src/markdown.c"
      var $30=(($29+396)|0); //@line 2414 "src/markdown.c"
      var $31=(($30+12)|0); //@line 2414 "src/markdown.c"
      var $32=_stack_init($31, 8); //@line 2414 "src/markdown.c"
      var $33=$md; //@line 2416 "src/markdown.c"
      var $34=(($33+140)|0); //@line 2416 "src/markdown.c"
      var $35=(($34)|0); //@line 2416 "src/markdown.c"
      _memset($35, 0, 256, 1); //@line 2416 "src/markdown.c"
      var $36=$md; //@line 2418 "src/markdown.c"
      var $37=(($36)|0); //@line 2418 "src/markdown.c"
      var $38=(($37+56)|0); //@line 2418 "src/markdown.c"
      var $39=HEAP32[(($38)>>2)]; //@line 2418 "src/markdown.c"
      var $40=(($39)|0)!=0; //@line 2418 "src/markdown.c"
      if ($40) { __label__ = 11; break; } else { __label__ = 9; break; } //@line 2418 "src/markdown.c"
    case 9: 
      var $42=$md; //@line 2418 "src/markdown.c"
      var $43=(($42)|0); //@line 2418 "src/markdown.c"
      var $44=(($43+52)|0); //@line 2418 "src/markdown.c"
      var $45=HEAP32[(($44)>>2)]; //@line 2418 "src/markdown.c"
      var $46=(($45)|0)!=0; //@line 2418 "src/markdown.c"
      if ($46) { __label__ = 11; break; } else { __label__ = 10; break; } //@line 2418 "src/markdown.c"
    case 10: 
      var $48=$md; //@line 2418 "src/markdown.c"
      var $49=(($48)|0); //@line 2418 "src/markdown.c"
      var $50=(($49+76)|0); //@line 2418 "src/markdown.c"
      var $51=HEAP32[(($50)>>2)]; //@line 2418 "src/markdown.c"
      var $52=(($51)|0)!=0; //@line 2418 "src/markdown.c"
      if ($52) { __label__ = 11; break; } else { __label__ = 14; break; } //@line 2418 "src/markdown.c"
    case 11: 
      var $54=$md; //@line 2419 "src/markdown.c"
      var $55=(($54+140)|0); //@line 2419 "src/markdown.c"
      var $56=(($55+42)|0); //@line 2419 "src/markdown.c"
      HEAP8[($56)]=1; //@line 2419 "src/markdown.c"
      var $57=$md; //@line 2420 "src/markdown.c"
      var $58=(($57+140)|0); //@line 2420 "src/markdown.c"
      var $59=(($58+95)|0); //@line 2420 "src/markdown.c"
      HEAP8[($59)]=1; //@line 2420 "src/markdown.c"
      var $60=$2; //@line 2421 "src/markdown.c"
      var $61=$60 & 16; //@line 2421 "src/markdown.c"
      var $62=(($61)|0)!=0; //@line 2421 "src/markdown.c"
      if ($62) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 2421 "src/markdown.c"
    case 12: 
      var $64=$md; //@line 2422 "src/markdown.c"
      var $65=(($64+140)|0); //@line 2422 "src/markdown.c"
      var $66=(($65+126)|0); //@line 2422 "src/markdown.c"
      HEAP8[($66)]=1; //@line 2422 "src/markdown.c"
      __label__ = 13; break; //@line 2422 "src/markdown.c"
    case 13: 
      __label__ = 14; break; //@line 2423 "src/markdown.c"
    case 14: 
      var $69=$md; //@line 2425 "src/markdown.c"
      var $70=(($69)|0); //@line 2425 "src/markdown.c"
      var $71=(($70+48)|0); //@line 2425 "src/markdown.c"
      var $72=HEAP32[(($71)>>2)]; //@line 2425 "src/markdown.c"
      var $73=(($72)|0)!=0; //@line 2425 "src/markdown.c"
      if ($73) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 2425 "src/markdown.c"
    case 15: 
      var $75=$md; //@line 2426 "src/markdown.c"
      var $76=(($75+140)|0); //@line 2426 "src/markdown.c"
      var $77=(($76+96)|0); //@line 2426 "src/markdown.c"
      HEAP8[($77)]=2; //@line 2426 "src/markdown.c"
      __label__ = 16; break; //@line 2426 "src/markdown.c"
    case 16: 
      var $79=$md; //@line 2428 "src/markdown.c"
      var $80=(($79)|0); //@line 2428 "src/markdown.c"
      var $81=(($80+64)|0); //@line 2428 "src/markdown.c"
      var $82=HEAP32[(($81)>>2)]; //@line 2428 "src/markdown.c"
      var $83=(($82)|0)!=0; //@line 2428 "src/markdown.c"
      if ($83) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 2428 "src/markdown.c"
    case 17: 
      var $85=$md; //@line 2429 "src/markdown.c"
      var $86=(($85+140)|0); //@line 2429 "src/markdown.c"
      var $87=(($86+10)|0); //@line 2429 "src/markdown.c"
      HEAP8[($87)]=3; //@line 2429 "src/markdown.c"
      __label__ = 18; break; //@line 2429 "src/markdown.c"
    case 18: 
      var $89=$md; //@line 2431 "src/markdown.c"
      var $90=(($89)|0); //@line 2431 "src/markdown.c"
      var $91=(($90+60)|0); //@line 2431 "src/markdown.c"
      var $92=HEAP32[(($91)>>2)]; //@line 2431 "src/markdown.c"
      var $93=(($92)|0)!=0; //@line 2431 "src/markdown.c"
      if ($93) { __label__ = 20; break; } else { __label__ = 19; break; } //@line 2431 "src/markdown.c"
    case 19: 
      var $95=$md; //@line 2431 "src/markdown.c"
      var $96=(($95)|0); //@line 2431 "src/markdown.c"
      var $97=(($96+68)|0); //@line 2431 "src/markdown.c"
      var $98=HEAP32[(($97)>>2)]; //@line 2431 "src/markdown.c"
      var $99=(($98)|0)!=0; //@line 2431 "src/markdown.c"
      if ($99) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 2431 "src/markdown.c"
    case 20: 
      var $101=$md; //@line 2432 "src/markdown.c"
      var $102=(($101+140)|0); //@line 2432 "src/markdown.c"
      var $103=(($102+91)|0); //@line 2432 "src/markdown.c"
      HEAP8[($103)]=4; //@line 2432 "src/markdown.c"
      __label__ = 21; break; //@line 2432 "src/markdown.c"
    case 21: 
      var $105=$md; //@line 2434 "src/markdown.c"
      var $106=(($105+140)|0); //@line 2434 "src/markdown.c"
      var $107=(($106+60)|0); //@line 2434 "src/markdown.c"
      HEAP8[($107)]=5; //@line 2434 "src/markdown.c"
      var $108=$md; //@line 2435 "src/markdown.c"
      var $109=(($108+140)|0); //@line 2435 "src/markdown.c"
      var $110=(($109+92)|0); //@line 2435 "src/markdown.c"
      HEAP8[($110)]=6; //@line 2435 "src/markdown.c"
      var $111=$md; //@line 2436 "src/markdown.c"
      var $112=(($111+140)|0); //@line 2436 "src/markdown.c"
      var $113=(($112+38)|0); //@line 2436 "src/markdown.c"
      HEAP8[($113)]=7; //@line 2436 "src/markdown.c"
      var $114=$2; //@line 2438 "src/markdown.c"
      var $115=$114 & 8; //@line 2438 "src/markdown.c"
      var $116=(($115)|0)!=0; //@line 2438 "src/markdown.c"
      if ($116) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 2438 "src/markdown.c"
    case 22: 
      var $118=$md; //@line 2439 "src/markdown.c"
      var $119=(($118+140)|0); //@line 2439 "src/markdown.c"
      var $120=(($119+58)|0); //@line 2439 "src/markdown.c"
      HEAP8[($120)]=8; //@line 2439 "src/markdown.c"
      var $121=$md; //@line 2440 "src/markdown.c"
      var $122=(($121+140)|0); //@line 2440 "src/markdown.c"
      var $123=(($122+64)|0); //@line 2440 "src/markdown.c"
      HEAP8[($123)]=9; //@line 2440 "src/markdown.c"
      var $124=$md; //@line 2441 "src/markdown.c"
      var $125=(($124+140)|0); //@line 2441 "src/markdown.c"
      var $126=(($125+119)|0); //@line 2441 "src/markdown.c"
      HEAP8[($126)]=10; //@line 2441 "src/markdown.c"
      __label__ = 23; break; //@line 2442 "src/markdown.c"
    case 23: 
      var $128=$2; //@line 2444 "src/markdown.c"
      var $129=$128 & 128; //@line 2444 "src/markdown.c"
      var $130=(($129)|0)!=0; //@line 2444 "src/markdown.c"
      if ($130) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 2444 "src/markdown.c"
    case 24: 
      var $132=$md; //@line 2445 "src/markdown.c"
      var $133=(($132+140)|0); //@line 2445 "src/markdown.c"
      var $134=(($133+94)|0); //@line 2445 "src/markdown.c"
      HEAP8[($134)]=11; //@line 2445 "src/markdown.c"
      __label__ = 25; break; //@line 2445 "src/markdown.c"
    case 25: 
      var $136=$2; //@line 2448 "src/markdown.c"
      var $137=$md; //@line 2448 "src/markdown.c"
      var $138=(($137+420)|0); //@line 2448 "src/markdown.c"
      HEAP32[(($138)>>2)]=$136; //@line 2448 "src/markdown.c"
      var $139=$5; //@line 2449 "src/markdown.c"
      var $140=$md; //@line 2449 "src/markdown.c"
      var $141=(($140+104)|0); //@line 2449 "src/markdown.c"
      HEAP32[(($141)>>2)]=$139; //@line 2449 "src/markdown.c"
      var $142=$3; //@line 2450 "src/markdown.c"
      var $143=$md; //@line 2450 "src/markdown.c"
      var $144=(($143+424)|0); //@line 2450 "src/markdown.c"
      HEAP32[(($144)>>2)]=$142; //@line 2450 "src/markdown.c"
      var $145=$md; //@line 2451 "src/markdown.c"
      var $146=(($145+428)|0); //@line 2451 "src/markdown.c"
      HEAP32[(($146)>>2)]=0; //@line 2451 "src/markdown.c"
      var $147=$md; //@line 2453 "src/markdown.c"
      $1=$147; //@line 2453 "src/markdown.c"
      __label__ = 26; break; //@line 2453 "src/markdown.c"
    case 26: 
      var $149=$1; //@line 2454 "src/markdown.c"
      ;
      return $149; //@line 2454 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sd_markdown_new["X"]=1;

function _sd_markdown_render($ob, $document, $doc_size, $md) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $text;
      var $beg;
      var $end=__stackBase__;
      $1=$ob;
      $2=$document;
      $3=$doc_size;
      $4=$md;
      var $5=_bufnew(64); //@line 2465 "src/markdown.c"
      $text=$5; //@line 2465 "src/markdown.c"
      var $6=$text; //@line 2466 "src/markdown.c"
      var $7=(($6)|0)!=0; //@line 2466 "src/markdown.c"
      if ($7) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 2466 "src/markdown.c"
    case 3: 
      __label__ = 47; break; //@line 2467 "src/markdown.c"
    case 4: 
      var $10=$text; //@line 2470 "src/markdown.c"
      var $11=$3; //@line 2470 "src/markdown.c"
      var $12=_bufgrow($10, $11); //@line 2470 "src/markdown.c"
      var $13=$4; //@line 2473 "src/markdown.c"
      var $14=(($13+108)|0); //@line 2473 "src/markdown.c"
      var $15=$14; //@line 2473 "src/markdown.c"
      HEAP32[(($15)>>2)]=0; HEAP32[((($15)+(4))>>2)]=0; HEAP32[((($15)+(8))>>2)]=0; HEAP32[((($15)+(12))>>2)]=0; HEAP32[((($15)+(16))>>2)]=0; HEAP32[((($15)+(20))>>2)]=0; HEAP32[((($15)+(24))>>2)]=0; HEAP32[((($15)+(28))>>2)]=0; //@line 2473 "src/markdown.c"
      $beg=0; //@line 2476 "src/markdown.c"
      var $16=$3; //@line 2480 "src/markdown.c"
      var $17=(($16)>>>0) >= 3; //@line 2480 "src/markdown.c"
      if ($17) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 2480 "src/markdown.c"
    case 5: 
      var $19=$2; //@line 2480 "src/markdown.c"
      var $20=_memcmp($19, ((STRING_TABLE._sd_markdown_render_UTF8_BOM)|0), 3); //@line 2480 "src/markdown.c"
      var $21=(($20)|0)==0; //@line 2480 "src/markdown.c"
      if ($21) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 2480 "src/markdown.c"
    case 6: 
      var $23=$beg; //@line 2481 "src/markdown.c"
      var $24=((($23)+(3))|0); //@line 2481 "src/markdown.c"
      $beg=$24; //@line 2481 "src/markdown.c"
      __label__ = 7; break; //@line 2481 "src/markdown.c"
    case 7: 
      __label__ = 8; break; //@line 2483 "src/markdown.c"
    case 8: 
      var $27=$beg; //@line 2483 "src/markdown.c"
      var $28=$3; //@line 2483 "src/markdown.c"
      var $29=(($27)>>>0) < (($28)>>>0); //@line 2483 "src/markdown.c"
      if ($29) { __label__ = 9; break; } else { __label__ = 32; break; } //@line 2483 "src/markdown.c"
    case 9: 
      var $31=$2; //@line 2484 "src/markdown.c"
      var $32=$beg; //@line 2484 "src/markdown.c"
      var $33=$3; //@line 2484 "src/markdown.c"
      var $34=$4; //@line 2484 "src/markdown.c"
      var $35=(($34+108)|0); //@line 2484 "src/markdown.c"
      var $36=(($35)|0); //@line 2484 "src/markdown.c"
      var $37=_is_ref($31, $32, $33, $end, $36); //@line 2484 "src/markdown.c"
      var $38=(($37)|0)!=0; //@line 2484 "src/markdown.c"
      if ($38) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 2484 "src/markdown.c"
    case 10: 
      var $40=HEAP32[(($end)>>2)]; //@line 2485 "src/markdown.c"
      $beg=$40; //@line 2485 "src/markdown.c"
      __label__ = 31; break; //@line 2485 "src/markdown.c"
    case 11: 
      var $42=$beg; //@line 2487 "src/markdown.c"
      HEAP32[(($end)>>2)]=$42; //@line 2487 "src/markdown.c"
      __label__ = 12; break; //@line 2488 "src/markdown.c"
    case 12: 
      var $44=HEAPU32[(($end)>>2)]; //@line 2488 "src/markdown.c"
      var $45=$3; //@line 2488 "src/markdown.c"
      var $46=(($44)>>>0) < (($45)>>>0); //@line 2488 "src/markdown.c"
      if ($46) { __label__ = 13; break; } else { var $62 = 0;__label__ = 15; break; } //@line 2488 "src/markdown.c"
    case 13: 
      var $48=HEAP32[(($end)>>2)]; //@line 2488 "src/markdown.c"
      var $49=$2; //@line 2488 "src/markdown.c"
      var $50=(($49+$48)|0); //@line 2488 "src/markdown.c"
      var $51=HEAPU8[($50)]; //@line 2488 "src/markdown.c"
      var $52=(($51)&255); //@line 2488 "src/markdown.c"
      var $53=(($52)|0)!=10; //@line 2488 "src/markdown.c"
      if ($53) { __label__ = 14; break; } else { var $62 = 0;__label__ = 15; break; } //@line 2488 "src/markdown.c"
    case 14: 
      var $55=HEAP32[(($end)>>2)]; //@line 2488 "src/markdown.c"
      var $56=$2; //@line 2488 "src/markdown.c"
      var $57=(($56+$55)|0); //@line 2488 "src/markdown.c"
      var $58=HEAPU8[($57)]; //@line 2488 "src/markdown.c"
      var $59=(($58)&255); //@line 2488 "src/markdown.c"
      var $60=(($59)|0)!=13; //@line 2488 "src/markdown.c"
      var $62 = $60;__label__ = 15; break;
    case 15: 
      var $62;
      if ($62) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $64=HEAP32[(($end)>>2)]; //@line 2489 "src/markdown.c"
      var $65=((($64)+(1))|0); //@line 2489 "src/markdown.c"
      HEAP32[(($end)>>2)]=$65; //@line 2489 "src/markdown.c"
      __label__ = 12; break; //@line 2489 "src/markdown.c"
    case 17: 
      var $67=HEAPU32[(($end)>>2)]; //@line 2492 "src/markdown.c"
      var $68=$beg; //@line 2492 "src/markdown.c"
      var $69=(($67)>>>0) > (($68)>>>0); //@line 2492 "src/markdown.c"
      if ($69) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 2492 "src/markdown.c"
    case 18: 
      var $71=$text; //@line 2493 "src/markdown.c"
      var $72=$2; //@line 2493 "src/markdown.c"
      var $73=$beg; //@line 2493 "src/markdown.c"
      var $74=(($72+$73)|0); //@line 2493 "src/markdown.c"
      var $75=HEAP32[(($end)>>2)]; //@line 2493 "src/markdown.c"
      var $76=$beg; //@line 2493 "src/markdown.c"
      var $77=((($75)-($76))|0); //@line 2493 "src/markdown.c"
      _expand_tabs($71, $74, $77); //@line 2493 "src/markdown.c"
      __label__ = 19; break; //@line 2493 "src/markdown.c"
    case 19: 
      __label__ = 20; break; //@line 2495 "src/markdown.c"
    case 20: 
      var $80=HEAPU32[(($end)>>2)]; //@line 2495 "src/markdown.c"
      var $81=$3; //@line 2495 "src/markdown.c"
      var $82=(($80)>>>0) < (($81)>>>0); //@line 2495 "src/markdown.c"
      if ($82) { __label__ = 21; break; } else { var $100 = 0;__label__ = 24; break; } //@line 2495 "src/markdown.c"
    case 21: 
      var $84=HEAP32[(($end)>>2)]; //@line 2495 "src/markdown.c"
      var $85=$2; //@line 2495 "src/markdown.c"
      var $86=(($85+$84)|0); //@line 2495 "src/markdown.c"
      var $87=HEAPU8[($86)]; //@line 2495 "src/markdown.c"
      var $88=(($87)&255); //@line 2495 "src/markdown.c"
      var $89=(($88)|0)==10; //@line 2495 "src/markdown.c"
      if ($89) { var $98 = 1;__label__ = 23; break; } else { __label__ = 22; break; } //@line 2495 "src/markdown.c"
    case 22: 
      var $91=HEAP32[(($end)>>2)]; //@line 2495 "src/markdown.c"
      var $92=$2; //@line 2495 "src/markdown.c"
      var $93=(($92+$91)|0); //@line 2495 "src/markdown.c"
      var $94=HEAPU8[($93)]; //@line 2495 "src/markdown.c"
      var $95=(($94)&255); //@line 2495 "src/markdown.c"
      var $96=(($95)|0)==13; //@line 2495 "src/markdown.c"
      var $98 = $96;__label__ = 23; break; //@line 2495 "src/markdown.c"
    case 23: 
      var $98;
      var $100 = $98;__label__ = 24; break;
    case 24: 
      var $100;
      if ($100) { __label__ = 25; break; } else { __label__ = 30; break; }
    case 25: 
      var $102=HEAP32[(($end)>>2)]; //@line 2497 "src/markdown.c"
      var $103=$2; //@line 2497 "src/markdown.c"
      var $104=(($103+$102)|0); //@line 2497 "src/markdown.c"
      var $105=HEAPU8[($104)]; //@line 2497 "src/markdown.c"
      var $106=(($105)&255); //@line 2497 "src/markdown.c"
      var $107=(($106)|0)==10; //@line 2497 "src/markdown.c"
      if ($107) { __label__ = 28; break; } else { __label__ = 26; break; } //@line 2497 "src/markdown.c"
    case 26: 
      var $109=HEAP32[(($end)>>2)]; //@line 2497 "src/markdown.c"
      var $110=((($109)+(1))|0); //@line 2497 "src/markdown.c"
      var $111=$3; //@line 2497 "src/markdown.c"
      var $112=(($110)>>>0) < (($111)>>>0); //@line 2497 "src/markdown.c"
      if ($112) { __label__ = 27; break; } else { __label__ = 29; break; } //@line 2497 "src/markdown.c"
    case 27: 
      var $114=HEAP32[(($end)>>2)]; //@line 2497 "src/markdown.c"
      var $115=((($114)+(1))|0); //@line 2497 "src/markdown.c"
      var $116=$2; //@line 2497 "src/markdown.c"
      var $117=(($116+$115)|0); //@line 2497 "src/markdown.c"
      var $118=HEAPU8[($117)]; //@line 2497 "src/markdown.c"
      var $119=(($118)&255); //@line 2497 "src/markdown.c"
      var $120=(($119)|0)!=10; //@line 2497 "src/markdown.c"
      if ($120) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 2497 "src/markdown.c"
    case 28: 
      var $122=$text; //@line 2498 "src/markdown.c"
      _bufputc($122, 10); //@line 2498 "src/markdown.c"
      __label__ = 29; break; //@line 2498 "src/markdown.c"
    case 29: 
      var $124=HEAP32[(($end)>>2)]; //@line 2499 "src/markdown.c"
      var $125=((($124)+(1))|0); //@line 2499 "src/markdown.c"
      HEAP32[(($end)>>2)]=$125; //@line 2499 "src/markdown.c"
      __label__ = 20; break; //@line 2500 "src/markdown.c"
    case 30: 
      var $127=HEAP32[(($end)>>2)]; //@line 2502 "src/markdown.c"
      $beg=$127; //@line 2502 "src/markdown.c"
      __label__ = 31; break;
    case 31: 
      __label__ = 8; break;
    case 32: 
      var $130=$1; //@line 2506 "src/markdown.c"
      var $131=$text; //@line 2506 "src/markdown.c"
      var $132=(($131+4)|0); //@line 2506 "src/markdown.c"
      var $133=HEAP32[(($132)>>2)]; //@line 2506 "src/markdown.c"
      var $134=$text; //@line 2506 "src/markdown.c"
      var $135=(($134+4)|0); //@line 2506 "src/markdown.c"
      var $136=HEAPU32[(($135)>>2)]; //@line 2506 "src/markdown.c"
      var $137=$136 >>> 1; //@line 2506 "src/markdown.c"
      var $138=((($133)+($137))|0); //@line 2506 "src/markdown.c"
      var $139=_bufgrow($130, $138); //@line 2506 "src/markdown.c"
      var $140=$4; //@line 2509 "src/markdown.c"
      var $141=(($140)|0); //@line 2509 "src/markdown.c"
      var $142=(($141+96)|0); //@line 2509 "src/markdown.c"
      var $143=HEAP32[(($142)>>2)]; //@line 2509 "src/markdown.c"
      var $144=(($143)|0)!=0; //@line 2509 "src/markdown.c"
      if ($144) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 2509 "src/markdown.c"
    case 33: 
      var $146=$4; //@line 2510 "src/markdown.c"
      var $147=(($146)|0); //@line 2510 "src/markdown.c"
      var $148=(($147+96)|0); //@line 2510 "src/markdown.c"
      var $149=HEAP32[(($148)>>2)]; //@line 2510 "src/markdown.c"
      var $150=$1; //@line 2510 "src/markdown.c"
      var $151=$4; //@line 2510 "src/markdown.c"
      var $152=(($151+104)|0); //@line 2510 "src/markdown.c"
      var $153=HEAP32[(($152)>>2)]; //@line 2510 "src/markdown.c"
      FUNCTION_TABLE[$149]($150, $153); //@line 2510 "src/markdown.c"
      __label__ = 34; break; //@line 2510 "src/markdown.c"
    case 34: 
      var $155=$text; //@line 2512 "src/markdown.c"
      var $156=(($155+4)|0); //@line 2512 "src/markdown.c"
      var $157=HEAP32[(($156)>>2)]; //@line 2512 "src/markdown.c"
      var $158=(($157)|0)!=0; //@line 2512 "src/markdown.c"
      if ($158) { __label__ = 35; break; } else { __label__ = 39; break; } //@line 2512 "src/markdown.c"
    case 35: 
      var $160=$text; //@line 2514 "src/markdown.c"
      var $161=(($160+4)|0); //@line 2514 "src/markdown.c"
      var $162=HEAP32[(($161)>>2)]; //@line 2514 "src/markdown.c"
      var $163=((($162)-(1))|0); //@line 2514 "src/markdown.c"
      var $164=$text; //@line 2514 "src/markdown.c"
      var $165=(($164)|0); //@line 2514 "src/markdown.c"
      var $166=HEAP32[(($165)>>2)]; //@line 2514 "src/markdown.c"
      var $167=(($166+$163)|0); //@line 2514 "src/markdown.c"
      var $168=HEAPU8[($167)]; //@line 2514 "src/markdown.c"
      var $169=(($168)&255); //@line 2514 "src/markdown.c"
      var $170=(($169)|0)!=10; //@line 2514 "src/markdown.c"
      if ($170) { __label__ = 36; break; } else { __label__ = 38; break; } //@line 2514 "src/markdown.c"
    case 36: 
      var $172=$text; //@line 2514 "src/markdown.c"
      var $173=(($172+4)|0); //@line 2514 "src/markdown.c"
      var $174=HEAP32[(($173)>>2)]; //@line 2514 "src/markdown.c"
      var $175=((($174)-(1))|0); //@line 2514 "src/markdown.c"
      var $176=$text; //@line 2514 "src/markdown.c"
      var $177=(($176)|0); //@line 2514 "src/markdown.c"
      var $178=HEAP32[(($177)>>2)]; //@line 2514 "src/markdown.c"
      var $179=(($178+$175)|0); //@line 2514 "src/markdown.c"
      var $180=HEAPU8[($179)]; //@line 2514 "src/markdown.c"
      var $181=(($180)&255); //@line 2514 "src/markdown.c"
      var $182=(($181)|0)!=13; //@line 2514 "src/markdown.c"
      if ($182) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 2514 "src/markdown.c"
    case 37: 
      var $184=$text; //@line 2515 "src/markdown.c"
      _bufputc($184, 10); //@line 2515 "src/markdown.c"
      __label__ = 38; break; //@line 2515 "src/markdown.c"
    case 38: 
      var $186=$1; //@line 2517 "src/markdown.c"
      var $187=$4; //@line 2517 "src/markdown.c"
      var $188=$text; //@line 2517 "src/markdown.c"
      var $189=(($188)|0); //@line 2517 "src/markdown.c"
      var $190=HEAP32[(($189)>>2)]; //@line 2517 "src/markdown.c"
      var $191=$text; //@line 2517 "src/markdown.c"
      var $192=(($191+4)|0); //@line 2517 "src/markdown.c"
      var $193=HEAP32[(($192)>>2)]; //@line 2517 "src/markdown.c"
      _parse_block($186, $187, $190, $193); //@line 2517 "src/markdown.c"
      __label__ = 39; break; //@line 2518 "src/markdown.c"
    case 39: 
      var $195=$4; //@line 2520 "src/markdown.c"
      var $196=(($195)|0); //@line 2520 "src/markdown.c"
      var $197=(($196+100)|0); //@line 2520 "src/markdown.c"
      var $198=HEAP32[(($197)>>2)]; //@line 2520 "src/markdown.c"
      var $199=(($198)|0)!=0; //@line 2520 "src/markdown.c"
      if ($199) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 2520 "src/markdown.c"
    case 40: 
      var $201=$4; //@line 2521 "src/markdown.c"
      var $202=(($201)|0); //@line 2521 "src/markdown.c"
      var $203=(($202+100)|0); //@line 2521 "src/markdown.c"
      var $204=HEAP32[(($203)>>2)]; //@line 2521 "src/markdown.c"
      var $205=$1; //@line 2521 "src/markdown.c"
      var $206=$4; //@line 2521 "src/markdown.c"
      var $207=(($206+104)|0); //@line 2521 "src/markdown.c"
      var $208=HEAP32[(($207)>>2)]; //@line 2521 "src/markdown.c"
      FUNCTION_TABLE[$204]($205, $208); //@line 2521 "src/markdown.c"
      __label__ = 41; break; //@line 2521 "src/markdown.c"
    case 41: 
      var $210=$text; //@line 2524 "src/markdown.c"
      _bufrelease($210); //@line 2524 "src/markdown.c"
      var $211=$4; //@line 2525 "src/markdown.c"
      var $212=(($211+108)|0); //@line 2525 "src/markdown.c"
      var $213=(($212)|0); //@line 2525 "src/markdown.c"
      _free_link_refs($213); //@line 2525 "src/markdown.c"
      var $214=$4; //@line 2527 "src/markdown.c"
      var $215=(($214+396)|0); //@line 2527 "src/markdown.c"
      var $216=(($215+12)|0); //@line 2527 "src/markdown.c"
      var $217=(($216+4)|0); //@line 2527 "src/markdown.c"
      var $218=HEAP32[(($217)>>2)]; //@line 2527 "src/markdown.c"
      var $219=(($218)|0)==0; //@line 2527 "src/markdown.c"
      if ($219) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 2527 "src/markdown.c"
    case 42: 
      __label__ = 44; break; //@line 2527 "src/markdown.c"
    case 43: 
      ___assert_func(((STRING_TABLE.__str25)|0), 2527, ((STRING_TABLE.___func___sd_markdown_render)|0), ((STRING_TABLE.__str27)|0)); //@line 2527 "src/markdown.c"
      __label__ = 44; break; //@line 2527 "src/markdown.c"
    case 44: 
      var $223=$4; //@line 2528 "src/markdown.c"
      var $224=(($223+396)|0); //@line 2528 "src/markdown.c"
      var $225=(($224)|0); //@line 2528 "src/markdown.c"
      var $226=(($225+4)|0); //@line 2528 "src/markdown.c"
      var $227=HEAP32[(($226)>>2)]; //@line 2528 "src/markdown.c"
      var $228=(($227)|0)==0; //@line 2528 "src/markdown.c"
      if ($228) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 2528 "src/markdown.c"
    case 45: 
      __label__ = 47; break; //@line 2528 "src/markdown.c"
    case 46: 
      ___assert_func(((STRING_TABLE.__str25)|0), 2528, ((STRING_TABLE.___func___sd_markdown_render)|0), ((STRING_TABLE.__str28)|0)); //@line 2528 "src/markdown.c"
      __label__ = 47; break; //@line 2528 "src/markdown.c"
    case 47: 
      STACKTOP = __stackBase__;
      return; //@line 2529 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sd_markdown_render["X"]=1;

function _is_ref($data, $beg, $end, $last, $refs) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $i;
      var $id_offset;
      var $id_end;
      var $link_offset;
      var $link_end;
      var $title_offset;
      var $title_end;
      var $line_end;
      var $ref;
      $2=$data;
      $3=$beg;
      $4=$end;
      $5=$last;
      $6=$refs;
      $i=0; //@line 2258 "src/markdown.c"
      var $7=$3; //@line 2265 "src/markdown.c"
      var $8=((($7)+(3))|0); //@line 2265 "src/markdown.c"
      var $9=$4; //@line 2265 "src/markdown.c"
      var $10=(($8)>>>0) >= (($9)>>>0); //@line 2265 "src/markdown.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2265 "src/markdown.c"
    case 3: 
      $1=0; //@line 2265 "src/markdown.c"
      __label__ = 124; break; //@line 2265 "src/markdown.c"
    case 4: 
      var $13=$3; //@line 2266 "src/markdown.c"
      var $14=$2; //@line 2266 "src/markdown.c"
      var $15=(($14+$13)|0); //@line 2266 "src/markdown.c"
      var $16=HEAPU8[($15)]; //@line 2266 "src/markdown.c"
      var $17=(($16)&255); //@line 2266 "src/markdown.c"
      var $18=(($17)|0)==32; //@line 2266 "src/markdown.c"
      if ($18) { __label__ = 5; break; } else { __label__ = 12; break; } //@line 2266 "src/markdown.c"
    case 5: 
      $i=1; //@line 2266 "src/markdown.c"
      var $20=$3; //@line 2267 "src/markdown.c"
      var $21=((($20)+(1))|0); //@line 2267 "src/markdown.c"
      var $22=$2; //@line 2267 "src/markdown.c"
      var $23=(($22+$21)|0); //@line 2267 "src/markdown.c"
      var $24=HEAPU8[($23)]; //@line 2267 "src/markdown.c"
      var $25=(($24)&255); //@line 2267 "src/markdown.c"
      var $26=(($25)|0)==32; //@line 2267 "src/markdown.c"
      if ($26) { __label__ = 6; break; } else { __label__ = 11; break; } //@line 2267 "src/markdown.c"
    case 6: 
      $i=2; //@line 2267 "src/markdown.c"
      var $28=$3; //@line 2268 "src/markdown.c"
      var $29=((($28)+(2))|0); //@line 2268 "src/markdown.c"
      var $30=$2; //@line 2268 "src/markdown.c"
      var $31=(($30+$29)|0); //@line 2268 "src/markdown.c"
      var $32=HEAPU8[($31)]; //@line 2268 "src/markdown.c"
      var $33=(($32)&255); //@line 2268 "src/markdown.c"
      var $34=(($33)|0)==32; //@line 2268 "src/markdown.c"
      if ($34) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 2268 "src/markdown.c"
    case 7: 
      $i=3; //@line 2268 "src/markdown.c"
      var $36=$3; //@line 2269 "src/markdown.c"
      var $37=((($36)+(3))|0); //@line 2269 "src/markdown.c"
      var $38=$2; //@line 2269 "src/markdown.c"
      var $39=(($38+$37)|0); //@line 2269 "src/markdown.c"
      var $40=HEAPU8[($39)]; //@line 2269 "src/markdown.c"
      var $41=(($40)&255); //@line 2269 "src/markdown.c"
      var $42=(($41)|0)==32; //@line 2269 "src/markdown.c"
      if ($42) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 2269 "src/markdown.c"
    case 8: 
      $1=0; //@line 2269 "src/markdown.c"
      __label__ = 124; break; //@line 2269 "src/markdown.c"
    case 9: 
      __label__ = 10; break; //@line 2269 "src/markdown.c"
    case 10: 
      __label__ = 11; break; //@line 2269 "src/markdown.c"
    case 11: 
      __label__ = 12; break; //@line 2269 "src/markdown.c"
    case 12: 
      var $48=$3; //@line 2270 "src/markdown.c"
      var $49=$i; //@line 2270 "src/markdown.c"
      var $50=((($49)+($48))|0); //@line 2270 "src/markdown.c"
      $i=$50; //@line 2270 "src/markdown.c"
      var $51=$i; //@line 2273 "src/markdown.c"
      var $52=$2; //@line 2273 "src/markdown.c"
      var $53=(($52+$51)|0); //@line 2273 "src/markdown.c"
      var $54=HEAPU8[($53)]; //@line 2273 "src/markdown.c"
      var $55=(($54)&255); //@line 2273 "src/markdown.c"
      var $56=(($55)|0)!=91; //@line 2273 "src/markdown.c"
      if ($56) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 2273 "src/markdown.c"
    case 13: 
      $1=0; //@line 2273 "src/markdown.c"
      __label__ = 124; break; //@line 2273 "src/markdown.c"
    case 14: 
      var $59=$i; //@line 2274 "src/markdown.c"
      var $60=((($59)+(1))|0); //@line 2274 "src/markdown.c"
      $i=$60; //@line 2274 "src/markdown.c"
      var $61=$i; //@line 2275 "src/markdown.c"
      $id_offset=$61; //@line 2275 "src/markdown.c"
      __label__ = 15; break; //@line 2276 "src/markdown.c"
    case 15: 
      var $63=$i; //@line 2276 "src/markdown.c"
      var $64=$4; //@line 2276 "src/markdown.c"
      var $65=(($63)>>>0) < (($64)>>>0); //@line 2276 "src/markdown.c"
      if ($65) { __label__ = 16; break; } else { var $88 = 0;__label__ = 19; break; } //@line 2276 "src/markdown.c"
    case 16: 
      var $67=$i; //@line 2276 "src/markdown.c"
      var $68=$2; //@line 2276 "src/markdown.c"
      var $69=(($68+$67)|0); //@line 2276 "src/markdown.c"
      var $70=HEAPU8[($69)]; //@line 2276 "src/markdown.c"
      var $71=(($70)&255); //@line 2276 "src/markdown.c"
      var $72=(($71)|0)!=10; //@line 2276 "src/markdown.c"
      if ($72) { __label__ = 17; break; } else { var $88 = 0;__label__ = 19; break; } //@line 2276 "src/markdown.c"
    case 17: 
      var $74=$i; //@line 2276 "src/markdown.c"
      var $75=$2; //@line 2276 "src/markdown.c"
      var $76=(($75+$74)|0); //@line 2276 "src/markdown.c"
      var $77=HEAPU8[($76)]; //@line 2276 "src/markdown.c"
      var $78=(($77)&255); //@line 2276 "src/markdown.c"
      var $79=(($78)|0)!=13; //@line 2276 "src/markdown.c"
      if ($79) { __label__ = 18; break; } else { var $88 = 0;__label__ = 19; break; } //@line 2276 "src/markdown.c"
    case 18: 
      var $81=$i; //@line 2276 "src/markdown.c"
      var $82=$2; //@line 2276 "src/markdown.c"
      var $83=(($82+$81)|0); //@line 2276 "src/markdown.c"
      var $84=HEAPU8[($83)]; //@line 2276 "src/markdown.c"
      var $85=(($84)&255); //@line 2276 "src/markdown.c"
      var $86=(($85)|0)!=93; //@line 2276 "src/markdown.c"
      var $88 = $86;__label__ = 19; break;
    case 19: 
      var $88;
      if ($88) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      var $90=$i; //@line 2277 "src/markdown.c"
      var $91=((($90)+(1))|0); //@line 2277 "src/markdown.c"
      $i=$91; //@line 2277 "src/markdown.c"
      __label__ = 15; break; //@line 2277 "src/markdown.c"
    case 21: 
      var $93=$i; //@line 2278 "src/markdown.c"
      var $94=$4; //@line 2278 "src/markdown.c"
      var $95=(($93)>>>0) >= (($94)>>>0); //@line 2278 "src/markdown.c"
      if ($95) { __label__ = 23; break; } else { __label__ = 22; break; } //@line 2278 "src/markdown.c"
    case 22: 
      var $97=$i; //@line 2278 "src/markdown.c"
      var $98=$2; //@line 2278 "src/markdown.c"
      var $99=(($98+$97)|0); //@line 2278 "src/markdown.c"
      var $100=HEAPU8[($99)]; //@line 2278 "src/markdown.c"
      var $101=(($100)&255); //@line 2278 "src/markdown.c"
      var $102=(($101)|0)!=93; //@line 2278 "src/markdown.c"
      if ($102) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 2278 "src/markdown.c"
    case 23: 
      $1=0; //@line 2278 "src/markdown.c"
      __label__ = 124; break; //@line 2278 "src/markdown.c"
    case 24: 
      var $105=$i; //@line 2279 "src/markdown.c"
      $id_end=$105; //@line 2279 "src/markdown.c"
      var $106=$i; //@line 2282 "src/markdown.c"
      var $107=((($106)+(1))|0); //@line 2282 "src/markdown.c"
      $i=$107; //@line 2282 "src/markdown.c"
      var $108=$i; //@line 2283 "src/markdown.c"
      var $109=$4; //@line 2283 "src/markdown.c"
      var $110=(($108)>>>0) >= (($109)>>>0); //@line 2283 "src/markdown.c"
      if ($110) { __label__ = 26; break; } else { __label__ = 25; break; } //@line 2283 "src/markdown.c"
    case 25: 
      var $112=$i; //@line 2283 "src/markdown.c"
      var $113=$2; //@line 2283 "src/markdown.c"
      var $114=(($113+$112)|0); //@line 2283 "src/markdown.c"
      var $115=HEAPU8[($114)]; //@line 2283 "src/markdown.c"
      var $116=(($115)&255); //@line 2283 "src/markdown.c"
      var $117=(($116)|0)!=58; //@line 2283 "src/markdown.c"
      if ($117) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 2283 "src/markdown.c"
    case 26: 
      $1=0; //@line 2283 "src/markdown.c"
      __label__ = 124; break; //@line 2283 "src/markdown.c"
    case 27: 
      var $120=$i; //@line 2284 "src/markdown.c"
      var $121=((($120)+(1))|0); //@line 2284 "src/markdown.c"
      $i=$121; //@line 2284 "src/markdown.c"
      __label__ = 28; break; //@line 2285 "src/markdown.c"
    case 28: 
      var $123=$i; //@line 2285 "src/markdown.c"
      var $124=$4; //@line 2285 "src/markdown.c"
      var $125=(($123)>>>0) < (($124)>>>0); //@line 2285 "src/markdown.c"
      if ($125) { __label__ = 29; break; } else { var $134 = 0;__label__ = 30; break; } //@line 2285 "src/markdown.c"
    case 29: 
      var $127=$i; //@line 2285 "src/markdown.c"
      var $128=$2; //@line 2285 "src/markdown.c"
      var $129=(($128+$127)|0); //@line 2285 "src/markdown.c"
      var $130=HEAPU8[($129)]; //@line 2285 "src/markdown.c"
      var $131=(($130)&255); //@line 2285 "src/markdown.c"
      var $132=(($131)|0)==32; //@line 2285 "src/markdown.c"
      var $134 = $132;__label__ = 30; break;
    case 30: 
      var $134;
      if ($134) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: 
      var $136=$i; //@line 2285 "src/markdown.c"
      var $137=((($136)+(1))|0); //@line 2285 "src/markdown.c"
      $i=$137; //@line 2285 "src/markdown.c"
      __label__ = 28; break; //@line 2285 "src/markdown.c"
    case 32: 
      var $139=$i; //@line 2286 "src/markdown.c"
      var $140=$4; //@line 2286 "src/markdown.c"
      var $141=(($139)>>>0) < (($140)>>>0); //@line 2286 "src/markdown.c"
      if ($141) { __label__ = 33; break; } else { __label__ = 40; break; } //@line 2286 "src/markdown.c"
    case 33: 
      var $143=$i; //@line 2286 "src/markdown.c"
      var $144=$2; //@line 2286 "src/markdown.c"
      var $145=(($144+$143)|0); //@line 2286 "src/markdown.c"
      var $146=HEAPU8[($145)]; //@line 2286 "src/markdown.c"
      var $147=(($146)&255); //@line 2286 "src/markdown.c"
      var $148=(($147)|0)==10; //@line 2286 "src/markdown.c"
      if ($148) { __label__ = 35; break; } else { __label__ = 34; break; } //@line 2286 "src/markdown.c"
    case 34: 
      var $150=$i; //@line 2286 "src/markdown.c"
      var $151=$2; //@line 2286 "src/markdown.c"
      var $152=(($151+$150)|0); //@line 2286 "src/markdown.c"
      var $153=HEAPU8[($152)]; //@line 2286 "src/markdown.c"
      var $154=(($153)&255); //@line 2286 "src/markdown.c"
      var $155=(($154)|0)==13; //@line 2286 "src/markdown.c"
      if ($155) { __label__ = 35; break; } else { __label__ = 40; break; } //@line 2286 "src/markdown.c"
    case 35: 
      var $157=$i; //@line 2287 "src/markdown.c"
      var $158=((($157)+(1))|0); //@line 2287 "src/markdown.c"
      $i=$158; //@line 2287 "src/markdown.c"
      var $159=$i; //@line 2288 "src/markdown.c"
      var $160=$4; //@line 2288 "src/markdown.c"
      var $161=(($159)>>>0) < (($160)>>>0); //@line 2288 "src/markdown.c"
      if ($161) { __label__ = 36; break; } else { __label__ = 39; break; } //@line 2288 "src/markdown.c"
    case 36: 
      var $163=$i; //@line 2288 "src/markdown.c"
      var $164=$2; //@line 2288 "src/markdown.c"
      var $165=(($164+$163)|0); //@line 2288 "src/markdown.c"
      var $166=HEAPU8[($165)]; //@line 2288 "src/markdown.c"
      var $167=(($166)&255); //@line 2288 "src/markdown.c"
      var $168=(($167)|0)==13; //@line 2288 "src/markdown.c"
      if ($168) { __label__ = 37; break; } else { __label__ = 39; break; } //@line 2288 "src/markdown.c"
    case 37: 
      var $170=$i; //@line 2288 "src/markdown.c"
      var $171=((($170)-(1))|0); //@line 2288 "src/markdown.c"
      var $172=$2; //@line 2288 "src/markdown.c"
      var $173=(($172+$171)|0); //@line 2288 "src/markdown.c"
      var $174=HEAPU8[($173)]; //@line 2288 "src/markdown.c"
      var $175=(($174)&255); //@line 2288 "src/markdown.c"
      var $176=(($175)|0)==10; //@line 2288 "src/markdown.c"
      if ($176) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 2288 "src/markdown.c"
    case 38: 
      var $178=$i; //@line 2288 "src/markdown.c"
      var $179=((($178)+(1))|0); //@line 2288 "src/markdown.c"
      $i=$179; //@line 2288 "src/markdown.c"
      __label__ = 39; break; //@line 2288 "src/markdown.c"
    case 39: 
      __label__ = 40; break; //@line 2288 "src/markdown.c"
    case 40: 
      __label__ = 41; break; //@line 2289 "src/markdown.c"
    case 41: 
      var $183=$i; //@line 2289 "src/markdown.c"
      var $184=$4; //@line 2289 "src/markdown.c"
      var $185=(($183)>>>0) < (($184)>>>0); //@line 2289 "src/markdown.c"
      if ($185) { __label__ = 42; break; } else { var $194 = 0;__label__ = 43; break; } //@line 2289 "src/markdown.c"
    case 42: 
      var $187=$i; //@line 2289 "src/markdown.c"
      var $188=$2; //@line 2289 "src/markdown.c"
      var $189=(($188+$187)|0); //@line 2289 "src/markdown.c"
      var $190=HEAPU8[($189)]; //@line 2289 "src/markdown.c"
      var $191=(($190)&255); //@line 2289 "src/markdown.c"
      var $192=(($191)|0)==32; //@line 2289 "src/markdown.c"
      var $194 = $192;__label__ = 43; break;
    case 43: 
      var $194;
      if ($194) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: 
      var $196=$i; //@line 2289 "src/markdown.c"
      var $197=((($196)+(1))|0); //@line 2289 "src/markdown.c"
      $i=$197; //@line 2289 "src/markdown.c"
      __label__ = 41; break; //@line 2289 "src/markdown.c"
    case 45: 
      var $199=$i; //@line 2290 "src/markdown.c"
      var $200=$4; //@line 2290 "src/markdown.c"
      var $201=(($199)>>>0) >= (($200)>>>0); //@line 2290 "src/markdown.c"
      if ($201) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 2290 "src/markdown.c"
    case 46: 
      $1=0; //@line 2290 "src/markdown.c"
      __label__ = 124; break; //@line 2290 "src/markdown.c"
    case 47: 
      var $204=$i; //@line 2293 "src/markdown.c"
      var $205=$2; //@line 2293 "src/markdown.c"
      var $206=(($205+$204)|0); //@line 2293 "src/markdown.c"
      var $207=HEAPU8[($206)]; //@line 2293 "src/markdown.c"
      var $208=(($207)&255); //@line 2293 "src/markdown.c"
      var $209=(($208)|0)==60; //@line 2293 "src/markdown.c"
      if ($209) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 2293 "src/markdown.c"
    case 48: 
      var $211=$i; //@line 2294 "src/markdown.c"
      var $212=((($211)+(1))|0); //@line 2294 "src/markdown.c"
      $i=$212; //@line 2294 "src/markdown.c"
      __label__ = 49; break; //@line 2294 "src/markdown.c"
    case 49: 
      var $214=$i; //@line 2296 "src/markdown.c"
      $link_offset=$214; //@line 2296 "src/markdown.c"
      __label__ = 50; break; //@line 2298 "src/markdown.c"
    case 50: 
      var $216=$i; //@line 2298 "src/markdown.c"
      var $217=$4; //@line 2298 "src/markdown.c"
      var $218=(($216)>>>0) < (($217)>>>0); //@line 2298 "src/markdown.c"
      if ($218) { __label__ = 51; break; } else { var $241 = 0;__label__ = 54; break; } //@line 2298 "src/markdown.c"
    case 51: 
      var $220=$i; //@line 2298 "src/markdown.c"
      var $221=$2; //@line 2298 "src/markdown.c"
      var $222=(($221+$220)|0); //@line 2298 "src/markdown.c"
      var $223=HEAPU8[($222)]; //@line 2298 "src/markdown.c"
      var $224=(($223)&255); //@line 2298 "src/markdown.c"
      var $225=(($224)|0)!=32; //@line 2298 "src/markdown.c"
      if ($225) { __label__ = 52; break; } else { var $241 = 0;__label__ = 54; break; } //@line 2298 "src/markdown.c"
    case 52: 
      var $227=$i; //@line 2298 "src/markdown.c"
      var $228=$2; //@line 2298 "src/markdown.c"
      var $229=(($228+$227)|0); //@line 2298 "src/markdown.c"
      var $230=HEAPU8[($229)]; //@line 2298 "src/markdown.c"
      var $231=(($230)&255); //@line 2298 "src/markdown.c"
      var $232=(($231)|0)!=10; //@line 2298 "src/markdown.c"
      if ($232) { __label__ = 53; break; } else { var $241 = 0;__label__ = 54; break; } //@line 2298 "src/markdown.c"
    case 53: 
      var $234=$i; //@line 2298 "src/markdown.c"
      var $235=$2; //@line 2298 "src/markdown.c"
      var $236=(($235+$234)|0); //@line 2298 "src/markdown.c"
      var $237=HEAPU8[($236)]; //@line 2298 "src/markdown.c"
      var $238=(($237)&255); //@line 2298 "src/markdown.c"
      var $239=(($238)|0)!=13; //@line 2298 "src/markdown.c"
      var $241 = $239;__label__ = 54; break;
    case 54: 
      var $241;
      if ($241) { __label__ = 55; break; } else { __label__ = 56; break; }
    case 55: 
      var $243=$i; //@line 2299 "src/markdown.c"
      var $244=((($243)+(1))|0); //@line 2299 "src/markdown.c"
      $i=$244; //@line 2299 "src/markdown.c"
      __label__ = 50; break; //@line 2299 "src/markdown.c"
    case 56: 
      var $246=$i; //@line 2301 "src/markdown.c"
      var $247=((($246)-(1))|0); //@line 2301 "src/markdown.c"
      var $248=$2; //@line 2301 "src/markdown.c"
      var $249=(($248+$247)|0); //@line 2301 "src/markdown.c"
      var $250=HEAPU8[($249)]; //@line 2301 "src/markdown.c"
      var $251=(($250)&255); //@line 2301 "src/markdown.c"
      var $252=(($251)|0)==62; //@line 2301 "src/markdown.c"
      if ($252) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 2301 "src/markdown.c"
    case 57: 
      var $254=$i; //@line 2301 "src/markdown.c"
      var $255=((($254)-(1))|0); //@line 2301 "src/markdown.c"
      $link_end=$255; //@line 2301 "src/markdown.c"
      __label__ = 59; break; //@line 2301 "src/markdown.c"
    case 58: 
      var $257=$i; //@line 2302 "src/markdown.c"
      $link_end=$257; //@line 2302 "src/markdown.c"
      __label__ = 59; break;
    case 59: 
      __label__ = 60; break; //@line 2305 "src/markdown.c"
    case 60: 
      var $260=$i; //@line 2305 "src/markdown.c"
      var $261=$4; //@line 2305 "src/markdown.c"
      var $262=(($260)>>>0) < (($261)>>>0); //@line 2305 "src/markdown.c"
      if ($262) { __label__ = 61; break; } else { var $271 = 0;__label__ = 62; break; } //@line 2305 "src/markdown.c"
    case 61: 
      var $264=$i; //@line 2305 "src/markdown.c"
      var $265=$2; //@line 2305 "src/markdown.c"
      var $266=(($265+$264)|0); //@line 2305 "src/markdown.c"
      var $267=HEAPU8[($266)]; //@line 2305 "src/markdown.c"
      var $268=(($267)&255); //@line 2305 "src/markdown.c"
      var $269=(($268)|0)==32; //@line 2305 "src/markdown.c"
      var $271 = $269;__label__ = 62; break;
    case 62: 
      var $271;
      if ($271) { __label__ = 63; break; } else { __label__ = 64; break; }
    case 63: 
      var $273=$i; //@line 2305 "src/markdown.c"
      var $274=((($273)+(1))|0); //@line 2305 "src/markdown.c"
      $i=$274; //@line 2305 "src/markdown.c"
      __label__ = 60; break; //@line 2305 "src/markdown.c"
    case 64: 
      var $276=$i; //@line 2306 "src/markdown.c"
      var $277=$4; //@line 2306 "src/markdown.c"
      var $278=(($276)>>>0) < (($277)>>>0); //@line 2306 "src/markdown.c"
      if ($278) { __label__ = 65; break; } else { __label__ = 71; break; } //@line 2306 "src/markdown.c"
    case 65: 
      var $280=$i; //@line 2306 "src/markdown.c"
      var $281=$2; //@line 2306 "src/markdown.c"
      var $282=(($281+$280)|0); //@line 2306 "src/markdown.c"
      var $283=HEAPU8[($282)]; //@line 2306 "src/markdown.c"
      var $284=(($283)&255); //@line 2306 "src/markdown.c"
      var $285=(($284)|0)!=10; //@line 2306 "src/markdown.c"
      if ($285) { __label__ = 66; break; } else { __label__ = 71; break; } //@line 2306 "src/markdown.c"
    case 66: 
      var $287=$i; //@line 2306 "src/markdown.c"
      var $288=$2; //@line 2306 "src/markdown.c"
      var $289=(($288+$287)|0); //@line 2306 "src/markdown.c"
      var $290=HEAPU8[($289)]; //@line 2306 "src/markdown.c"
      var $291=(($290)&255); //@line 2306 "src/markdown.c"
      var $292=(($291)|0)!=13; //@line 2306 "src/markdown.c"
      if ($292) { __label__ = 67; break; } else { __label__ = 71; break; } //@line 2306 "src/markdown.c"
    case 67: 
      var $294=$i; //@line 2306 "src/markdown.c"
      var $295=$2; //@line 2306 "src/markdown.c"
      var $296=(($295+$294)|0); //@line 2306 "src/markdown.c"
      var $297=HEAPU8[($296)]; //@line 2306 "src/markdown.c"
      var $298=(($297)&255); //@line 2306 "src/markdown.c"
      var $299=(($298)|0)!=39; //@line 2306 "src/markdown.c"
      if ($299) { __label__ = 68; break; } else { __label__ = 71; break; } //@line 2306 "src/markdown.c"
    case 68: 
      var $301=$i; //@line 2306 "src/markdown.c"
      var $302=$2; //@line 2306 "src/markdown.c"
      var $303=(($302+$301)|0); //@line 2306 "src/markdown.c"
      var $304=HEAPU8[($303)]; //@line 2306 "src/markdown.c"
      var $305=(($304)&255); //@line 2306 "src/markdown.c"
      var $306=(($305)|0)!=34; //@line 2306 "src/markdown.c"
      if ($306) { __label__ = 69; break; } else { __label__ = 71; break; } //@line 2306 "src/markdown.c"
    case 69: 
      var $308=$i; //@line 2306 "src/markdown.c"
      var $309=$2; //@line 2306 "src/markdown.c"
      var $310=(($309+$308)|0); //@line 2306 "src/markdown.c"
      var $311=HEAPU8[($310)]; //@line 2306 "src/markdown.c"
      var $312=(($311)&255); //@line 2306 "src/markdown.c"
      var $313=(($312)|0)!=40; //@line 2306 "src/markdown.c"
      if ($313) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 2306 "src/markdown.c"
    case 70: 
      $1=0; //@line 2308 "src/markdown.c"
      __label__ = 124; break; //@line 2308 "src/markdown.c"
    case 71: 
      $line_end=0; //@line 2309 "src/markdown.c"
      var $316=$i; //@line 2311 "src/markdown.c"
      var $317=$4; //@line 2311 "src/markdown.c"
      var $318=(($316)>>>0) >= (($317)>>>0); //@line 2311 "src/markdown.c"
      if ($318) { __label__ = 74; break; } else { __label__ = 72; break; } //@line 2311 "src/markdown.c"
    case 72: 
      var $320=$i; //@line 2311 "src/markdown.c"
      var $321=$2; //@line 2311 "src/markdown.c"
      var $322=(($321+$320)|0); //@line 2311 "src/markdown.c"
      var $323=HEAPU8[($322)]; //@line 2311 "src/markdown.c"
      var $324=(($323)&255); //@line 2311 "src/markdown.c"
      var $325=(($324)|0)==13; //@line 2311 "src/markdown.c"
      if ($325) { __label__ = 74; break; } else { __label__ = 73; break; } //@line 2311 "src/markdown.c"
    case 73: 
      var $327=$i; //@line 2311 "src/markdown.c"
      var $328=$2; //@line 2311 "src/markdown.c"
      var $329=(($328+$327)|0); //@line 2311 "src/markdown.c"
      var $330=HEAPU8[($329)]; //@line 2311 "src/markdown.c"
      var $331=(($330)&255); //@line 2311 "src/markdown.c"
      var $332=(($331)|0)==10; //@line 2311 "src/markdown.c"
      if ($332) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 2311 "src/markdown.c"
    case 74: 
      var $334=$i; //@line 2311 "src/markdown.c"
      $line_end=$334; //@line 2311 "src/markdown.c"
      __label__ = 75; break; //@line 2311 "src/markdown.c"
    case 75: 
      var $336=$i; //@line 2312 "src/markdown.c"
      var $337=((($336)+(1))|0); //@line 2312 "src/markdown.c"
      var $338=$4; //@line 2312 "src/markdown.c"
      var $339=(($337)>>>0) < (($338)>>>0); //@line 2312 "src/markdown.c"
      if ($339) { __label__ = 76; break; } else { __label__ = 79; break; } //@line 2312 "src/markdown.c"
    case 76: 
      var $341=$i; //@line 2312 "src/markdown.c"
      var $342=$2; //@line 2312 "src/markdown.c"
      var $343=(($342+$341)|0); //@line 2312 "src/markdown.c"
      var $344=HEAPU8[($343)]; //@line 2312 "src/markdown.c"
      var $345=(($344)&255); //@line 2312 "src/markdown.c"
      var $346=(($345)|0)==10; //@line 2312 "src/markdown.c"
      if ($346) { __label__ = 77; break; } else { __label__ = 79; break; } //@line 2312 "src/markdown.c"
    case 77: 
      var $348=$i; //@line 2312 "src/markdown.c"
      var $349=((($348)+(1))|0); //@line 2312 "src/markdown.c"
      var $350=$2; //@line 2312 "src/markdown.c"
      var $351=(($350+$349)|0); //@line 2312 "src/markdown.c"
      var $352=HEAPU8[($351)]; //@line 2312 "src/markdown.c"
      var $353=(($352)&255); //@line 2312 "src/markdown.c"
      var $354=(($353)|0)==13; //@line 2312 "src/markdown.c"
      if ($354) { __label__ = 78; break; } else { __label__ = 79; break; } //@line 2312 "src/markdown.c"
    case 78: 
      var $356=$i; //@line 2313 "src/markdown.c"
      var $357=((($356)+(1))|0); //@line 2313 "src/markdown.c"
      $line_end=$357; //@line 2313 "src/markdown.c"
      __label__ = 79; break; //@line 2313 "src/markdown.c"
    case 79: 
      var $359=$line_end; //@line 2316 "src/markdown.c"
      var $360=(($359)|0)!=0; //@line 2316 "src/markdown.c"
      if ($360) { __label__ = 80; break; } else { __label__ = 86; break; } //@line 2316 "src/markdown.c"
    case 80: 
      var $362=$line_end; //@line 2317 "src/markdown.c"
      var $363=((($362)+(1))|0); //@line 2317 "src/markdown.c"
      $i=$363; //@line 2317 "src/markdown.c"
      __label__ = 81; break; //@line 2318 "src/markdown.c"
    case 81: 
      var $365=$i; //@line 2318 "src/markdown.c"
      var $366=$4; //@line 2318 "src/markdown.c"
      var $367=(($365)>>>0) < (($366)>>>0); //@line 2318 "src/markdown.c"
      if ($367) { __label__ = 82; break; } else { var $376 = 0;__label__ = 83; break; } //@line 2318 "src/markdown.c"
    case 82: 
      var $369=$i; //@line 2318 "src/markdown.c"
      var $370=$2; //@line 2318 "src/markdown.c"
      var $371=(($370+$369)|0); //@line 2318 "src/markdown.c"
      var $372=HEAPU8[($371)]; //@line 2318 "src/markdown.c"
      var $373=(($372)&255); //@line 2318 "src/markdown.c"
      var $374=(($373)|0)==32; //@line 2318 "src/markdown.c"
      var $376 = $374;__label__ = 83; break;
    case 83: 
      var $376;
      if ($376) { __label__ = 84; break; } else { __label__ = 85; break; }
    case 84: 
      var $378=$i; //@line 2318 "src/markdown.c"
      var $379=((($378)+(1))|0); //@line 2318 "src/markdown.c"
      $i=$379; //@line 2318 "src/markdown.c"
      __label__ = 81; break; //@line 2318 "src/markdown.c"
    case 85: 
      __label__ = 86; break; //@line 2318 "src/markdown.c"
    case 86: 
      $title_end=0; //@line 2322 "src/markdown.c"
      $title_offset=0; //@line 2322 "src/markdown.c"
      var $382=$i; //@line 2323 "src/markdown.c"
      var $383=((($382)+(1))|0); //@line 2323 "src/markdown.c"
      var $384=$4; //@line 2323 "src/markdown.c"
      var $385=(($383)>>>0) < (($384)>>>0); //@line 2323 "src/markdown.c"
      if ($385) { __label__ = 87; break; } else { __label__ = 112; break; } //@line 2323 "src/markdown.c"
    case 87: 
      var $387=$i; //@line 2323 "src/markdown.c"
      var $388=$2; //@line 2323 "src/markdown.c"
      var $389=(($388+$387)|0); //@line 2323 "src/markdown.c"
      var $390=HEAPU8[($389)]; //@line 2323 "src/markdown.c"
      var $391=(($390)&255); //@line 2323 "src/markdown.c"
      var $392=(($391)|0)==39; //@line 2323 "src/markdown.c"
      if ($392) { __label__ = 90; break; } else { __label__ = 88; break; } //@line 2323 "src/markdown.c"
    case 88: 
      var $394=$i; //@line 2323 "src/markdown.c"
      var $395=$2; //@line 2323 "src/markdown.c"
      var $396=(($395+$394)|0); //@line 2323 "src/markdown.c"
      var $397=HEAPU8[($396)]; //@line 2323 "src/markdown.c"
      var $398=(($397)&255); //@line 2323 "src/markdown.c"
      var $399=(($398)|0)==34; //@line 2323 "src/markdown.c"
      if ($399) { __label__ = 90; break; } else { __label__ = 89; break; } //@line 2323 "src/markdown.c"
    case 89: 
      var $401=$i; //@line 2323 "src/markdown.c"
      var $402=$2; //@line 2323 "src/markdown.c"
      var $403=(($402+$401)|0); //@line 2323 "src/markdown.c"
      var $404=HEAPU8[($403)]; //@line 2323 "src/markdown.c"
      var $405=(($404)&255); //@line 2323 "src/markdown.c"
      var $406=(($405)|0)==40; //@line 2323 "src/markdown.c"
      if ($406) { __label__ = 90; break; } else { __label__ = 112; break; } //@line 2323 "src/markdown.c"
    case 90: 
      var $408=$i; //@line 2325 "src/markdown.c"
      var $409=((($408)+(1))|0); //@line 2325 "src/markdown.c"
      $i=$409; //@line 2325 "src/markdown.c"
      var $410=$i; //@line 2326 "src/markdown.c"
      $title_offset=$410; //@line 2326 "src/markdown.c"
      __label__ = 91; break; //@line 2328 "src/markdown.c"
    case 91: 
      var $412=$i; //@line 2328 "src/markdown.c"
      var $413=$4; //@line 2328 "src/markdown.c"
      var $414=(($412)>>>0) < (($413)>>>0); //@line 2328 "src/markdown.c"
      if ($414) { __label__ = 92; break; } else { var $430 = 0;__label__ = 94; break; } //@line 2328 "src/markdown.c"
    case 92: 
      var $416=$i; //@line 2328 "src/markdown.c"
      var $417=$2; //@line 2328 "src/markdown.c"
      var $418=(($417+$416)|0); //@line 2328 "src/markdown.c"
      var $419=HEAPU8[($418)]; //@line 2328 "src/markdown.c"
      var $420=(($419)&255); //@line 2328 "src/markdown.c"
      var $421=(($420)|0)!=10; //@line 2328 "src/markdown.c"
      if ($421) { __label__ = 93; break; } else { var $430 = 0;__label__ = 94; break; } //@line 2328 "src/markdown.c"
    case 93: 
      var $423=$i; //@line 2328 "src/markdown.c"
      var $424=$2; //@line 2328 "src/markdown.c"
      var $425=(($424+$423)|0); //@line 2328 "src/markdown.c"
      var $426=HEAPU8[($425)]; //@line 2328 "src/markdown.c"
      var $427=(($426)&255); //@line 2328 "src/markdown.c"
      var $428=(($427)|0)!=13; //@line 2328 "src/markdown.c"
      var $430 = $428;__label__ = 94; break;
    case 94: 
      var $430;
      if ($430) { __label__ = 95; break; } else { __label__ = 96; break; }
    case 95: 
      var $432=$i; //@line 2328 "src/markdown.c"
      var $433=((($432)+(1))|0); //@line 2328 "src/markdown.c"
      $i=$433; //@line 2328 "src/markdown.c"
      __label__ = 91; break; //@line 2328 "src/markdown.c"
    case 96: 
      var $435=$i; //@line 2329 "src/markdown.c"
      var $436=((($435)+(1))|0); //@line 2329 "src/markdown.c"
      var $437=$4; //@line 2329 "src/markdown.c"
      var $438=(($436)>>>0) < (($437)>>>0); //@line 2329 "src/markdown.c"
      if ($438) { __label__ = 97; break; } else { __label__ = 100; break; } //@line 2329 "src/markdown.c"
    case 97: 
      var $440=$i; //@line 2329 "src/markdown.c"
      var $441=$2; //@line 2329 "src/markdown.c"
      var $442=(($441+$440)|0); //@line 2329 "src/markdown.c"
      var $443=HEAPU8[($442)]; //@line 2329 "src/markdown.c"
      var $444=(($443)&255); //@line 2329 "src/markdown.c"
      var $445=(($444)|0)==10; //@line 2329 "src/markdown.c"
      if ($445) { __label__ = 98; break; } else { __label__ = 100; break; } //@line 2329 "src/markdown.c"
    case 98: 
      var $447=$i; //@line 2329 "src/markdown.c"
      var $448=((($447)+(1))|0); //@line 2329 "src/markdown.c"
      var $449=$2; //@line 2329 "src/markdown.c"
      var $450=(($449+$448)|0); //@line 2329 "src/markdown.c"
      var $451=HEAPU8[($450)]; //@line 2329 "src/markdown.c"
      var $452=(($451)&255); //@line 2329 "src/markdown.c"
      var $453=(($452)|0)==13; //@line 2329 "src/markdown.c"
      if ($453) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 2329 "src/markdown.c"
    case 99: 
      var $455=$i; //@line 2330 "src/markdown.c"
      var $456=((($455)+(1))|0); //@line 2330 "src/markdown.c"
      $title_end=$456; //@line 2330 "src/markdown.c"
      __label__ = 101; break; //@line 2330 "src/markdown.c"
    case 100: 
      var $458=$i; //@line 2331 "src/markdown.c"
      $title_end=$458; //@line 2331 "src/markdown.c"
      __label__ = 101; break;
    case 101: 
      var $460=$i; //@line 2333 "src/markdown.c"
      var $461=((($460)-(1))|0); //@line 2333 "src/markdown.c"
      $i=$461; //@line 2333 "src/markdown.c"
      __label__ = 102; break; //@line 2334 "src/markdown.c"
    case 102: 
      var $463=$i; //@line 2334 "src/markdown.c"
      var $464=$title_offset; //@line 2334 "src/markdown.c"
      var $465=(($463)>>>0) > (($464)>>>0); //@line 2334 "src/markdown.c"
      if ($465) { __label__ = 103; break; } else { var $474 = 0;__label__ = 104; break; } //@line 2334 "src/markdown.c"
    case 103: 
      var $467=$i; //@line 2334 "src/markdown.c"
      var $468=$2; //@line 2334 "src/markdown.c"
      var $469=(($468+$467)|0); //@line 2334 "src/markdown.c"
      var $470=HEAPU8[($469)]; //@line 2334 "src/markdown.c"
      var $471=(($470)&255); //@line 2334 "src/markdown.c"
      var $472=(($471)|0)==32; //@line 2334 "src/markdown.c"
      var $474 = $472;__label__ = 104; break;
    case 104: 
      var $474;
      if ($474) { __label__ = 105; break; } else { __label__ = 106; break; }
    case 105: 
      var $476=$i; //@line 2335 "src/markdown.c"
      var $477=((($476)-(1))|0); //@line 2335 "src/markdown.c"
      $i=$477; //@line 2335 "src/markdown.c"
      __label__ = 102; break; //@line 2335 "src/markdown.c"
    case 106: 
      var $479=$i; //@line 2336 "src/markdown.c"
      var $480=$title_offset; //@line 2336 "src/markdown.c"
      var $481=(($479)>>>0) > (($480)>>>0); //@line 2336 "src/markdown.c"
      if ($481) { __label__ = 107; break; } else { __label__ = 111; break; } //@line 2336 "src/markdown.c"
    case 107: 
      var $483=$i; //@line 2336 "src/markdown.c"
      var $484=$2; //@line 2336 "src/markdown.c"
      var $485=(($484+$483)|0); //@line 2336 "src/markdown.c"
      var $486=HEAPU8[($485)]; //@line 2336 "src/markdown.c"
      var $487=(($486)&255); //@line 2336 "src/markdown.c"
      var $488=(($487)|0)==39; //@line 2336 "src/markdown.c"
      if ($488) { __label__ = 110; break; } else { __label__ = 108; break; } //@line 2336 "src/markdown.c"
    case 108: 
      var $490=$i; //@line 2336 "src/markdown.c"
      var $491=$2; //@line 2336 "src/markdown.c"
      var $492=(($491+$490)|0); //@line 2336 "src/markdown.c"
      var $493=HEAPU8[($492)]; //@line 2336 "src/markdown.c"
      var $494=(($493)&255); //@line 2336 "src/markdown.c"
      var $495=(($494)|0)==34; //@line 2336 "src/markdown.c"
      if ($495) { __label__ = 110; break; } else { __label__ = 109; break; } //@line 2336 "src/markdown.c"
    case 109: 
      var $497=$i; //@line 2336 "src/markdown.c"
      var $498=$2; //@line 2336 "src/markdown.c"
      var $499=(($498+$497)|0); //@line 2336 "src/markdown.c"
      var $500=HEAPU8[($499)]; //@line 2336 "src/markdown.c"
      var $501=(($500)&255); //@line 2336 "src/markdown.c"
      var $502=(($501)|0)==41; //@line 2336 "src/markdown.c"
      if ($502) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 2336 "src/markdown.c"
    case 110: 
      var $504=$title_end; //@line 2338 "src/markdown.c"
      $line_end=$504; //@line 2338 "src/markdown.c"
      var $505=$i; //@line 2339 "src/markdown.c"
      $title_end=$505; //@line 2339 "src/markdown.c"
      __label__ = 111; break; //@line 2339 "src/markdown.c"
    case 111: 
      __label__ = 112; break; //@line 2339 "src/markdown.c"
    case 112: 
      var $508=$line_end; //@line 2341 "src/markdown.c"
      var $509=(($508)|0)!=0; //@line 2341 "src/markdown.c"
      if ($509) { __label__ = 113; break; } else { __label__ = 114; break; } //@line 2341 "src/markdown.c"
    case 113: 
      var $511=$link_end; //@line 2341 "src/markdown.c"
      var $512=$link_offset; //@line 2341 "src/markdown.c"
      var $513=(($511)|0)==(($512)|0); //@line 2341 "src/markdown.c"
      if ($513) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 2341 "src/markdown.c"
    case 114: 
      $1=0; //@line 2342 "src/markdown.c"
      __label__ = 124; break; //@line 2342 "src/markdown.c"
    case 115: 
      var $516=$5; //@line 2345 "src/markdown.c"
      var $517=(($516)|0)!=0; //@line 2345 "src/markdown.c"
      if ($517) { __label__ = 116; break; } else { __label__ = 117; break; } //@line 2345 "src/markdown.c"
    case 116: 
      var $519=$line_end; //@line 2346 "src/markdown.c"
      var $520=$5; //@line 2346 "src/markdown.c"
      HEAP32[(($520)>>2)]=$519; //@line 2346 "src/markdown.c"
      __label__ = 117; break; //@line 2346 "src/markdown.c"
    case 117: 
      var $522=$6; //@line 2348 "src/markdown.c"
      var $523=(($522)|0)!=0; //@line 2348 "src/markdown.c"
      if ($523) { __label__ = 118; break; } else { __label__ = 123; break; } //@line 2348 "src/markdown.c"
    case 118: 
      var $525=$6; //@line 2351 "src/markdown.c"
      var $526=$2; //@line 2351 "src/markdown.c"
      var $527=$id_offset; //@line 2351 "src/markdown.c"
      var $528=(($526+$527)|0); //@line 2351 "src/markdown.c"
      var $529=$id_end; //@line 2351 "src/markdown.c"
      var $530=$id_offset; //@line 2351 "src/markdown.c"
      var $531=((($529)-($530))|0); //@line 2351 "src/markdown.c"
      var $532=_add_link_ref($525, $528, $531); //@line 2351 "src/markdown.c"
      $ref=$532; //@line 2351 "src/markdown.c"
      var $533=$ref; //@line 2352 "src/markdown.c"
      var $534=(($533)|0)!=0; //@line 2352 "src/markdown.c"
      if ($534) { __label__ = 120; break; } else { __label__ = 119; break; } //@line 2352 "src/markdown.c"
    case 119: 
      $1=0; //@line 2353 "src/markdown.c"
      __label__ = 124; break; //@line 2353 "src/markdown.c"
    case 120: 
      var $537=$link_end; //@line 2355 "src/markdown.c"
      var $538=$link_offset; //@line 2355 "src/markdown.c"
      var $539=((($537)-($538))|0); //@line 2355 "src/markdown.c"
      var $540=_bufnew($539); //@line 2355 "src/markdown.c"
      var $541=$ref; //@line 2355 "src/markdown.c"
      var $542=(($541+4)|0); //@line 2355 "src/markdown.c"
      HEAP32[(($542)>>2)]=$540; //@line 2355 "src/markdown.c"
      var $543=$ref; //@line 2356 "src/markdown.c"
      var $544=(($543+4)|0); //@line 2356 "src/markdown.c"
      var $545=HEAP32[(($544)>>2)]; //@line 2356 "src/markdown.c"
      var $546=$2; //@line 2356 "src/markdown.c"
      var $547=$link_offset; //@line 2356 "src/markdown.c"
      var $548=(($546+$547)|0); //@line 2356 "src/markdown.c"
      var $549=$link_end; //@line 2356 "src/markdown.c"
      var $550=$link_offset; //@line 2356 "src/markdown.c"
      var $551=((($549)-($550))|0); //@line 2356 "src/markdown.c"
      _bufput($545, $548, $551); //@line 2356 "src/markdown.c"
      var $552=$title_end; //@line 2358 "src/markdown.c"
      var $553=$title_offset; //@line 2358 "src/markdown.c"
      var $554=(($552)>>>0) > (($553)>>>0); //@line 2358 "src/markdown.c"
      if ($554) { __label__ = 121; break; } else { __label__ = 122; break; } //@line 2358 "src/markdown.c"
    case 121: 
      var $556=$title_end; //@line 2359 "src/markdown.c"
      var $557=$title_offset; //@line 2359 "src/markdown.c"
      var $558=((($556)-($557))|0); //@line 2359 "src/markdown.c"
      var $559=_bufnew($558); //@line 2359 "src/markdown.c"
      var $560=$ref; //@line 2359 "src/markdown.c"
      var $561=(($560+8)|0); //@line 2359 "src/markdown.c"
      HEAP32[(($561)>>2)]=$559; //@line 2359 "src/markdown.c"
      var $562=$ref; //@line 2360 "src/markdown.c"
      var $563=(($562+8)|0); //@line 2360 "src/markdown.c"
      var $564=HEAP32[(($563)>>2)]; //@line 2360 "src/markdown.c"
      var $565=$2; //@line 2360 "src/markdown.c"
      var $566=$title_offset; //@line 2360 "src/markdown.c"
      var $567=(($565+$566)|0); //@line 2360 "src/markdown.c"
      var $568=$title_end; //@line 2360 "src/markdown.c"
      var $569=$title_offset; //@line 2360 "src/markdown.c"
      var $570=((($568)-($569))|0); //@line 2360 "src/markdown.c"
      _bufput($564, $567, $570); //@line 2360 "src/markdown.c"
      __label__ = 122; break; //@line 2361 "src/markdown.c"
    case 122: 
      __label__ = 123; break; //@line 2362 "src/markdown.c"
    case 123: 
      $1=1; //@line 2364 "src/markdown.c"
      __label__ = 124; break; //@line 2364 "src/markdown.c"
    case 124: 
      var $574=$1; //@line 2365 "src/markdown.c"
      ;
      return $574; //@line 2365 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_is_ref["X"]=1;

function _sd_version($ver_major, $ver_minor, $ver_revision) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$ver_major;
  $2=$ver_minor;
  $3=$ver_revision;
  var $4=$1; //@line 2551 "src/markdown.c"
  HEAP32[(($4)>>2)]=1; //@line 2551 "src/markdown.c"
  var $5=$2; //@line 2552 "src/markdown.c"
  HEAP32[(($5)>>2)]=16; //@line 2552 "src/markdown.c"
  var $6=$3; //@line 2553 "src/markdown.c"
  HEAP32[(($6)>>2)]=0; //@line 2553 "src/markdown.c"
  ;
  return; //@line 2554 "src/markdown.c"
}


function _is_atxheader($rndr, $data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $level;
      $2=$rndr;
      $3=$data;
      $4=$size;
      var $5=$3; //@line 1254 "src/markdown.c"
      var $6=(($5)|0); //@line 1254 "src/markdown.c"
      var $7=HEAPU8[($6)]; //@line 1254 "src/markdown.c"
      var $8=(($7)&255); //@line 1254 "src/markdown.c"
      var $9=(($8)|0)!=35; //@line 1254 "src/markdown.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1254 "src/markdown.c"
    case 3: 
      $1=0; //@line 1255 "src/markdown.c"
      __label__ = 16; break; //@line 1255 "src/markdown.c"
    case 4: 
      var $12=$2; //@line 1257 "src/markdown.c"
      var $13=(($12+420)|0); //@line 1257 "src/markdown.c"
      var $14=HEAP32[(($13)>>2)]; //@line 1257 "src/markdown.c"
      var $15=$14 & 64; //@line 1257 "src/markdown.c"
      var $16=(($15)|0)!=0; //@line 1257 "src/markdown.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 15; break; } //@line 1257 "src/markdown.c"
    case 5: 
      $level=0; //@line 1258 "src/markdown.c"
      __label__ = 6; break; //@line 1260 "src/markdown.c"
    case 6: 
      var $19=$level; //@line 1260 "src/markdown.c"
      var $20=$4; //@line 1260 "src/markdown.c"
      var $21=(($19)>>>0) < (($20)>>>0); //@line 1260 "src/markdown.c"
      if ($21) { __label__ = 7; break; } else { var $33 = 0;__label__ = 9; break; } //@line 1260 "src/markdown.c"
    case 7: 
      var $23=$level; //@line 1260 "src/markdown.c"
      var $24=(($23)>>>0) < 6; //@line 1260 "src/markdown.c"
      if ($24) { __label__ = 8; break; } else { var $33 = 0;__label__ = 9; break; } //@line 1260 "src/markdown.c"
    case 8: 
      var $26=$level; //@line 1260 "src/markdown.c"
      var $27=$3; //@line 1260 "src/markdown.c"
      var $28=(($27+$26)|0); //@line 1260 "src/markdown.c"
      var $29=HEAPU8[($28)]; //@line 1260 "src/markdown.c"
      var $30=(($29)&255); //@line 1260 "src/markdown.c"
      var $31=(($30)|0)==35; //@line 1260 "src/markdown.c"
      var $33 = $31;__label__ = 9; break;
    case 9: 
      var $33;
      if ($33) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $35=$level; //@line 1261 "src/markdown.c"
      var $36=((($35)+(1))|0); //@line 1261 "src/markdown.c"
      $level=$36; //@line 1261 "src/markdown.c"
      __label__ = 6; break; //@line 1261 "src/markdown.c"
    case 11: 
      var $38=$level; //@line 1263 "src/markdown.c"
      var $39=$4; //@line 1263 "src/markdown.c"
      var $40=(($38)>>>0) < (($39)>>>0); //@line 1263 "src/markdown.c"
      if ($40) { __label__ = 12; break; } else { __label__ = 14; break; } //@line 1263 "src/markdown.c"
    case 12: 
      var $42=$level; //@line 1263 "src/markdown.c"
      var $43=$3; //@line 1263 "src/markdown.c"
      var $44=(($43+$42)|0); //@line 1263 "src/markdown.c"
      var $45=HEAPU8[($44)]; //@line 1263 "src/markdown.c"
      var $46=(($45)&255); //@line 1263 "src/markdown.c"
      var $47=(($46)|0)!=32; //@line 1263 "src/markdown.c"
      if ($47) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1263 "src/markdown.c"
    case 13: 
      $1=0; //@line 1264 "src/markdown.c"
      __label__ = 16; break; //@line 1264 "src/markdown.c"
    case 14: 
      __label__ = 15; break; //@line 1265 "src/markdown.c"
    case 15: 
      $1=1; //@line 1267 "src/markdown.c"
      __label__ = 16; break; //@line 1267 "src/markdown.c"
    case 16: 
      var $52=$1; //@line 1268 "src/markdown.c"
      ;
      return $52; //@line 1268 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_is_atxheader["X"]=1;

function _expand_tabs($ob, $line, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $tab;
      var $org;
      $1=$ob;
      $2=$line;
      $3=$size;
      $i=0; //@line 2369 "src/markdown.c"
      $tab=0; //@line 2369 "src/markdown.c"
      __label__ = 3; break; //@line 2371 "src/markdown.c"
    case 3: 
      var $5=$i; //@line 2371 "src/markdown.c"
      var $6=$3; //@line 2371 "src/markdown.c"
      var $7=(($5)>>>0) < (($6)>>>0); //@line 2371 "src/markdown.c"
      if ($7) { __label__ = 4; break; } else { __label__ = 17; break; } //@line 2371 "src/markdown.c"
    case 4: 
      var $9=$i; //@line 2372 "src/markdown.c"
      $org=$9; //@line 2372 "src/markdown.c"
      __label__ = 5; break; //@line 2374 "src/markdown.c"
    case 5: 
      var $11=$i; //@line 2374 "src/markdown.c"
      var $12=$3; //@line 2374 "src/markdown.c"
      var $13=(($11)>>>0) < (($12)>>>0); //@line 2374 "src/markdown.c"
      if ($13) { __label__ = 6; break; } else { var $22 = 0;__label__ = 7; break; } //@line 2374 "src/markdown.c"
    case 6: 
      var $15=$i; //@line 2374 "src/markdown.c"
      var $16=$2; //@line 2374 "src/markdown.c"
      var $17=(($16+$15)|0); //@line 2374 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 2374 "src/markdown.c"
      var $19=(($18)&255); //@line 2374 "src/markdown.c"
      var $20=(($19)|0)!=9; //@line 2374 "src/markdown.c"
      var $22 = $20;__label__ = 7; break;
    case 7: 
      var $22;
      if ($22) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $24=$i; //@line 2375 "src/markdown.c"
      var $25=((($24)+(1))|0); //@line 2375 "src/markdown.c"
      $i=$25; //@line 2375 "src/markdown.c"
      var $26=$tab; //@line 2375 "src/markdown.c"
      var $27=((($26)+(1))|0); //@line 2375 "src/markdown.c"
      $tab=$27; //@line 2375 "src/markdown.c"
      __label__ = 5; break; //@line 2376 "src/markdown.c"
    case 9: 
      var $29=$i; //@line 2378 "src/markdown.c"
      var $30=$org; //@line 2378 "src/markdown.c"
      var $31=(($29)>>>0) > (($30)>>>0); //@line 2378 "src/markdown.c"
      if ($31) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 2378 "src/markdown.c"
    case 10: 
      var $33=$1; //@line 2379 "src/markdown.c"
      var $34=$2; //@line 2379 "src/markdown.c"
      var $35=$org; //@line 2379 "src/markdown.c"
      var $36=(($34+$35)|0); //@line 2379 "src/markdown.c"
      var $37=$i; //@line 2379 "src/markdown.c"
      var $38=$org; //@line 2379 "src/markdown.c"
      var $39=((($37)-($38))|0); //@line 2379 "src/markdown.c"
      _bufput($33, $36, $39); //@line 2379 "src/markdown.c"
      __label__ = 11; break; //@line 2379 "src/markdown.c"
    case 11: 
      var $41=$i; //@line 2381 "src/markdown.c"
      var $42=$3; //@line 2381 "src/markdown.c"
      var $43=(($41)>>>0) >= (($42)>>>0); //@line 2381 "src/markdown.c"
      if ($43) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 2381 "src/markdown.c"
    case 12: 
      __label__ = 17; break; //@line 2382 "src/markdown.c"
    case 13: 
      __label__ = 14; break; //@line 2384 "src/markdown.c"
    case 14: 
      var $47=$1; //@line 2385 "src/markdown.c"
      _bufputc($47, 32); //@line 2385 "src/markdown.c"
      var $48=$tab; //@line 2385 "src/markdown.c"
      var $49=((($48)+(1))|0); //@line 2385 "src/markdown.c"
      $tab=$49; //@line 2385 "src/markdown.c"
      __label__ = 15; break; //@line 2386 "src/markdown.c"
    case 15: 
      var $51=$tab; //@line 2386 "src/markdown.c"
      var $52=((($51)>>>0))%(4); //@line 2386 "src/markdown.c"
      var $53=(($52)|0)!=0; //@line 2386 "src/markdown.c"
      if ($53) { __label__ = 14; break; } else { __label__ = 16; break; } //@line 2386 "src/markdown.c"
    case 16: 
      var $55=$i; //@line 2388 "src/markdown.c"
      var $56=((($55)+(1))|0); //@line 2388 "src/markdown.c"
      $i=$56; //@line 2388 "src/markdown.c"
      __label__ = 3; break; //@line 2389 "src/markdown.c"
    case 17: 
      ;
      return; //@line 2390 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_expand_tabs["X"]=1;

function _parse_block($ob, $rndr, $data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $beg;
      var $end;
      var $i;
      var $txt_data;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $beg=0; //@line 2192 "src/markdown.c"
      var $5=$2; //@line 2194 "src/markdown.c"
      var $6=(($5+396)|0); //@line 2194 "src/markdown.c"
      var $7=(($6+12)|0); //@line 2194 "src/markdown.c"
      var $8=(($7+4)|0); //@line 2194 "src/markdown.c"
      var $9=HEAP32[(($8)>>2)]; //@line 2194 "src/markdown.c"
      var $10=$2; //@line 2194 "src/markdown.c"
      var $11=(($10+396)|0); //@line 2194 "src/markdown.c"
      var $12=(($11)|0); //@line 2194 "src/markdown.c"
      var $13=(($12+4)|0); //@line 2194 "src/markdown.c"
      var $14=HEAP32[(($13)>>2)]; //@line 2194 "src/markdown.c"
      var $15=((($9)+($14))|0); //@line 2194 "src/markdown.c"
      var $16=$2; //@line 2194 "src/markdown.c"
      var $17=(($16+424)|0); //@line 2194 "src/markdown.c"
      var $18=HEAPU32[(($17)>>2)]; //@line 2194 "src/markdown.c"
      var $19=(($15)>>>0) > (($18)>>>0); //@line 2194 "src/markdown.c"
      if ($19) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2194 "src/markdown.c"
    case 3: 
      __label__ = 48; break; //@line 2196 "src/markdown.c"
    case 4: 
      __label__ = 5; break; //@line 2198 "src/markdown.c"
    case 5: 
      var $23=$beg; //@line 2198 "src/markdown.c"
      var $24=$4; //@line 2198 "src/markdown.c"
      var $25=(($23)>>>0) < (($24)>>>0); //@line 2198 "src/markdown.c"
      if ($25) { __label__ = 6; break; } else { __label__ = 48; break; } //@line 2198 "src/markdown.c"
    case 6: 
      var $27=$3; //@line 2199 "src/markdown.c"
      var $28=$beg; //@line 2199 "src/markdown.c"
      var $29=(($27+$28)|0); //@line 2199 "src/markdown.c"
      $txt_data=$29; //@line 2199 "src/markdown.c"
      var $30=$4; //@line 2200 "src/markdown.c"
      var $31=$beg; //@line 2200 "src/markdown.c"
      var $32=((($30)-($31))|0); //@line 2200 "src/markdown.c"
      $end=$32; //@line 2200 "src/markdown.c"
      var $33=$2; //@line 2202 "src/markdown.c"
      var $34=$txt_data; //@line 2202 "src/markdown.c"
      var $35=$end; //@line 2202 "src/markdown.c"
      var $36=_is_atxheader($33, $34, $35); //@line 2202 "src/markdown.c"
      var $37=(($36)|0)!=0; //@line 2202 "src/markdown.c"
      if ($37) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 2202 "src/markdown.c"
    case 7: 
      var $39=$1; //@line 2203 "src/markdown.c"
      var $40=$2; //@line 2203 "src/markdown.c"
      var $41=$txt_data; //@line 2203 "src/markdown.c"
      var $42=$end; //@line 2203 "src/markdown.c"
      var $43=_parse_atxheader($39, $40, $41, $42); //@line 2203 "src/markdown.c"
      var $44=$beg; //@line 2203 "src/markdown.c"
      var $45=((($44)+($43))|0); //@line 2203 "src/markdown.c"
      $beg=$45; //@line 2203 "src/markdown.c"
      __label__ = 47; break; //@line 2203 "src/markdown.c"
    case 8: 
      var $47=$beg; //@line 2205 "src/markdown.c"
      var $48=$3; //@line 2205 "src/markdown.c"
      var $49=(($48+$47)|0); //@line 2205 "src/markdown.c"
      var $50=HEAPU8[($49)]; //@line 2205 "src/markdown.c"
      var $51=(($50)&255); //@line 2205 "src/markdown.c"
      var $52=(($51)|0)==60; //@line 2205 "src/markdown.c"
      if ($52) { __label__ = 9; break; } else { __label__ = 12; break; } //@line 2205 "src/markdown.c"
    case 9: 
      var $54=$2; //@line 2205 "src/markdown.c"
      var $55=(($54)|0); //@line 2205 "src/markdown.c"
      var $56=(($55+8)|0); //@line 2205 "src/markdown.c"
      var $57=HEAP32[(($56)>>2)]; //@line 2205 "src/markdown.c"
      var $58=(($57)|0)!=0; //@line 2205 "src/markdown.c"
      if ($58) { __label__ = 10; break; } else { __label__ = 12; break; } //@line 2205 "src/markdown.c"
    case 10: 
      var $60=$1; //@line 2206 "src/markdown.c"
      var $61=$2; //@line 2206 "src/markdown.c"
      var $62=$txt_data; //@line 2206 "src/markdown.c"
      var $63=$end; //@line 2206 "src/markdown.c"
      var $64=_parse_htmlblock($60, $61, $62, $63, 1); //@line 2206 "src/markdown.c"
      $i=$64; //@line 2206 "src/markdown.c"
      var $65=(($64)|0)!=0; //@line 2206 "src/markdown.c"
      if ($65) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 2206 "src/markdown.c"
    case 11: 
      var $67=$i; //@line 2207 "src/markdown.c"
      var $68=$beg; //@line 2207 "src/markdown.c"
      var $69=((($68)+($67))|0); //@line 2207 "src/markdown.c"
      $beg=$69; //@line 2207 "src/markdown.c"
      __label__ = 46; break; //@line 2207 "src/markdown.c"
    case 12: 
      var $71=$txt_data; //@line 2209 "src/markdown.c"
      var $72=$end; //@line 2209 "src/markdown.c"
      var $73=_is_empty($71, $72); //@line 2209 "src/markdown.c"
      $i=$73; //@line 2209 "src/markdown.c"
      var $74=(($73)|0)!=0; //@line 2209 "src/markdown.c"
      if ($74) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 2209 "src/markdown.c"
    case 13: 
      var $76=$i; //@line 2210 "src/markdown.c"
      var $77=$beg; //@line 2210 "src/markdown.c"
      var $78=((($77)+($76))|0); //@line 2210 "src/markdown.c"
      $beg=$78; //@line 2210 "src/markdown.c"
      __label__ = 45; break; //@line 2210 "src/markdown.c"
    case 14: 
      var $80=$txt_data; //@line 2212 "src/markdown.c"
      var $81=$end; //@line 2212 "src/markdown.c"
      var $82=_is_hrule($80, $81); //@line 2212 "src/markdown.c"
      var $83=(($82)|0)!=0; //@line 2212 "src/markdown.c"
      if ($83) { __label__ = 15; break; } else { __label__ = 23; break; } //@line 2212 "src/markdown.c"
    case 15: 
      var $85=$2; //@line 2213 "src/markdown.c"
      var $86=(($85)|0); //@line 2213 "src/markdown.c"
      var $87=(($86+16)|0); //@line 2213 "src/markdown.c"
      var $88=HEAP32[(($87)>>2)]; //@line 2213 "src/markdown.c"
      var $89=(($88)|0)!=0; //@line 2213 "src/markdown.c"
      if ($89) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 2213 "src/markdown.c"
    case 16: 
      var $91=$2; //@line 2214 "src/markdown.c"
      var $92=(($91)|0); //@line 2214 "src/markdown.c"
      var $93=(($92+16)|0); //@line 2214 "src/markdown.c"
      var $94=HEAP32[(($93)>>2)]; //@line 2214 "src/markdown.c"
      var $95=$1; //@line 2214 "src/markdown.c"
      var $96=$2; //@line 2214 "src/markdown.c"
      var $97=(($96+104)|0); //@line 2214 "src/markdown.c"
      var $98=HEAP32[(($97)>>2)]; //@line 2214 "src/markdown.c"
      FUNCTION_TABLE[$94]($95, $98); //@line 2214 "src/markdown.c"
      __label__ = 17; break; //@line 2214 "src/markdown.c"
    case 17: 
      __label__ = 18; break; //@line 2216 "src/markdown.c"
    case 18: 
      var $101=$beg; //@line 2216 "src/markdown.c"
      var $102=$4; //@line 2216 "src/markdown.c"
      var $103=(($101)>>>0) < (($102)>>>0); //@line 2216 "src/markdown.c"
      if ($103) { __label__ = 19; break; } else { var $112 = 0;__label__ = 20; break; } //@line 2216 "src/markdown.c"
    case 19: 
      var $105=$beg; //@line 2216 "src/markdown.c"
      var $106=$3; //@line 2216 "src/markdown.c"
      var $107=(($106+$105)|0); //@line 2216 "src/markdown.c"
      var $108=HEAPU8[($107)]; //@line 2216 "src/markdown.c"
      var $109=(($108)&255); //@line 2216 "src/markdown.c"
      var $110=(($109)|0)!=10; //@line 2216 "src/markdown.c"
      var $112 = $110;__label__ = 20; break;
    case 20: 
      var $112;
      if ($112) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $114=$beg; //@line 2217 "src/markdown.c"
      var $115=((($114)+(1))|0); //@line 2217 "src/markdown.c"
      $beg=$115; //@line 2217 "src/markdown.c"
      __label__ = 18; break; //@line 2217 "src/markdown.c"
    case 22: 
      var $117=$beg; //@line 2219 "src/markdown.c"
      var $118=((($117)+(1))|0); //@line 2219 "src/markdown.c"
      $beg=$118; //@line 2219 "src/markdown.c"
      __label__ = 44; break; //@line 2220 "src/markdown.c"
    case 23: 
      var $120=$2; //@line 2222 "src/markdown.c"
      var $121=(($120+420)|0); //@line 2222 "src/markdown.c"
      var $122=HEAP32[(($121)>>2)]; //@line 2222 "src/markdown.c"
      var $123=$122 & 4; //@line 2222 "src/markdown.c"
      var $124=(($123)|0)!=0; //@line 2222 "src/markdown.c"
      if ($124) { __label__ = 24; break; } else { __label__ = 26; break; } //@line 2222 "src/markdown.c"
    case 24: 
      var $126=$1; //@line 2223 "src/markdown.c"
      var $127=$2; //@line 2223 "src/markdown.c"
      var $128=$txt_data; //@line 2223 "src/markdown.c"
      var $129=$end; //@line 2223 "src/markdown.c"
      var $130=_parse_fencedcode($126, $127, $128, $129); //@line 2223 "src/markdown.c"
      $i=$130; //@line 2223 "src/markdown.c"
      var $131=(($130)|0)!=0; //@line 2223 "src/markdown.c"
      if ($131) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 2223 "src/markdown.c"
    case 25: 
      var $133=$i; //@line 2224 "src/markdown.c"
      var $134=$beg; //@line 2224 "src/markdown.c"
      var $135=((($134)+($133))|0); //@line 2224 "src/markdown.c"
      $beg=$135; //@line 2224 "src/markdown.c"
      __label__ = 43; break; //@line 2224 "src/markdown.c"
    case 26: 
      var $137=$2; //@line 2226 "src/markdown.c"
      var $138=(($137+420)|0); //@line 2226 "src/markdown.c"
      var $139=HEAP32[(($138)>>2)]; //@line 2226 "src/markdown.c"
      var $140=$139 & 2; //@line 2226 "src/markdown.c"
      var $141=(($140)|0)!=0; //@line 2226 "src/markdown.c"
      if ($141) { __label__ = 27; break; } else { __label__ = 29; break; } //@line 2226 "src/markdown.c"
    case 27: 
      var $143=$1; //@line 2227 "src/markdown.c"
      var $144=$2; //@line 2227 "src/markdown.c"
      var $145=$txt_data; //@line 2227 "src/markdown.c"
      var $146=$end; //@line 2227 "src/markdown.c"
      var $147=_parse_table($143, $144, $145, $146); //@line 2227 "src/markdown.c"
      $i=$147; //@line 2227 "src/markdown.c"
      var $148=(($147)|0)!=0; //@line 2227 "src/markdown.c"
      if ($148) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 2227 "src/markdown.c"
    case 28: 
      var $150=$i; //@line 2228 "src/markdown.c"
      var $151=$beg; //@line 2228 "src/markdown.c"
      var $152=((($151)+($150))|0); //@line 2228 "src/markdown.c"
      $beg=$152; //@line 2228 "src/markdown.c"
      __label__ = 42; break; //@line 2228 "src/markdown.c"
    case 29: 
      var $154=$txt_data; //@line 2230 "src/markdown.c"
      var $155=$end; //@line 2230 "src/markdown.c"
      var $156=_prefix_quote($154, $155); //@line 2230 "src/markdown.c"
      var $157=(($156)|0)!=0; //@line 2230 "src/markdown.c"
      if ($157) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 2230 "src/markdown.c"
    case 30: 
      var $159=$1; //@line 2231 "src/markdown.c"
      var $160=$2; //@line 2231 "src/markdown.c"
      var $161=$txt_data; //@line 2231 "src/markdown.c"
      var $162=$end; //@line 2231 "src/markdown.c"
      var $163=_parse_blockquote($159, $160, $161, $162); //@line 2231 "src/markdown.c"
      var $164=$beg; //@line 2231 "src/markdown.c"
      var $165=((($164)+($163))|0); //@line 2231 "src/markdown.c"
      $beg=$165; //@line 2231 "src/markdown.c"
      __label__ = 41; break; //@line 2231 "src/markdown.c"
    case 31: 
      var $167=$txt_data; //@line 2233 "src/markdown.c"
      var $168=$end; //@line 2233 "src/markdown.c"
      var $169=_prefix_code($167, $168); //@line 2233 "src/markdown.c"
      var $170=(($169)|0)!=0; //@line 2233 "src/markdown.c"
      if ($170) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 2233 "src/markdown.c"
    case 32: 
      var $172=$1; //@line 2234 "src/markdown.c"
      var $173=$2; //@line 2234 "src/markdown.c"
      var $174=$txt_data; //@line 2234 "src/markdown.c"
      var $175=$end; //@line 2234 "src/markdown.c"
      var $176=_parse_blockcode($172, $173, $174, $175); //@line 2234 "src/markdown.c"
      var $177=$beg; //@line 2234 "src/markdown.c"
      var $178=((($177)+($176))|0); //@line 2234 "src/markdown.c"
      $beg=$178; //@line 2234 "src/markdown.c"
      __label__ = 40; break; //@line 2234 "src/markdown.c"
    case 33: 
      var $180=$txt_data; //@line 2236 "src/markdown.c"
      var $181=$end; //@line 2236 "src/markdown.c"
      var $182=_prefix_uli($180, $181); //@line 2236 "src/markdown.c"
      var $183=(($182)|0)!=0; //@line 2236 "src/markdown.c"
      if ($183) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 2236 "src/markdown.c"
    case 34: 
      var $185=$1; //@line 2237 "src/markdown.c"
      var $186=$2; //@line 2237 "src/markdown.c"
      var $187=$txt_data; //@line 2237 "src/markdown.c"
      var $188=$end; //@line 2237 "src/markdown.c"
      var $189=_parse_list($185, $186, $187, $188, 0); //@line 2237 "src/markdown.c"
      var $190=$beg; //@line 2237 "src/markdown.c"
      var $191=((($190)+($189))|0); //@line 2237 "src/markdown.c"
      $beg=$191; //@line 2237 "src/markdown.c"
      __label__ = 39; break; //@line 2237 "src/markdown.c"
    case 35: 
      var $193=$txt_data; //@line 2239 "src/markdown.c"
      var $194=$end; //@line 2239 "src/markdown.c"
      var $195=_prefix_oli($193, $194); //@line 2239 "src/markdown.c"
      var $196=(($195)|0)!=0; //@line 2239 "src/markdown.c"
      if ($196) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 2239 "src/markdown.c"
    case 36: 
      var $198=$1; //@line 2240 "src/markdown.c"
      var $199=$2; //@line 2240 "src/markdown.c"
      var $200=$txt_data; //@line 2240 "src/markdown.c"
      var $201=$end; //@line 2240 "src/markdown.c"
      var $202=_parse_list($198, $199, $200, $201, 1); //@line 2240 "src/markdown.c"
      var $203=$beg; //@line 2240 "src/markdown.c"
      var $204=((($203)+($202))|0); //@line 2240 "src/markdown.c"
      $beg=$204; //@line 2240 "src/markdown.c"
      __label__ = 38; break; //@line 2240 "src/markdown.c"
    case 37: 
      var $206=$1; //@line 2243 "src/markdown.c"
      var $207=$2; //@line 2243 "src/markdown.c"
      var $208=$txt_data; //@line 2243 "src/markdown.c"
      var $209=$end; //@line 2243 "src/markdown.c"
      var $210=_parse_paragraph($206, $207, $208, $209); //@line 2243 "src/markdown.c"
      var $211=$beg; //@line 2243 "src/markdown.c"
      var $212=((($211)+($210))|0); //@line 2243 "src/markdown.c"
      $beg=$212; //@line 2243 "src/markdown.c"
      __label__ = 38; break;
    case 38: 
      __label__ = 39; break;
    case 39: 
      __label__ = 40; break;
    case 40: 
      __label__ = 41; break;
    case 41: 
      __label__ = 42; break;
    case 42: 
      __label__ = 43; break;
    case 43: 
      __label__ = 44; break;
    case 44: 
      __label__ = 45; break;
    case 45: 
      __label__ = 46; break;
    case 46: 
      __label__ = 47; break;
    case 47: 
      __label__ = 5; break; //@line 2244 "src/markdown.c"
    case 48: 
      ;
      return; //@line 2245 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_block["X"]=1;

function _free_link_refs($references) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $r;
      var $next;
      $1=$references;
      $i=0; //@line 222 "src/markdown.c"
      __label__ = 3; break; //@line 222 "src/markdown.c"
    case 3: 
      var $3=$i; //@line 222 "src/markdown.c"
      var $4=(($3)>>>0) < 8; //@line 222 "src/markdown.c"
      if ($4) { __label__ = 4; break; } else { __label__ = 9; break; } //@line 222 "src/markdown.c"
    case 4: 
      var $6=$i; //@line 223 "src/markdown.c"
      var $7=$1; //@line 223 "src/markdown.c"
      var $8=(($7+($6<<2))|0); //@line 223 "src/markdown.c"
      var $9=HEAP32[(($8)>>2)]; //@line 223 "src/markdown.c"
      $r=$9; //@line 223 "src/markdown.c"
      __label__ = 5; break; //@line 226 "src/markdown.c"
    case 5: 
      var $11=$r; //@line 226 "src/markdown.c"
      var $12=(($11)|0)!=0; //@line 226 "src/markdown.c"
      if ($12) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 226 "src/markdown.c"
    case 6: 
      var $14=$r; //@line 227 "src/markdown.c"
      var $15=(($14+12)|0); //@line 227 "src/markdown.c"
      var $16=HEAP32[(($15)>>2)]; //@line 227 "src/markdown.c"
      $next=$16; //@line 227 "src/markdown.c"
      var $17=$r; //@line 228 "src/markdown.c"
      var $18=(($17+4)|0); //@line 228 "src/markdown.c"
      var $19=HEAP32[(($18)>>2)]; //@line 228 "src/markdown.c"
      _bufrelease($19); //@line 228 "src/markdown.c"
      var $20=$r; //@line 229 "src/markdown.c"
      var $21=(($20+8)|0); //@line 229 "src/markdown.c"
      var $22=HEAP32[(($21)>>2)]; //@line 229 "src/markdown.c"
      _bufrelease($22); //@line 229 "src/markdown.c"
      var $23=$r; //@line 230 "src/markdown.c"
      var $24=$23; //@line 230 "src/markdown.c"
      _free($24); //@line 230 "src/markdown.c"
      var $25=$next; //@line 231 "src/markdown.c"
      $r=$25; //@line 231 "src/markdown.c"
      __label__ = 5; break; //@line 232 "src/markdown.c"
    case 7: 
      __label__ = 8; break; //@line 233 "src/markdown.c"
    case 8: 
      var $28=$i; //@line 222 "src/markdown.c"
      var $29=((($28)+(1))|0); //@line 222 "src/markdown.c"
      $i=$29; //@line 222 "src/markdown.c"
      __label__ = 3; break; //@line 222 "src/markdown.c"
    case 9: 
      ;
      return; //@line 234 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _sd_markdown_free($md) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      $1=$md;
      $i=0; //@line 2536 "src/markdown.c"
      __label__ = 3; break; //@line 2536 "src/markdown.c"
    case 3: 
      var $3=$i; //@line 2536 "src/markdown.c"
      var $4=$1; //@line 2536 "src/markdown.c"
      var $5=(($4+396)|0); //@line 2536 "src/markdown.c"
      var $6=(($5+12)|0); //@line 2536 "src/markdown.c"
      var $7=(($6+8)|0); //@line 2536 "src/markdown.c"
      var $8=HEAPU32[(($7)>>2)]; //@line 2536 "src/markdown.c"
      var $9=(($3)>>>0) < (($8)>>>0); //@line 2536 "src/markdown.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 2536 "src/markdown.c"
    case 4: 
      var $11=$i; //@line 2537 "src/markdown.c"
      var $12=$1; //@line 2537 "src/markdown.c"
      var $13=(($12+396)|0); //@line 2537 "src/markdown.c"
      var $14=(($13+12)|0); //@line 2537 "src/markdown.c"
      var $15=(($14)|0); //@line 2537 "src/markdown.c"
      var $16=HEAP32[(($15)>>2)]; //@line 2537 "src/markdown.c"
      var $17=(($16+($11<<2))|0); //@line 2537 "src/markdown.c"
      var $18=HEAP32[(($17)>>2)]; //@line 2537 "src/markdown.c"
      var $19=$18; //@line 2537 "src/markdown.c"
      _bufrelease($19); //@line 2537 "src/markdown.c"
      __label__ = 5; break; //@line 2537 "src/markdown.c"
    case 5: 
      var $21=$i; //@line 2536 "src/markdown.c"
      var $22=((($21)+(1))|0); //@line 2536 "src/markdown.c"
      $i=$22; //@line 2536 "src/markdown.c"
      __label__ = 3; break; //@line 2536 "src/markdown.c"
    case 6: 
      $i=0; //@line 2539 "src/markdown.c"
      __label__ = 7; break; //@line 2539 "src/markdown.c"
    case 7: 
      var $25=$i; //@line 2539 "src/markdown.c"
      var $26=$1; //@line 2539 "src/markdown.c"
      var $27=(($26+396)|0); //@line 2539 "src/markdown.c"
      var $28=(($27)|0); //@line 2539 "src/markdown.c"
      var $29=(($28+8)|0); //@line 2539 "src/markdown.c"
      var $30=HEAPU32[(($29)>>2)]; //@line 2539 "src/markdown.c"
      var $31=(($25)>>>0) < (($30)>>>0); //@line 2539 "src/markdown.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 10; break; } //@line 2539 "src/markdown.c"
    case 8: 
      var $33=$i; //@line 2540 "src/markdown.c"
      var $34=$1; //@line 2540 "src/markdown.c"
      var $35=(($34+396)|0); //@line 2540 "src/markdown.c"
      var $36=(($35)|0); //@line 2540 "src/markdown.c"
      var $37=(($36)|0); //@line 2540 "src/markdown.c"
      var $38=HEAP32[(($37)>>2)]; //@line 2540 "src/markdown.c"
      var $39=(($38+($33<<2))|0); //@line 2540 "src/markdown.c"
      var $40=HEAP32[(($39)>>2)]; //@line 2540 "src/markdown.c"
      var $41=$40; //@line 2540 "src/markdown.c"
      _bufrelease($41); //@line 2540 "src/markdown.c"
      __label__ = 9; break; //@line 2540 "src/markdown.c"
    case 9: 
      var $43=$i; //@line 2539 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 2539 "src/markdown.c"
      $i=$44; //@line 2539 "src/markdown.c"
      __label__ = 7; break; //@line 2539 "src/markdown.c"
    case 10: 
      var $46=$1; //@line 2542 "src/markdown.c"
      var $47=(($46+396)|0); //@line 2542 "src/markdown.c"
      var $48=(($47+12)|0); //@line 2542 "src/markdown.c"
      _stack_free($48); //@line 2542 "src/markdown.c"
      var $49=$1; //@line 2543 "src/markdown.c"
      var $50=(($49+396)|0); //@line 2543 "src/markdown.c"
      var $51=(($50)|0); //@line 2543 "src/markdown.c"
      _stack_free($51); //@line 2543 "src/markdown.c"
      var $52=$1; //@line 2545 "src/markdown.c"
      var $53=$52; //@line 2545 "src/markdown.c"
      _free($53); //@line 2545 "src/markdown.c"
      ;
      return; //@line 2546 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sd_markdown_free["X"]=1;

function _parse_atxheader($ob, $rndr, $data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $level;
      var $i;
      var $end;
      var $skip;
      var $work;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $level=0; //@line 1791 "src/markdown.c"
      __label__ = 3; break; //@line 1794 "src/markdown.c"
    case 3: 
      var $6=$level; //@line 1794 "src/markdown.c"
      var $7=$4; //@line 1794 "src/markdown.c"
      var $8=(($6)>>>0) < (($7)>>>0); //@line 1794 "src/markdown.c"
      if ($8) { __label__ = 4; break; } else { var $20 = 0;__label__ = 6; break; } //@line 1794 "src/markdown.c"
    case 4: 
      var $10=$level; //@line 1794 "src/markdown.c"
      var $11=(($10)>>>0) < 6; //@line 1794 "src/markdown.c"
      if ($11) { __label__ = 5; break; } else { var $20 = 0;__label__ = 6; break; } //@line 1794 "src/markdown.c"
    case 5: 
      var $13=$level; //@line 1794 "src/markdown.c"
      var $14=$3; //@line 1794 "src/markdown.c"
      var $15=(($14+$13)|0); //@line 1794 "src/markdown.c"
      var $16=HEAPU8[($15)]; //@line 1794 "src/markdown.c"
      var $17=(($16)&255); //@line 1794 "src/markdown.c"
      var $18=(($17)|0)==35; //@line 1794 "src/markdown.c"
      var $20 = $18;__label__ = 6; break;
    case 6: 
      var $20;
      if ($20) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      var $22=$level; //@line 1795 "src/markdown.c"
      var $23=((($22)+(1))|0); //@line 1795 "src/markdown.c"
      $level=$23; //@line 1795 "src/markdown.c"
      __label__ = 3; break; //@line 1795 "src/markdown.c"
    case 8: 
      var $25=$level; //@line 1797 "src/markdown.c"
      $i=$25; //@line 1797 "src/markdown.c"
      __label__ = 9; break; //@line 1797 "src/markdown.c"
    case 9: 
      var $27=$i; //@line 1797 "src/markdown.c"
      var $28=$4; //@line 1797 "src/markdown.c"
      var $29=(($27)>>>0) < (($28)>>>0); //@line 1797 "src/markdown.c"
      if ($29) { __label__ = 10; break; } else { var $38 = 0;__label__ = 11; break; } //@line 1797 "src/markdown.c"
    case 10: 
      var $31=$i; //@line 1797 "src/markdown.c"
      var $32=$3; //@line 1797 "src/markdown.c"
      var $33=(($32+$31)|0); //@line 1797 "src/markdown.c"
      var $34=HEAPU8[($33)]; //@line 1797 "src/markdown.c"
      var $35=(($34)&255); //@line 1797 "src/markdown.c"
      var $36=(($35)|0)==32; //@line 1797 "src/markdown.c"
      var $38 = $36;__label__ = 11; break;
    case 11: 
      var $38;
      if ($38) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: 
      __label__ = 13; break;
    case 13: 
      var $41=$i; //@line 1797 "src/markdown.c"
      var $42=((($41)+(1))|0); //@line 1797 "src/markdown.c"
      $i=$42; //@line 1797 "src/markdown.c"
      __label__ = 9; break; //@line 1797 "src/markdown.c"
    case 14: 
      var $44=$i; //@line 1799 "src/markdown.c"
      $end=$44; //@line 1799 "src/markdown.c"
      __label__ = 15; break; //@line 1799 "src/markdown.c"
    case 15: 
      var $46=$end; //@line 1799 "src/markdown.c"
      var $47=$4; //@line 1799 "src/markdown.c"
      var $48=(($46)>>>0) < (($47)>>>0); //@line 1799 "src/markdown.c"
      if ($48) { __label__ = 16; break; } else { var $57 = 0;__label__ = 17; break; } //@line 1799 "src/markdown.c"
    case 16: 
      var $50=$end; //@line 1799 "src/markdown.c"
      var $51=$3; //@line 1799 "src/markdown.c"
      var $52=(($51+$50)|0); //@line 1799 "src/markdown.c"
      var $53=HEAPU8[($52)]; //@line 1799 "src/markdown.c"
      var $54=(($53)&255); //@line 1799 "src/markdown.c"
      var $55=(($54)|0)!=10; //@line 1799 "src/markdown.c"
      var $57 = $55;__label__ = 17; break;
    case 17: 
      var $57;
      if ($57) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: 
      __label__ = 19; break;
    case 19: 
      var $60=$end; //@line 1799 "src/markdown.c"
      var $61=((($60)+(1))|0); //@line 1799 "src/markdown.c"
      $end=$61; //@line 1799 "src/markdown.c"
      __label__ = 15; break; //@line 1799 "src/markdown.c"
    case 20: 
      var $63=$end; //@line 1800 "src/markdown.c"
      $skip=$63; //@line 1800 "src/markdown.c"
      __label__ = 21; break; //@line 1802 "src/markdown.c"
    case 21: 
      var $65=$end; //@line 1802 "src/markdown.c"
      var $66=(($65)|0)!=0; //@line 1802 "src/markdown.c"
      if ($66) { __label__ = 22; break; } else { var $76 = 0;__label__ = 23; break; } //@line 1802 "src/markdown.c"
    case 22: 
      var $68=$end; //@line 1802 "src/markdown.c"
      var $69=((($68)-(1))|0); //@line 1802 "src/markdown.c"
      var $70=$3; //@line 1802 "src/markdown.c"
      var $71=(($70+$69)|0); //@line 1802 "src/markdown.c"
      var $72=HEAPU8[($71)]; //@line 1802 "src/markdown.c"
      var $73=(($72)&255); //@line 1802 "src/markdown.c"
      var $74=(($73)|0)==35; //@line 1802 "src/markdown.c"
      var $76 = $74;__label__ = 23; break;
    case 23: 
      var $76;
      if ($76) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $78=$end; //@line 1803 "src/markdown.c"
      var $79=((($78)-(1))|0); //@line 1803 "src/markdown.c"
      $end=$79; //@line 1803 "src/markdown.c"
      __label__ = 21; break; //@line 1803 "src/markdown.c"
    case 25: 
      __label__ = 26; break; //@line 1805 "src/markdown.c"
    case 26: 
      var $82=$end; //@line 1805 "src/markdown.c"
      var $83=(($82)|0)!=0; //@line 1805 "src/markdown.c"
      if ($83) { __label__ = 27; break; } else { var $93 = 0;__label__ = 28; break; } //@line 1805 "src/markdown.c"
    case 27: 
      var $85=$end; //@line 1805 "src/markdown.c"
      var $86=((($85)-(1))|0); //@line 1805 "src/markdown.c"
      var $87=$3; //@line 1805 "src/markdown.c"
      var $88=(($87+$86)|0); //@line 1805 "src/markdown.c"
      var $89=HEAPU8[($88)]; //@line 1805 "src/markdown.c"
      var $90=(($89)&255); //@line 1805 "src/markdown.c"
      var $91=(($90)|0)==32; //@line 1805 "src/markdown.c"
      var $93 = $91;__label__ = 28; break;
    case 28: 
      var $93;
      if ($93) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: 
      var $95=$end; //@line 1806 "src/markdown.c"
      var $96=((($95)-(1))|0); //@line 1806 "src/markdown.c"
      $end=$96; //@line 1806 "src/markdown.c"
      __label__ = 26; break; //@line 1806 "src/markdown.c"
    case 30: 
      var $98=$end; //@line 1808 "src/markdown.c"
      var $99=$i; //@line 1808 "src/markdown.c"
      var $100=(($98)>>>0) > (($99)>>>0); //@line 1808 "src/markdown.c"
      if ($100) { __label__ = 31; break; } else { __label__ = 34; break; } //@line 1808 "src/markdown.c"
    case 31: 
      var $102=$2; //@line 1809 "src/markdown.c"
      var $103=_rndr_newbuf($102, 1); //@line 1809 "src/markdown.c"
      $work=$103; //@line 1809 "src/markdown.c"
      var $104=$work; //@line 1811 "src/markdown.c"
      var $105=$2; //@line 1811 "src/markdown.c"
      var $106=$3; //@line 1811 "src/markdown.c"
      var $107=$i; //@line 1811 "src/markdown.c"
      var $108=(($106+$107)|0); //@line 1811 "src/markdown.c"
      var $109=$end; //@line 1811 "src/markdown.c"
      var $110=$i; //@line 1811 "src/markdown.c"
      var $111=((($109)-($110))|0); //@line 1811 "src/markdown.c"
      _parse_inline($104, $105, $108, $111); //@line 1811 "src/markdown.c"
      var $112=$2; //@line 1813 "src/markdown.c"
      var $113=(($112)|0); //@line 1813 "src/markdown.c"
      var $114=(($113+12)|0); //@line 1813 "src/markdown.c"
      var $115=HEAP32[(($114)>>2)]; //@line 1813 "src/markdown.c"
      var $116=(($115)|0)!=0; //@line 1813 "src/markdown.c"
      if ($116) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 1813 "src/markdown.c"
    case 32: 
      var $118=$2; //@line 1814 "src/markdown.c"
      var $119=(($118)|0); //@line 1814 "src/markdown.c"
      var $120=(($119+12)|0); //@line 1814 "src/markdown.c"
      var $121=HEAP32[(($120)>>2)]; //@line 1814 "src/markdown.c"
      var $122=$1; //@line 1814 "src/markdown.c"
      var $123=$work; //@line 1814 "src/markdown.c"
      var $124=$level; //@line 1814 "src/markdown.c"
      var $125=$2; //@line 1814 "src/markdown.c"
      var $126=(($125+104)|0); //@line 1814 "src/markdown.c"
      var $127=HEAP32[(($126)>>2)]; //@line 1814 "src/markdown.c"
      FUNCTION_TABLE[$121]($122, $123, $124, $127); //@line 1814 "src/markdown.c"
      __label__ = 33; break; //@line 1814 "src/markdown.c"
    case 33: 
      var $129=$2; //@line 1816 "src/markdown.c"
      _rndr_popbuf($129, 1); //@line 1816 "src/markdown.c"
      __label__ = 34; break; //@line 1817 "src/markdown.c"
    case 34: 
      var $131=$skip; //@line 1819 "src/markdown.c"
      ;
      return $131; //@line 1819 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_atxheader["X"]=1;

function _is_empty($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$data;
      $3=$size;
      $i=0; //@line 1124 "src/markdown.c"
      __label__ = 3; break; //@line 1124 "src/markdown.c"
    case 3: 
      var $5=$i; //@line 1124 "src/markdown.c"
      var $6=$3; //@line 1124 "src/markdown.c"
      var $7=(($5)>>>0) < (($6)>>>0); //@line 1124 "src/markdown.c"
      if ($7) { __label__ = 4; break; } else { var $16 = 0;__label__ = 5; break; } //@line 1124 "src/markdown.c"
    case 4: 
      var $9=$i; //@line 1124 "src/markdown.c"
      var $10=$2; //@line 1124 "src/markdown.c"
      var $11=(($10+$9)|0); //@line 1124 "src/markdown.c"
      var $12=HEAPU8[($11)]; //@line 1124 "src/markdown.c"
      var $13=(($12)&255); //@line 1124 "src/markdown.c"
      var $14=(($13)|0)!=10; //@line 1124 "src/markdown.c"
      var $16 = $14;__label__ = 5; break;
    case 5: 
      var $16;
      if ($16) { __label__ = 6; break; } else { __label__ = 10; break; }
    case 6: 
      var $18=$i; //@line 1125 "src/markdown.c"
      var $19=$2; //@line 1125 "src/markdown.c"
      var $20=(($19+$18)|0); //@line 1125 "src/markdown.c"
      var $21=HEAPU8[($20)]; //@line 1125 "src/markdown.c"
      var $22=(($21)&255); //@line 1125 "src/markdown.c"
      var $23=(($22)|0)!=32; //@line 1125 "src/markdown.c"
      if ($23) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1125 "src/markdown.c"
    case 7: 
      $1=0; //@line 1126 "src/markdown.c"
      __label__ = 11; break; //@line 1126 "src/markdown.c"
    case 8: 
      __label__ = 9; break; //@line 1126 "src/markdown.c"
    case 9: 
      var $27=$i; //@line 1124 "src/markdown.c"
      var $28=((($27)+(1))|0); //@line 1124 "src/markdown.c"
      $i=$28; //@line 1124 "src/markdown.c"
      __label__ = 3; break; //@line 1124 "src/markdown.c"
    case 10: 
      var $30=$i; //@line 1128 "src/markdown.c"
      var $31=((($30)+(1))|0); //@line 1128 "src/markdown.c"
      $1=$31; //@line 1128 "src/markdown.c"
      __label__ = 11; break; //@line 1128 "src/markdown.c"
    case 11: 
      var $33=$1; //@line 1129 "src/markdown.c"
      ;
      return $33; //@line 1129 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _is_hrule($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $n;
      var $c;
      $2=$data;
      $3=$size;
      $i=0; //@line 1135 "src/markdown.c"
      $n=0; //@line 1135 "src/markdown.c"
      var $4=$3; //@line 1139 "src/markdown.c"
      var $5=(($4)>>>0) < 3; //@line 1139 "src/markdown.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1139 "src/markdown.c"
    case 3: 
      $1=0; //@line 1139 "src/markdown.c"
      __label__ = 26; break; //@line 1139 "src/markdown.c"
    case 4: 
      var $8=$2; //@line 1140 "src/markdown.c"
      var $9=(($8)|0); //@line 1140 "src/markdown.c"
      var $10=HEAPU8[($9)]; //@line 1140 "src/markdown.c"
      var $11=(($10)&255); //@line 1140 "src/markdown.c"
      var $12=(($11)|0)==32; //@line 1140 "src/markdown.c"
      if ($12) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 1140 "src/markdown.c"
    case 5: 
      var $14=$i; //@line 1140 "src/markdown.c"
      var $15=((($14)+(1))|0); //@line 1140 "src/markdown.c"
      $i=$15; //@line 1140 "src/markdown.c"
      var $16=$2; //@line 1141 "src/markdown.c"
      var $17=(($16+1)|0); //@line 1141 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 1141 "src/markdown.c"
      var $19=(($18)&255); //@line 1141 "src/markdown.c"
      var $20=(($19)|0)==32; //@line 1141 "src/markdown.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 9; break; } //@line 1141 "src/markdown.c"
    case 6: 
      var $22=$i; //@line 1141 "src/markdown.c"
      var $23=((($22)+(1))|0); //@line 1141 "src/markdown.c"
      $i=$23; //@line 1141 "src/markdown.c"
      var $24=$2; //@line 1142 "src/markdown.c"
      var $25=(($24+2)|0); //@line 1142 "src/markdown.c"
      var $26=HEAPU8[($25)]; //@line 1142 "src/markdown.c"
      var $27=(($26)&255); //@line 1142 "src/markdown.c"
      var $28=(($27)|0)==32; //@line 1142 "src/markdown.c"
      if ($28) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1142 "src/markdown.c"
    case 7: 
      var $30=$i; //@line 1142 "src/markdown.c"
      var $31=((($30)+(1))|0); //@line 1142 "src/markdown.c"
      $i=$31; //@line 1142 "src/markdown.c"
      __label__ = 8; break; //@line 1142 "src/markdown.c"
    case 8: 
      __label__ = 9; break; //@line 1142 "src/markdown.c"
    case 9: 
      __label__ = 10; break; //@line 1142 "src/markdown.c"
    case 10: 
      var $35=$i; //@line 1145 "src/markdown.c"
      var $36=((($35)+(2))|0); //@line 1145 "src/markdown.c"
      var $37=$3; //@line 1145 "src/markdown.c"
      var $38=(($36)>>>0) >= (($37)>>>0); //@line 1145 "src/markdown.c"
      if ($38) { __label__ = 14; break; } else { __label__ = 11; break; } //@line 1145 "src/markdown.c"
    case 11: 
      var $40=$i; //@line 1145 "src/markdown.c"
      var $41=$2; //@line 1145 "src/markdown.c"
      var $42=(($41+$40)|0); //@line 1145 "src/markdown.c"
      var $43=HEAPU8[($42)]; //@line 1145 "src/markdown.c"
      var $44=(($43)&255); //@line 1145 "src/markdown.c"
      var $45=(($44)|0)!=42; //@line 1145 "src/markdown.c"
      if ($45) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 1145 "src/markdown.c"
    case 12: 
      var $47=$i; //@line 1145 "src/markdown.c"
      var $48=$2; //@line 1145 "src/markdown.c"
      var $49=(($48+$47)|0); //@line 1145 "src/markdown.c"
      var $50=HEAPU8[($49)]; //@line 1145 "src/markdown.c"
      var $51=(($50)&255); //@line 1145 "src/markdown.c"
      var $52=(($51)|0)!=45; //@line 1145 "src/markdown.c"
      if ($52) { __label__ = 13; break; } else { __label__ = 15; break; } //@line 1145 "src/markdown.c"
    case 13: 
      var $54=$i; //@line 1145 "src/markdown.c"
      var $55=$2; //@line 1145 "src/markdown.c"
      var $56=(($55+$54)|0); //@line 1145 "src/markdown.c"
      var $57=HEAPU8[($56)]; //@line 1145 "src/markdown.c"
      var $58=(($57)&255); //@line 1145 "src/markdown.c"
      var $59=(($58)|0)!=95; //@line 1145 "src/markdown.c"
      if ($59) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1145 "src/markdown.c"
    case 14: 
      $1=0; //@line 1147 "src/markdown.c"
      __label__ = 26; break; //@line 1147 "src/markdown.c"
    case 15: 
      var $62=$i; //@line 1148 "src/markdown.c"
      var $63=$2; //@line 1148 "src/markdown.c"
      var $64=(($63+$62)|0); //@line 1148 "src/markdown.c"
      var $65=HEAP8[($64)]; //@line 1148 "src/markdown.c"
      $c=$65; //@line 1148 "src/markdown.c"
      __label__ = 16; break; //@line 1151 "src/markdown.c"
    case 16: 
      var $67=$i; //@line 1151 "src/markdown.c"
      var $68=$3; //@line 1151 "src/markdown.c"
      var $69=(($67)>>>0) < (($68)>>>0); //@line 1151 "src/markdown.c"
      if ($69) { __label__ = 17; break; } else { var $78 = 0;__label__ = 18; break; } //@line 1151 "src/markdown.c"
    case 17: 
      var $71=$i; //@line 1151 "src/markdown.c"
      var $72=$2; //@line 1151 "src/markdown.c"
      var $73=(($72+$71)|0); //@line 1151 "src/markdown.c"
      var $74=HEAPU8[($73)]; //@line 1151 "src/markdown.c"
      var $75=(($74)&255); //@line 1151 "src/markdown.c"
      var $76=(($75)|0)!=10; //@line 1151 "src/markdown.c"
      var $78 = $76;__label__ = 18; break;
    case 18: 
      var $78;
      if ($78) { __label__ = 19; break; } else { __label__ = 25; break; }
    case 19: 
      var $80=$i; //@line 1152 "src/markdown.c"
      var $81=$2; //@line 1152 "src/markdown.c"
      var $82=(($81+$80)|0); //@line 1152 "src/markdown.c"
      var $83=HEAPU8[($82)]; //@line 1152 "src/markdown.c"
      var $84=(($83)&255); //@line 1152 "src/markdown.c"
      var $85=$c; //@line 1152 "src/markdown.c"
      var $86=(($85)&255); //@line 1152 "src/markdown.c"
      var $87=(($84)|0)==(($86)|0); //@line 1152 "src/markdown.c"
      if ($87) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1152 "src/markdown.c"
    case 20: 
      var $89=$n; //@line 1152 "src/markdown.c"
      var $90=((($89)+(1))|0); //@line 1152 "src/markdown.c"
      $n=$90; //@line 1152 "src/markdown.c"
      __label__ = 24; break; //@line 1152 "src/markdown.c"
    case 21: 
      var $92=$i; //@line 1153 "src/markdown.c"
      var $93=$2; //@line 1153 "src/markdown.c"
      var $94=(($93+$92)|0); //@line 1153 "src/markdown.c"
      var $95=HEAPU8[($94)]; //@line 1153 "src/markdown.c"
      var $96=(($95)&255); //@line 1153 "src/markdown.c"
      var $97=(($96)|0)!=32; //@line 1153 "src/markdown.c"
      if ($97) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1153 "src/markdown.c"
    case 22: 
      $1=0; //@line 1154 "src/markdown.c"
      __label__ = 26; break; //@line 1154 "src/markdown.c"
    case 23: 
      __label__ = 24; break;
    case 24: 
      var $101=$i; //@line 1156 "src/markdown.c"
      var $102=((($101)+(1))|0); //@line 1156 "src/markdown.c"
      $i=$102; //@line 1156 "src/markdown.c"
      __label__ = 16; break; //@line 1157 "src/markdown.c"
    case 25: 
      var $104=$n; //@line 1159 "src/markdown.c"
      var $105=(($104)>>>0) >= 3; //@line 1159 "src/markdown.c"
      var $106=(($105)&1); //@line 1159 "src/markdown.c"
      $1=$106; //@line 1159 "src/markdown.c"
      __label__ = 26; break; //@line 1159 "src/markdown.c"
    case 26: 
      var $108=$1; //@line 1160 "src/markdown.c"
      ;
      return $108; //@line 1160 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_is_hrule["X"]=1;

function _parse_htmlblock($ob, $rndr, $data, $size, $do_render) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $i;
      var $j;
      var $tag_end;
      var $curtag;
      var $work=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$do_render;
      $j=0; //@line 1901 "src/markdown.c"
      $curtag=0; //@line 1902 "src/markdown.c"
      var $7=(($work)|0); //@line 1903 "src/markdown.c"
      var $8=$4; //@line 1903 "src/markdown.c"
      HEAP32[(($7)>>2)]=$8; //@line 1903 "src/markdown.c"
      var $9=(($work+4)|0); //@line 1903 "src/markdown.c"
      HEAP32[(($9)>>2)]=0; //@line 1903 "src/markdown.c"
      var $10=(($work+8)|0); //@line 1903 "src/markdown.c"
      HEAP32[(($10)>>2)]=0; //@line 1903 "src/markdown.c"
      var $11=(($work+12)|0); //@line 1903 "src/markdown.c"
      HEAP32[(($11)>>2)]=0; //@line 1903 "src/markdown.c"
      var $12=$5; //@line 1906 "src/markdown.c"
      var $13=(($12)>>>0) < 2; //@line 1906 "src/markdown.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 1906 "src/markdown.c"
    case 3: 
      var $15=$4; //@line 1906 "src/markdown.c"
      var $16=(($15)|0); //@line 1906 "src/markdown.c"
      var $17=HEAPU8[($16)]; //@line 1906 "src/markdown.c"
      var $18=(($17)&255); //@line 1906 "src/markdown.c"
      var $19=(($18)|0)!=60; //@line 1906 "src/markdown.c"
      if ($19) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1906 "src/markdown.c"
    case 4: 
      $1=0; //@line 1907 "src/markdown.c"
      __label__ = 63; break; //@line 1907 "src/markdown.c"
    case 5: 
      $i=1; //@line 1909 "src/markdown.c"
      __label__ = 6; break; //@line 1910 "src/markdown.c"
    case 6: 
      var $23=$i; //@line 1910 "src/markdown.c"
      var $24=$5; //@line 1910 "src/markdown.c"
      var $25=(($23)>>>0) < (($24)>>>0); //@line 1910 "src/markdown.c"
      if ($25) { __label__ = 7; break; } else { var $41 = 0;__label__ = 9; break; } //@line 1910 "src/markdown.c"
    case 7: 
      var $27=$i; //@line 1910 "src/markdown.c"
      var $28=$4; //@line 1910 "src/markdown.c"
      var $29=(($28+$27)|0); //@line 1910 "src/markdown.c"
      var $30=HEAPU8[($29)]; //@line 1910 "src/markdown.c"
      var $31=(($30)&255); //@line 1910 "src/markdown.c"
      var $32=(($31)|0)!=62; //@line 1910 "src/markdown.c"
      if ($32) { __label__ = 8; break; } else { var $41 = 0;__label__ = 9; break; } //@line 1910 "src/markdown.c"
    case 8: 
      var $34=$i; //@line 1910 "src/markdown.c"
      var $35=$4; //@line 1910 "src/markdown.c"
      var $36=(($35+$34)|0); //@line 1910 "src/markdown.c"
      var $37=HEAPU8[($36)]; //@line 1910 "src/markdown.c"
      var $38=(($37)&255); //@line 1910 "src/markdown.c"
      var $39=(($38)|0)!=32; //@line 1910 "src/markdown.c"
      var $41 = $39;__label__ = 9; break;
    case 9: 
      var $41;
      if ($41) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $43=$i; //@line 1911 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 1911 "src/markdown.c"
      $i=$44; //@line 1911 "src/markdown.c"
      __label__ = 6; break; //@line 1911 "src/markdown.c"
    case 11: 
      var $46=$i; //@line 1913 "src/markdown.c"
      var $47=$5; //@line 1913 "src/markdown.c"
      var $48=(($46)>>>0) < (($47)>>>0); //@line 1913 "src/markdown.c"
      if ($48) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1913 "src/markdown.c"
    case 12: 
      var $50=$4; //@line 1914 "src/markdown.c"
      var $51=(($50+1)|0); //@line 1914 "src/markdown.c"
      var $52=$i; //@line 1914 "src/markdown.c"
      var $53=((($52)-(1))|0); //@line 1914 "src/markdown.c"
      var $54=_find_block_tag($51, $53); //@line 1914 "src/markdown.c"
      $curtag=$54; //@line 1914 "src/markdown.c"
      __label__ = 13; break; //@line 1914 "src/markdown.c"
    case 13: 
      var $56=$curtag; //@line 1917 "src/markdown.c"
      var $57=(($56)|0)!=0; //@line 1917 "src/markdown.c"
      if ($57) { __label__ = 53; break; } else { __label__ = 14; break; } //@line 1917 "src/markdown.c"
    case 14: 
      var $59=$5; //@line 1920 "src/markdown.c"
      var $60=(($59)>>>0) > 5; //@line 1920 "src/markdown.c"
      if ($60) { __label__ = 15; break; } else { __label__ = 34; break; } //@line 1920 "src/markdown.c"
    case 15: 
      var $62=$4; //@line 1920 "src/markdown.c"
      var $63=(($62+1)|0); //@line 1920 "src/markdown.c"
      var $64=HEAPU8[($63)]; //@line 1920 "src/markdown.c"
      var $65=(($64)&255); //@line 1920 "src/markdown.c"
      var $66=(($65)|0)==33; //@line 1920 "src/markdown.c"
      if ($66) { __label__ = 16; break; } else { __label__ = 34; break; } //@line 1920 "src/markdown.c"
    case 16: 
      var $68=$4; //@line 1920 "src/markdown.c"
      var $69=(($68+2)|0); //@line 1920 "src/markdown.c"
      var $70=HEAPU8[($69)]; //@line 1920 "src/markdown.c"
      var $71=(($70)&255); //@line 1920 "src/markdown.c"
      var $72=(($71)|0)==45; //@line 1920 "src/markdown.c"
      if ($72) { __label__ = 17; break; } else { __label__ = 34; break; } //@line 1920 "src/markdown.c"
    case 17: 
      var $74=$4; //@line 1920 "src/markdown.c"
      var $75=(($74+3)|0); //@line 1920 "src/markdown.c"
      var $76=HEAPU8[($75)]; //@line 1920 "src/markdown.c"
      var $77=(($76)&255); //@line 1920 "src/markdown.c"
      var $78=(($77)|0)==45; //@line 1920 "src/markdown.c"
      if ($78) { __label__ = 18; break; } else { __label__ = 34; break; } //@line 1920 "src/markdown.c"
    case 18: 
      $i=5; //@line 1921 "src/markdown.c"
      __label__ = 19; break; //@line 1923 "src/markdown.c"
    case 19: 
      var $81=$i; //@line 1923 "src/markdown.c"
      var $82=$5; //@line 1923 "src/markdown.c"
      var $83=(($81)>>>0) < (($82)>>>0); //@line 1923 "src/markdown.c"
      if ($83) { __label__ = 20; break; } else { var $111 = 0;__label__ = 24; break; } //@line 1923 "src/markdown.c"
    case 20: 
      var $85=$i; //@line 1923 "src/markdown.c"
      var $86=((($85)-(2))|0); //@line 1923 "src/markdown.c"
      var $87=$4; //@line 1923 "src/markdown.c"
      var $88=(($87+$86)|0); //@line 1923 "src/markdown.c"
      var $89=HEAPU8[($88)]; //@line 1923 "src/markdown.c"
      var $90=(($89)&255); //@line 1923 "src/markdown.c"
      var $91=(($90)|0)==45; //@line 1923 "src/markdown.c"
      if ($91) { __label__ = 21; break; } else { var $108 = 0;__label__ = 23; break; } //@line 1923 "src/markdown.c"
    case 21: 
      var $93=$i; //@line 1923 "src/markdown.c"
      var $94=((($93)-(1))|0); //@line 1923 "src/markdown.c"
      var $95=$4; //@line 1923 "src/markdown.c"
      var $96=(($95+$94)|0); //@line 1923 "src/markdown.c"
      var $97=HEAPU8[($96)]; //@line 1923 "src/markdown.c"
      var $98=(($97)&255); //@line 1923 "src/markdown.c"
      var $99=(($98)|0)==45; //@line 1923 "src/markdown.c"
      if ($99) { __label__ = 22; break; } else { var $108 = 0;__label__ = 23; break; } //@line 1923 "src/markdown.c"
    case 22: 
      var $101=$i; //@line 1923 "src/markdown.c"
      var $102=$4; //@line 1923 "src/markdown.c"
      var $103=(($102+$101)|0); //@line 1923 "src/markdown.c"
      var $104=HEAPU8[($103)]; //@line 1923 "src/markdown.c"
      var $105=(($104)&255); //@line 1923 "src/markdown.c"
      var $106=(($105)|0)==62; //@line 1923 "src/markdown.c"
      var $108 = $106;__label__ = 23; break;
    case 23: 
      var $108;
      var $109=$108 ^ 1;
      var $111 = $109;__label__ = 24; break;
    case 24: 
      var $111;
      if ($111) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: 
      var $113=$i; //@line 1924 "src/markdown.c"
      var $114=((($113)+(1))|0); //@line 1924 "src/markdown.c"
      $i=$114; //@line 1924 "src/markdown.c"
      __label__ = 19; break; //@line 1924 "src/markdown.c"
    case 26: 
      var $116=$i; //@line 1926 "src/markdown.c"
      var $117=((($116)+(1))|0); //@line 1926 "src/markdown.c"
      $i=$117; //@line 1926 "src/markdown.c"
      var $118=$i; //@line 1928 "src/markdown.c"
      var $119=$5; //@line 1928 "src/markdown.c"
      var $120=(($118)>>>0) < (($119)>>>0); //@line 1928 "src/markdown.c"
      if ($120) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1928 "src/markdown.c"
    case 27: 
      var $122=$4; //@line 1929 "src/markdown.c"
      var $123=$i; //@line 1929 "src/markdown.c"
      var $124=(($122+$123)|0); //@line 1929 "src/markdown.c"
      var $125=$5; //@line 1929 "src/markdown.c"
      var $126=$i; //@line 1929 "src/markdown.c"
      var $127=((($125)-($126))|0); //@line 1929 "src/markdown.c"
      var $128=_is_empty($124, $127); //@line 1929 "src/markdown.c"
      $j=$128; //@line 1929 "src/markdown.c"
      __label__ = 28; break; //@line 1929 "src/markdown.c"
    case 28: 
      var $130=$j; //@line 1931 "src/markdown.c"
      var $131=(($130)|0)!=0; //@line 1931 "src/markdown.c"
      if ($131) { __label__ = 29; break; } else { __label__ = 33; break; } //@line 1931 "src/markdown.c"
    case 29: 
      var $133=$i; //@line 1932 "src/markdown.c"
      var $134=$j; //@line 1932 "src/markdown.c"
      var $135=((($133)+($134))|0); //@line 1932 "src/markdown.c"
      var $136=(($work+4)|0); //@line 1932 "src/markdown.c"
      HEAP32[(($136)>>2)]=$135; //@line 1932 "src/markdown.c"
      var $137=$6; //@line 1933 "src/markdown.c"
      var $138=(($137)|0)!=0; //@line 1933 "src/markdown.c"
      if ($138) { __label__ = 30; break; } else { __label__ = 32; break; } //@line 1933 "src/markdown.c"
    case 30: 
      var $140=$3; //@line 1933 "src/markdown.c"
      var $141=(($140)|0); //@line 1933 "src/markdown.c"
      var $142=(($141+8)|0); //@line 1933 "src/markdown.c"
      var $143=HEAP32[(($142)>>2)]; //@line 1933 "src/markdown.c"
      var $144=(($143)|0)!=0; //@line 1933 "src/markdown.c"
      if ($144) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 1933 "src/markdown.c"
    case 31: 
      var $146=$3; //@line 1934 "src/markdown.c"
      var $147=(($146)|0); //@line 1934 "src/markdown.c"
      var $148=(($147+8)|0); //@line 1934 "src/markdown.c"
      var $149=HEAP32[(($148)>>2)]; //@line 1934 "src/markdown.c"
      var $150=$2; //@line 1934 "src/markdown.c"
      var $151=$3; //@line 1934 "src/markdown.c"
      var $152=(($151+104)|0); //@line 1934 "src/markdown.c"
      var $153=HEAP32[(($152)>>2)]; //@line 1934 "src/markdown.c"
      FUNCTION_TABLE[$149]($150, $work, $153); //@line 1934 "src/markdown.c"
      __label__ = 32; break; //@line 1934 "src/markdown.c"
    case 32: 
      var $155=(($work+4)|0); //@line 1935 "src/markdown.c"
      var $156=HEAP32[(($155)>>2)]; //@line 1935 "src/markdown.c"
      $1=$156; //@line 1935 "src/markdown.c"
      __label__ = 63; break; //@line 1935 "src/markdown.c"
    case 33: 
      __label__ = 34; break; //@line 1937 "src/markdown.c"
    case 34: 
      var $159=$5; //@line 1940 "src/markdown.c"
      var $160=(($159)>>>0) > 4; //@line 1940 "src/markdown.c"
      if ($160) { __label__ = 35; break; } else { __label__ = 52; break; } //@line 1940 "src/markdown.c"
    case 35: 
      var $162=$4; //@line 1940 "src/markdown.c"
      var $163=(($162+1)|0); //@line 1940 "src/markdown.c"
      var $164=HEAPU8[($163)]; //@line 1940 "src/markdown.c"
      var $165=(($164)&255); //@line 1940 "src/markdown.c"
      var $166=(($165)|0)==104; //@line 1940 "src/markdown.c"
      if ($166) { __label__ = 37; break; } else { __label__ = 36; break; } //@line 1940 "src/markdown.c"
    case 36: 
      var $168=$4; //@line 1940 "src/markdown.c"
      var $169=(($168+1)|0); //@line 1940 "src/markdown.c"
      var $170=HEAPU8[($169)]; //@line 1940 "src/markdown.c"
      var $171=(($170)&255); //@line 1940 "src/markdown.c"
      var $172=(($171)|0)==72; //@line 1940 "src/markdown.c"
      if ($172) { __label__ = 37; break; } else { __label__ = 52; break; } //@line 1940 "src/markdown.c"
    case 37: 
      var $174=$4; //@line 1940 "src/markdown.c"
      var $175=(($174+2)|0); //@line 1940 "src/markdown.c"
      var $176=HEAPU8[($175)]; //@line 1940 "src/markdown.c"
      var $177=(($176)&255); //@line 1940 "src/markdown.c"
      var $178=(($177)|0)==114; //@line 1940 "src/markdown.c"
      if ($178) { __label__ = 39; break; } else { __label__ = 38; break; } //@line 1940 "src/markdown.c"
    case 38: 
      var $180=$4; //@line 1940 "src/markdown.c"
      var $181=(($180+2)|0); //@line 1940 "src/markdown.c"
      var $182=HEAPU8[($181)]; //@line 1940 "src/markdown.c"
      var $183=(($182)&255); //@line 1940 "src/markdown.c"
      var $184=(($183)|0)==82; //@line 1940 "src/markdown.c"
      if ($184) { __label__ = 39; break; } else { __label__ = 52; break; } //@line 1940 "src/markdown.c"
    case 39: 
      $i=3; //@line 1941 "src/markdown.c"
      __label__ = 40; break; //@line 1942 "src/markdown.c"
    case 40: 
      var $187=$i; //@line 1942 "src/markdown.c"
      var $188=$5; //@line 1942 "src/markdown.c"
      var $189=(($187)>>>0) < (($188)>>>0); //@line 1942 "src/markdown.c"
      if ($189) { __label__ = 41; break; } else { var $198 = 0;__label__ = 42; break; } //@line 1942 "src/markdown.c"
    case 41: 
      var $191=$i; //@line 1942 "src/markdown.c"
      var $192=$4; //@line 1942 "src/markdown.c"
      var $193=(($192+$191)|0); //@line 1942 "src/markdown.c"
      var $194=HEAPU8[($193)]; //@line 1942 "src/markdown.c"
      var $195=(($194)&255); //@line 1942 "src/markdown.c"
      var $196=(($195)|0)!=62; //@line 1942 "src/markdown.c"
      var $198 = $196;__label__ = 42; break;
    case 42: 
      var $198;
      if ($198) { __label__ = 43; break; } else { __label__ = 44; break; }
    case 43: 
      var $200=$i; //@line 1943 "src/markdown.c"
      var $201=((($200)+(1))|0); //@line 1943 "src/markdown.c"
      $i=$201; //@line 1943 "src/markdown.c"
      __label__ = 40; break; //@line 1943 "src/markdown.c"
    case 44: 
      var $203=$i; //@line 1945 "src/markdown.c"
      var $204=((($203)+(1))|0); //@line 1945 "src/markdown.c"
      var $205=$5; //@line 1945 "src/markdown.c"
      var $206=(($204)>>>0) < (($205)>>>0); //@line 1945 "src/markdown.c"
      if ($206) { __label__ = 45; break; } else { __label__ = 51; break; } //@line 1945 "src/markdown.c"
    case 45: 
      var $208=$i; //@line 1946 "src/markdown.c"
      var $209=((($208)+(1))|0); //@line 1946 "src/markdown.c"
      $i=$209; //@line 1946 "src/markdown.c"
      var $210=$4; //@line 1947 "src/markdown.c"
      var $211=$i; //@line 1947 "src/markdown.c"
      var $212=(($210+$211)|0); //@line 1947 "src/markdown.c"
      var $213=$5; //@line 1947 "src/markdown.c"
      var $214=$i; //@line 1947 "src/markdown.c"
      var $215=((($213)-($214))|0); //@line 1947 "src/markdown.c"
      var $216=_is_empty($212, $215); //@line 1947 "src/markdown.c"
      $j=$216; //@line 1947 "src/markdown.c"
      var $217=$j; //@line 1948 "src/markdown.c"
      var $218=(($217)|0)!=0; //@line 1948 "src/markdown.c"
      if ($218) { __label__ = 46; break; } else { __label__ = 50; break; } //@line 1948 "src/markdown.c"
    case 46: 
      var $220=$i; //@line 1949 "src/markdown.c"
      var $221=$j; //@line 1949 "src/markdown.c"
      var $222=((($220)+($221))|0); //@line 1949 "src/markdown.c"
      var $223=(($work+4)|0); //@line 1949 "src/markdown.c"
      HEAP32[(($223)>>2)]=$222; //@line 1949 "src/markdown.c"
      var $224=$6; //@line 1950 "src/markdown.c"
      var $225=(($224)|0)!=0; //@line 1950 "src/markdown.c"
      if ($225) { __label__ = 47; break; } else { __label__ = 49; break; } //@line 1950 "src/markdown.c"
    case 47: 
      var $227=$3; //@line 1950 "src/markdown.c"
      var $228=(($227)|0); //@line 1950 "src/markdown.c"
      var $229=(($228+8)|0); //@line 1950 "src/markdown.c"
      var $230=HEAP32[(($229)>>2)]; //@line 1950 "src/markdown.c"
      var $231=(($230)|0)!=0; //@line 1950 "src/markdown.c"
      if ($231) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 1950 "src/markdown.c"
    case 48: 
      var $233=$3; //@line 1951 "src/markdown.c"
      var $234=(($233)|0); //@line 1951 "src/markdown.c"
      var $235=(($234+8)|0); //@line 1951 "src/markdown.c"
      var $236=HEAP32[(($235)>>2)]; //@line 1951 "src/markdown.c"
      var $237=$2; //@line 1951 "src/markdown.c"
      var $238=$3; //@line 1951 "src/markdown.c"
      var $239=(($238+104)|0); //@line 1951 "src/markdown.c"
      var $240=HEAP32[(($239)>>2)]; //@line 1951 "src/markdown.c"
      FUNCTION_TABLE[$236]($237, $work, $240); //@line 1951 "src/markdown.c"
      __label__ = 49; break; //@line 1951 "src/markdown.c"
    case 49: 
      var $242=(($work+4)|0); //@line 1952 "src/markdown.c"
      var $243=HEAP32[(($242)>>2)]; //@line 1952 "src/markdown.c"
      $1=$243; //@line 1952 "src/markdown.c"
      __label__ = 63; break; //@line 1952 "src/markdown.c"
    case 50: 
      __label__ = 51; break; //@line 1954 "src/markdown.c"
    case 51: 
      __label__ = 52; break; //@line 1955 "src/markdown.c"
    case 52: 
      $1=0; //@line 1958 "src/markdown.c"
      __label__ = 63; break; //@line 1958 "src/markdown.c"
    case 53: 
      var $248=$curtag; //@line 1963 "src/markdown.c"
      var $249=$3; //@line 1963 "src/markdown.c"
      var $250=$4; //@line 1963 "src/markdown.c"
      var $251=$5; //@line 1963 "src/markdown.c"
      var $252=_htmlblock_end($248, $249, $250, $251, 1); //@line 1963 "src/markdown.c"
      $tag_end=$252; //@line 1963 "src/markdown.c"
      var $253=$tag_end; //@line 1967 "src/markdown.c"
      var $254=(($253)|0)!=0; //@line 1967 "src/markdown.c"
      if ($254) { __label__ = 57; break; } else { __label__ = 54; break; } //@line 1967 "src/markdown.c"
    case 54: 
      var $256=$curtag; //@line 1967 "src/markdown.c"
      var $257=_strcmp($256, ((STRING_TABLE.__str22)|0)); //@line 1967 "src/markdown.c"
      var $258=(($257)|0)!=0; //@line 1967 "src/markdown.c"
      if ($258) { __label__ = 55; break; } else { __label__ = 57; break; } //@line 1967 "src/markdown.c"
    case 55: 
      var $260=$curtag; //@line 1967 "src/markdown.c"
      var $261=_strcmp($260, ((STRING_TABLE.__str7)|0)); //@line 1967 "src/markdown.c"
      var $262=(($261)|0)!=0; //@line 1967 "src/markdown.c"
      if ($262) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 1967 "src/markdown.c"
    case 56: 
      var $264=$curtag; //@line 1968 "src/markdown.c"
      var $265=$3; //@line 1968 "src/markdown.c"
      var $266=$4; //@line 1968 "src/markdown.c"
      var $267=$5; //@line 1968 "src/markdown.c"
      var $268=_htmlblock_end($264, $265, $266, $267, 0); //@line 1968 "src/markdown.c"
      $tag_end=$268; //@line 1968 "src/markdown.c"
      __label__ = 57; break; //@line 1969 "src/markdown.c"
    case 57: 
      var $270=$tag_end; //@line 1971 "src/markdown.c"
      var $271=(($270)|0)!=0; //@line 1971 "src/markdown.c"
      if ($271) { __label__ = 59; break; } else { __label__ = 58; break; } //@line 1971 "src/markdown.c"
    case 58: 
      $1=0; //@line 1972 "src/markdown.c"
      __label__ = 63; break; //@line 1972 "src/markdown.c"
    case 59: 
      var $274=$tag_end; //@line 1975 "src/markdown.c"
      var $275=(($work+4)|0); //@line 1975 "src/markdown.c"
      HEAP32[(($275)>>2)]=$274; //@line 1975 "src/markdown.c"
      var $276=$6; //@line 1976 "src/markdown.c"
      var $277=(($276)|0)!=0; //@line 1976 "src/markdown.c"
      if ($277) { __label__ = 60; break; } else { __label__ = 62; break; } //@line 1976 "src/markdown.c"
    case 60: 
      var $279=$3; //@line 1976 "src/markdown.c"
      var $280=(($279)|0); //@line 1976 "src/markdown.c"
      var $281=(($280+8)|0); //@line 1976 "src/markdown.c"
      var $282=HEAP32[(($281)>>2)]; //@line 1976 "src/markdown.c"
      var $283=(($282)|0)!=0; //@line 1976 "src/markdown.c"
      if ($283) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 1976 "src/markdown.c"
    case 61: 
      var $285=$3; //@line 1977 "src/markdown.c"
      var $286=(($285)|0); //@line 1977 "src/markdown.c"
      var $287=(($286+8)|0); //@line 1977 "src/markdown.c"
      var $288=HEAP32[(($287)>>2)]; //@line 1977 "src/markdown.c"
      var $289=$2; //@line 1977 "src/markdown.c"
      var $290=$3; //@line 1977 "src/markdown.c"
      var $291=(($290+104)|0); //@line 1977 "src/markdown.c"
      var $292=HEAP32[(($291)>>2)]; //@line 1977 "src/markdown.c"
      FUNCTION_TABLE[$288]($289, $work, $292); //@line 1977 "src/markdown.c"
      __label__ = 62; break; //@line 1977 "src/markdown.c"
    case 62: 
      var $294=$tag_end; //@line 1979 "src/markdown.c"
      $1=$294; //@line 1979 "src/markdown.c"
      __label__ = 63; break; //@line 1979 "src/markdown.c"
    case 63: 
      var $296=$1; //@line 1980 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $296; //@line 1980 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_htmlblock["X"]=1;

function _parse_fencedcode($ob, $rndr, $data, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 32; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $beg;
      var $end;
      var $work;
      var $lang=__stackBase__;
      var $fence_end;
      var $fence_trail=(__stackBase__)+(16);
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $work=0; //@line 1545 "src/markdown.c"
      var $6=$lang; //@line 1546 "src/markdown.c"
      HEAP32[(($6)>>2)]=0; HEAP32[((($6)+(4))>>2)]=0; HEAP32[((($6)+(8))>>2)]=0; HEAP32[((($6)+(12))>>2)]=0; //@line 1546 "src/markdown.c"
      var $7=$4; //@line 1548 "src/markdown.c"
      var $8=$5; //@line 1548 "src/markdown.c"
      var $9=_is_codefence($7, $8, $lang); //@line 1548 "src/markdown.c"
      $beg=$9; //@line 1548 "src/markdown.c"
      var $10=$beg; //@line 1549 "src/markdown.c"
      var $11=(($10)|0)==0; //@line 1549 "src/markdown.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1549 "src/markdown.c"
    case 3: 
      $1=0; //@line 1549 "src/markdown.c"
      __label__ = 30; break; //@line 1549 "src/markdown.c"
    case 4: 
      var $14=$3; //@line 1551 "src/markdown.c"
      var $15=_rndr_newbuf($14, 0); //@line 1551 "src/markdown.c"
      $work=$15; //@line 1551 "src/markdown.c"
      __label__ = 5; break; //@line 1553 "src/markdown.c"
    case 5: 
      var $17=$beg; //@line 1553 "src/markdown.c"
      var $18=$5; //@line 1553 "src/markdown.c"
      var $19=(($17)>>>0) < (($18)>>>0); //@line 1553 "src/markdown.c"
      if ($19) { __label__ = 6; break; } else { __label__ = 21; break; } //@line 1553 "src/markdown.c"
    case 6: 
      var $21=$fence_trail; //@line 1555 "src/markdown.c"
      HEAP32[(($21)>>2)]=0; HEAP32[((($21)+(4))>>2)]=0; HEAP32[((($21)+(8))>>2)]=0; HEAP32[((($21)+(12))>>2)]=0; //@line 1555 "src/markdown.c"
      var $22=$4; //@line 1557 "src/markdown.c"
      var $23=$beg; //@line 1557 "src/markdown.c"
      var $24=(($22+$23)|0); //@line 1557 "src/markdown.c"
      var $25=$5; //@line 1557 "src/markdown.c"
      var $26=$beg; //@line 1557 "src/markdown.c"
      var $27=((($25)-($26))|0); //@line 1557 "src/markdown.c"
      var $28=_is_codefence($24, $27, $fence_trail); //@line 1557 "src/markdown.c"
      $fence_end=$28; //@line 1557 "src/markdown.c"
      var $29=$fence_end; //@line 1558 "src/markdown.c"
      var $30=(($29)|0)!=0; //@line 1558 "src/markdown.c"
      if ($30) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 1558 "src/markdown.c"
    case 7: 
      var $32=(($fence_trail+4)|0); //@line 1558 "src/markdown.c"
      var $33=HEAP32[(($32)>>2)]; //@line 1558 "src/markdown.c"
      var $34=(($33)|0)==0; //@line 1558 "src/markdown.c"
      if ($34) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1558 "src/markdown.c"
    case 8: 
      var $36=$fence_end; //@line 1559 "src/markdown.c"
      var $37=$beg; //@line 1559 "src/markdown.c"
      var $38=((($37)+($36))|0); //@line 1559 "src/markdown.c"
      $beg=$38; //@line 1559 "src/markdown.c"
      __label__ = 21; break; //@line 1560 "src/markdown.c"
    case 9: 
      var $40=$beg; //@line 1563 "src/markdown.c"
      var $41=((($40)+(1))|0); //@line 1563 "src/markdown.c"
      $end=$41; //@line 1563 "src/markdown.c"
      __label__ = 10; break; //@line 1563 "src/markdown.c"
    case 10: 
      var $43=$end; //@line 1563 "src/markdown.c"
      var $44=$5; //@line 1563 "src/markdown.c"
      var $45=(($43)>>>0) < (($44)>>>0); //@line 1563 "src/markdown.c"
      if ($45) { __label__ = 11; break; } else { var $55 = 0;__label__ = 12; break; } //@line 1563 "src/markdown.c"
    case 11: 
      var $47=$end; //@line 1563 "src/markdown.c"
      var $48=((($47)-(1))|0); //@line 1563 "src/markdown.c"
      var $49=$4; //@line 1563 "src/markdown.c"
      var $50=(($49+$48)|0); //@line 1563 "src/markdown.c"
      var $51=HEAPU8[($50)]; //@line 1563 "src/markdown.c"
      var $52=(($51)&255); //@line 1563 "src/markdown.c"
      var $53=(($52)|0)!=10; //@line 1563 "src/markdown.c"
      var $55 = $53;__label__ = 12; break;
    case 12: 
      var $55;
      if ($55) { __label__ = 13; break; } else { __label__ = 15; break; }
    case 13: 
      __label__ = 14; break;
    case 14: 
      var $58=$end; //@line 1563 "src/markdown.c"
      var $59=((($58)+(1))|0); //@line 1563 "src/markdown.c"
      $end=$59; //@line 1563 "src/markdown.c"
      __label__ = 10; break; //@line 1563 "src/markdown.c"
    case 15: 
      var $61=$beg; //@line 1565 "src/markdown.c"
      var $62=$end; //@line 1565 "src/markdown.c"
      var $63=(($61)>>>0) < (($62)>>>0); //@line 1565 "src/markdown.c"
      if ($63) { __label__ = 16; break; } else { __label__ = 20; break; } //@line 1565 "src/markdown.c"
    case 16: 
      var $65=$4; //@line 1568 "src/markdown.c"
      var $66=$beg; //@line 1568 "src/markdown.c"
      var $67=(($65+$66)|0); //@line 1568 "src/markdown.c"
      var $68=$end; //@line 1568 "src/markdown.c"
      var $69=$beg; //@line 1568 "src/markdown.c"
      var $70=((($68)-($69))|0); //@line 1568 "src/markdown.c"
      var $71=_is_empty($67, $70); //@line 1568 "src/markdown.c"
      var $72=(($71)|0)!=0; //@line 1568 "src/markdown.c"
      if ($72) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1568 "src/markdown.c"
    case 17: 
      var $74=$work; //@line 1569 "src/markdown.c"
      _bufputc($74, 10); //@line 1569 "src/markdown.c"
      __label__ = 19; break; //@line 1569 "src/markdown.c"
    case 18: 
      var $76=$work; //@line 1570 "src/markdown.c"
      var $77=$4; //@line 1570 "src/markdown.c"
      var $78=$beg; //@line 1570 "src/markdown.c"
      var $79=(($77+$78)|0); //@line 1570 "src/markdown.c"
      var $80=$end; //@line 1570 "src/markdown.c"
      var $81=$beg; //@line 1570 "src/markdown.c"
      var $82=((($80)-($81))|0); //@line 1570 "src/markdown.c"
      _bufput($76, $79, $82); //@line 1570 "src/markdown.c"
      __label__ = 19; break;
    case 19: 
      __label__ = 20; break; //@line 1571 "src/markdown.c"
    case 20: 
      var $85=$end; //@line 1572 "src/markdown.c"
      $beg=$85; //@line 1572 "src/markdown.c"
      __label__ = 5; break; //@line 1573 "src/markdown.c"
    case 21: 
      var $87=$work; //@line 1575 "src/markdown.c"
      var $88=(($87+4)|0); //@line 1575 "src/markdown.c"
      var $89=HEAP32[(($88)>>2)]; //@line 1575 "src/markdown.c"
      var $90=(($89)|0)!=0; //@line 1575 "src/markdown.c"
      if ($90) { __label__ = 22; break; } else { __label__ = 24; break; } //@line 1575 "src/markdown.c"
    case 22: 
      var $92=$work; //@line 1575 "src/markdown.c"
      var $93=(($92+4)|0); //@line 1575 "src/markdown.c"
      var $94=HEAP32[(($93)>>2)]; //@line 1575 "src/markdown.c"
      var $95=((($94)-(1))|0); //@line 1575 "src/markdown.c"
      var $96=$work; //@line 1575 "src/markdown.c"
      var $97=(($96)|0); //@line 1575 "src/markdown.c"
      var $98=HEAP32[(($97)>>2)]; //@line 1575 "src/markdown.c"
      var $99=(($98+$95)|0); //@line 1575 "src/markdown.c"
      var $100=HEAPU8[($99)]; //@line 1575 "src/markdown.c"
      var $101=(($100)&255); //@line 1575 "src/markdown.c"
      var $102=(($101)|0)!=10; //@line 1575 "src/markdown.c"
      if ($102) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1575 "src/markdown.c"
    case 23: 
      var $104=$work; //@line 1576 "src/markdown.c"
      _bufputc($104, 10); //@line 1576 "src/markdown.c"
      __label__ = 24; break; //@line 1576 "src/markdown.c"
    case 24: 
      var $106=$3; //@line 1578 "src/markdown.c"
      var $107=(($106)|0); //@line 1578 "src/markdown.c"
      var $108=(($107)|0); //@line 1578 "src/markdown.c"
      var $109=HEAP32[(($108)>>2)]; //@line 1578 "src/markdown.c"
      var $110=(($109)|0)!=0; //@line 1578 "src/markdown.c"
      if ($110) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 1578 "src/markdown.c"
    case 25: 
      var $112=$3; //@line 1579 "src/markdown.c"
      var $113=(($112)|0); //@line 1579 "src/markdown.c"
      var $114=(($113)|0); //@line 1579 "src/markdown.c"
      var $115=HEAP32[(($114)>>2)]; //@line 1579 "src/markdown.c"
      var $116=$2; //@line 1579 "src/markdown.c"
      var $117=$work; //@line 1579 "src/markdown.c"
      var $118=(($lang+4)|0); //@line 1579 "src/markdown.c"
      var $119=HEAP32[(($118)>>2)]; //@line 1579 "src/markdown.c"
      var $120=(($119)|0)!=0; //@line 1579 "src/markdown.c"
      if ($120) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1579 "src/markdown.c"
    case 26: 
      var $124 = $lang;__label__ = 28; break; //@line 1579 "src/markdown.c"
    case 27: 
      var $124 = 0;__label__ = 28; break; //@line 1579 "src/markdown.c"
    case 28: 
      var $124; //@line 1579 "src/markdown.c"
      var $125=$3; //@line 1579 "src/markdown.c"
      var $126=(($125+104)|0); //@line 1579 "src/markdown.c"
      var $127=HEAP32[(($126)>>2)]; //@line 1579 "src/markdown.c"
      FUNCTION_TABLE[$115]($116, $117, $124, $127); //@line 1579 "src/markdown.c"
      __label__ = 29; break; //@line 1579 "src/markdown.c"
    case 29: 
      var $129=$3; //@line 1581 "src/markdown.c"
      _rndr_popbuf($129, 0); //@line 1581 "src/markdown.c"
      var $130=$beg; //@line 1582 "src/markdown.c"
      $1=$130; //@line 1582 "src/markdown.c"
      __label__ = 30; break; //@line 1582 "src/markdown.c"
    case 30: 
      var $132=$1; //@line 1583 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $132; //@line 1583 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_fencedcode["X"]=1;

function _prefix_quote($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$data;
      $3=$size;
      $i=0; //@line 1309 "src/markdown.c"
      var $4=$i; //@line 1310 "src/markdown.c"
      var $5=$3; //@line 1310 "src/markdown.c"
      var $6=(($4)>>>0) < (($5)>>>0); //@line 1310 "src/markdown.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1310 "src/markdown.c"
    case 3: 
      var $8=$i; //@line 1310 "src/markdown.c"
      var $9=$2; //@line 1310 "src/markdown.c"
      var $10=(($9+$8)|0); //@line 1310 "src/markdown.c"
      var $11=HEAPU8[($10)]; //@line 1310 "src/markdown.c"
      var $12=(($11)&255); //@line 1310 "src/markdown.c"
      var $13=(($12)|0)==32; //@line 1310 "src/markdown.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1310 "src/markdown.c"
    case 4: 
      var $15=$i; //@line 1310 "src/markdown.c"
      var $16=((($15)+(1))|0); //@line 1310 "src/markdown.c"
      $i=$16; //@line 1310 "src/markdown.c"
      __label__ = 5; break; //@line 1310 "src/markdown.c"
    case 5: 
      var $18=$i; //@line 1311 "src/markdown.c"
      var $19=$3; //@line 1311 "src/markdown.c"
      var $20=(($18)>>>0) < (($19)>>>0); //@line 1311 "src/markdown.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 1311 "src/markdown.c"
    case 6: 
      var $22=$i; //@line 1311 "src/markdown.c"
      var $23=$2; //@line 1311 "src/markdown.c"
      var $24=(($23+$22)|0); //@line 1311 "src/markdown.c"
      var $25=HEAPU8[($24)]; //@line 1311 "src/markdown.c"
      var $26=(($25)&255); //@line 1311 "src/markdown.c"
      var $27=(($26)|0)==32; //@line 1311 "src/markdown.c"
      if ($27) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1311 "src/markdown.c"
    case 7: 
      var $29=$i; //@line 1311 "src/markdown.c"
      var $30=((($29)+(1))|0); //@line 1311 "src/markdown.c"
      $i=$30; //@line 1311 "src/markdown.c"
      __label__ = 8; break; //@line 1311 "src/markdown.c"
    case 8: 
      var $32=$i; //@line 1312 "src/markdown.c"
      var $33=$3; //@line 1312 "src/markdown.c"
      var $34=(($32)>>>0) < (($33)>>>0); //@line 1312 "src/markdown.c"
      if ($34) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 1312 "src/markdown.c"
    case 9: 
      var $36=$i; //@line 1312 "src/markdown.c"
      var $37=$2; //@line 1312 "src/markdown.c"
      var $38=(($37+$36)|0); //@line 1312 "src/markdown.c"
      var $39=HEAPU8[($38)]; //@line 1312 "src/markdown.c"
      var $40=(($39)&255); //@line 1312 "src/markdown.c"
      var $41=(($40)|0)==32; //@line 1312 "src/markdown.c"
      if ($41) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1312 "src/markdown.c"
    case 10: 
      var $43=$i; //@line 1312 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 1312 "src/markdown.c"
      $i=$44; //@line 1312 "src/markdown.c"
      __label__ = 11; break; //@line 1312 "src/markdown.c"
    case 11: 
      var $46=$i; //@line 1314 "src/markdown.c"
      var $47=$3; //@line 1314 "src/markdown.c"
      var $48=(($46)>>>0) < (($47)>>>0); //@line 1314 "src/markdown.c"
      if ($48) { __label__ = 12; break; } else { __label__ = 17; break; } //@line 1314 "src/markdown.c"
    case 12: 
      var $50=$i; //@line 1314 "src/markdown.c"
      var $51=$2; //@line 1314 "src/markdown.c"
      var $52=(($51+$50)|0); //@line 1314 "src/markdown.c"
      var $53=HEAPU8[($52)]; //@line 1314 "src/markdown.c"
      var $54=(($53)&255); //@line 1314 "src/markdown.c"
      var $55=(($54)|0)==62; //@line 1314 "src/markdown.c"
      if ($55) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 1314 "src/markdown.c"
    case 13: 
      var $57=$i; //@line 1315 "src/markdown.c"
      var $58=((($57)+(1))|0); //@line 1315 "src/markdown.c"
      var $59=$3; //@line 1315 "src/markdown.c"
      var $60=(($58)>>>0) < (($59)>>>0); //@line 1315 "src/markdown.c"
      if ($60) { __label__ = 14; break; } else { __label__ = 16; break; } //@line 1315 "src/markdown.c"
    case 14: 
      var $62=$i; //@line 1315 "src/markdown.c"
      var $63=((($62)+(1))|0); //@line 1315 "src/markdown.c"
      var $64=$2; //@line 1315 "src/markdown.c"
      var $65=(($64+$63)|0); //@line 1315 "src/markdown.c"
      var $66=HEAPU8[($65)]; //@line 1315 "src/markdown.c"
      var $67=(($66)&255); //@line 1315 "src/markdown.c"
      var $68=(($67)|0)==32; //@line 1315 "src/markdown.c"
      if ($68) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 1315 "src/markdown.c"
    case 15: 
      var $70=$i; //@line 1316 "src/markdown.c"
      var $71=((($70)+(2))|0); //@line 1316 "src/markdown.c"
      $1=$71; //@line 1316 "src/markdown.c"
      __label__ = 18; break; //@line 1316 "src/markdown.c"
    case 16: 
      var $73=$i; //@line 1318 "src/markdown.c"
      var $74=((($73)+(1))|0); //@line 1318 "src/markdown.c"
      $1=$74; //@line 1318 "src/markdown.c"
      __label__ = 18; break; //@line 1318 "src/markdown.c"
    case 17: 
      $1=0; //@line 1321 "src/markdown.c"
      __label__ = 18; break; //@line 1321 "src/markdown.c"
    case 18: 
      var $77=$1; //@line 1322 "src/markdown.c"
      ;
      return $77; //@line 1322 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prefix_quote["X"]=1;

function _prefix_code($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $2=$data;
      $3=$size;
      var $4=$3; //@line 1328 "src/markdown.c"
      var $5=(($4)>>>0) > 3; //@line 1328 "src/markdown.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 8; break; } //@line 1328 "src/markdown.c"
    case 3: 
      var $7=$2; //@line 1328 "src/markdown.c"
      var $8=(($7)|0); //@line 1328 "src/markdown.c"
      var $9=HEAPU8[($8)]; //@line 1328 "src/markdown.c"
      var $10=(($9)&255); //@line 1328 "src/markdown.c"
      var $11=(($10)|0)==32; //@line 1328 "src/markdown.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 8; break; } //@line 1328 "src/markdown.c"
    case 4: 
      var $13=$2; //@line 1328 "src/markdown.c"
      var $14=(($13+1)|0); //@line 1328 "src/markdown.c"
      var $15=HEAPU8[($14)]; //@line 1328 "src/markdown.c"
      var $16=(($15)&255); //@line 1328 "src/markdown.c"
      var $17=(($16)|0)==32; //@line 1328 "src/markdown.c"
      if ($17) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 1328 "src/markdown.c"
    case 5: 
      var $19=$2; //@line 1328 "src/markdown.c"
      var $20=(($19+2)|0); //@line 1328 "src/markdown.c"
      var $21=HEAPU8[($20)]; //@line 1328 "src/markdown.c"
      var $22=(($21)&255); //@line 1328 "src/markdown.c"
      var $23=(($22)|0)==32; //@line 1328 "src/markdown.c"
      if ($23) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 1328 "src/markdown.c"
    case 6: 
      var $25=$2; //@line 1328 "src/markdown.c"
      var $26=(($25+3)|0); //@line 1328 "src/markdown.c"
      var $27=HEAPU8[($26)]; //@line 1328 "src/markdown.c"
      var $28=(($27)&255); //@line 1328 "src/markdown.c"
      var $29=(($28)|0)==32; //@line 1328 "src/markdown.c"
      if ($29) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1328 "src/markdown.c"
    case 7: 
      $1=4; //@line 1329 "src/markdown.c"
      __label__ = 9; break; //@line 1329 "src/markdown.c"
    case 8: 
      $1=0; //@line 1331 "src/markdown.c"
      __label__ = 9; break; //@line 1331 "src/markdown.c"
    case 9: 
      var $33=$1; //@line 1332 "src/markdown.c"
      ;
      return $33; //@line 1332 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _parse_table($ob, $rndr, $data, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 8; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $header_work;
      var $body_work;
      var $columns=__stackBase__;
      var $col_data=(__stackBase__)+(4);
      var $row_start;
      var $pipes;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $header_work=0; //@line 2137 "src/markdown.c"
      $body_work=0; //@line 2138 "src/markdown.c"
      HEAP32[(($col_data)>>2)]=0; //@line 2141 "src/markdown.c"
      var $5=$2; //@line 2143 "src/markdown.c"
      var $6=_rndr_newbuf($5, 1); //@line 2143 "src/markdown.c"
      $header_work=$6; //@line 2143 "src/markdown.c"
      var $7=$2; //@line 2144 "src/markdown.c"
      var $8=_rndr_newbuf($7, 0); //@line 2144 "src/markdown.c"
      $body_work=$8; //@line 2144 "src/markdown.c"
      var $9=$header_work; //@line 2146 "src/markdown.c"
      var $10=$2; //@line 2146 "src/markdown.c"
      var $11=$3; //@line 2146 "src/markdown.c"
      var $12=$4; //@line 2146 "src/markdown.c"
      var $13=_parse_table_header($9, $10, $11, $12, $columns, $col_data); //@line 2146 "src/markdown.c"
      $i=$13; //@line 2146 "src/markdown.c"
      var $14=$i; //@line 2147 "src/markdown.c"
      var $15=(($14)>>>0) > 0; //@line 2147 "src/markdown.c"
      if ($15) { __label__ = 3; break; } else { __label__ = 19; break; } //@line 2147 "src/markdown.c"
    case 3: 
      __label__ = 4; break; //@line 2149 "src/markdown.c"
    case 4: 
      var $18=$i; //@line 2149 "src/markdown.c"
      var $19=$4; //@line 2149 "src/markdown.c"
      var $20=(($18)>>>0) < (($19)>>>0); //@line 2149 "src/markdown.c"
      if ($20) { __label__ = 5; break; } else { __label__ = 16; break; } //@line 2149 "src/markdown.c"
    case 5: 
      $pipes=0; //@line 2151 "src/markdown.c"
      var $22=$i; //@line 2153 "src/markdown.c"
      $row_start=$22; //@line 2153 "src/markdown.c"
      __label__ = 6; break; //@line 2155 "src/markdown.c"
    case 6: 
      var $24=$i; //@line 2155 "src/markdown.c"
      var $25=$4; //@line 2155 "src/markdown.c"
      var $26=(($24)>>>0) < (($25)>>>0); //@line 2155 "src/markdown.c"
      if ($26) { __label__ = 7; break; } else { var $35 = 0;__label__ = 8; break; } //@line 2155 "src/markdown.c"
    case 7: 
      var $28=$i; //@line 2155 "src/markdown.c"
      var $29=$3; //@line 2155 "src/markdown.c"
      var $30=(($29+$28)|0); //@line 2155 "src/markdown.c"
      var $31=HEAPU8[($30)]; //@line 2155 "src/markdown.c"
      var $32=(($31)&255); //@line 2155 "src/markdown.c"
      var $33=(($32)|0)!=10; //@line 2155 "src/markdown.c"
      var $35 = $33;__label__ = 8; break;
    case 8: 
      var $35;
      if ($35) { __label__ = 9; break; } else { __label__ = 12; break; }
    case 9: 
      var $37=$i; //@line 2156 "src/markdown.c"
      var $38=((($37)+(1))|0); //@line 2156 "src/markdown.c"
      $i=$38; //@line 2156 "src/markdown.c"
      var $39=$3; //@line 2156 "src/markdown.c"
      var $40=(($39+$37)|0); //@line 2156 "src/markdown.c"
      var $41=HEAPU8[($40)]; //@line 2156 "src/markdown.c"
      var $42=(($41)&255); //@line 2156 "src/markdown.c"
      var $43=(($42)|0)==124; //@line 2156 "src/markdown.c"
      if ($43) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 2156 "src/markdown.c"
    case 10: 
      var $45=$pipes; //@line 2157 "src/markdown.c"
      var $46=((($45)+(1))|0); //@line 2157 "src/markdown.c"
      $pipes=$46; //@line 2157 "src/markdown.c"
      __label__ = 11; break; //@line 2157 "src/markdown.c"
    case 11: 
      __label__ = 6; break; //@line 2157 "src/markdown.c"
    case 12: 
      var $49=$pipes; //@line 2159 "src/markdown.c"
      var $50=(($49)|0)==0; //@line 2159 "src/markdown.c"
      if ($50) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 2159 "src/markdown.c"
    case 13: 
      var $52=$i; //@line 2159 "src/markdown.c"
      var $53=$4; //@line 2159 "src/markdown.c"
      var $54=(($52)|0)==(($53)|0); //@line 2159 "src/markdown.c"
      if ($54) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 2159 "src/markdown.c"
    case 14: 
      var $56=$row_start; //@line 2160 "src/markdown.c"
      $i=$56; //@line 2160 "src/markdown.c"
      __label__ = 16; break; //@line 2161 "src/markdown.c"
    case 15: 
      var $58=$body_work; //@line 2164 "src/markdown.c"
      var $59=$2; //@line 2164 "src/markdown.c"
      var $60=$3; //@line 2164 "src/markdown.c"
      var $61=$row_start; //@line 2164 "src/markdown.c"
      var $62=(($60+$61)|0); //@line 2164 "src/markdown.c"
      var $63=$i; //@line 2164 "src/markdown.c"
      var $64=$row_start; //@line 2164 "src/markdown.c"
      var $65=((($63)-($64))|0); //@line 2164 "src/markdown.c"
      var $66=HEAP32[(($columns)>>2)]; //@line 2164 "src/markdown.c"
      var $67=HEAP32[(($col_data)>>2)]; //@line 2164 "src/markdown.c"
      _parse_table_row($58, $59, $62, $65, $66, $67, 0); //@line 2164 "src/markdown.c"
      var $68=$i; //@line 2173 "src/markdown.c"
      var $69=((($68)+(1))|0); //@line 2173 "src/markdown.c"
      $i=$69; //@line 2173 "src/markdown.c"
      __label__ = 4; break; //@line 2174 "src/markdown.c"
    case 16: 
      var $71=$2; //@line 2176 "src/markdown.c"
      var $72=(($71)|0); //@line 2176 "src/markdown.c"
      var $73=(($72+32)|0); //@line 2176 "src/markdown.c"
      var $74=HEAP32[(($73)>>2)]; //@line 2176 "src/markdown.c"
      var $75=(($74)|0)!=0; //@line 2176 "src/markdown.c"
      if ($75) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 2176 "src/markdown.c"
    case 17: 
      var $77=$2; //@line 2177 "src/markdown.c"
      var $78=(($77)|0); //@line 2177 "src/markdown.c"
      var $79=(($78+32)|0); //@line 2177 "src/markdown.c"
      var $80=HEAP32[(($79)>>2)]; //@line 2177 "src/markdown.c"
      var $81=$1; //@line 2177 "src/markdown.c"
      var $82=$header_work; //@line 2177 "src/markdown.c"
      var $83=$body_work; //@line 2177 "src/markdown.c"
      var $84=$2; //@line 2177 "src/markdown.c"
      var $85=(($84+104)|0); //@line 2177 "src/markdown.c"
      var $86=HEAP32[(($85)>>2)]; //@line 2177 "src/markdown.c"
      FUNCTION_TABLE[$80]($81, $82, $83, $86); //@line 2177 "src/markdown.c"
      __label__ = 18; break; //@line 2177 "src/markdown.c"
    case 18: 
      __label__ = 19; break; //@line 2178 "src/markdown.c"
    case 19: 
      var $89=HEAP32[(($col_data)>>2)]; //@line 2180 "src/markdown.c"
      var $90=$89; //@line 2180 "src/markdown.c"
      _free($90); //@line 2180 "src/markdown.c"
      var $91=$2; //@line 2181 "src/markdown.c"
      _rndr_popbuf($91, 1); //@line 2181 "src/markdown.c"
      var $92=$2; //@line 2182 "src/markdown.c"
      _rndr_popbuf($92, 0); //@line 2182 "src/markdown.c"
      var $93=$i; //@line 2183 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $93; //@line 2183 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_table["X"]=1;

function _parse_blockquote($ob, $rndr, $data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $beg;
      var $end;
      var $pre;
      var $work_size;
      var $work_data;
      var $out;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $end=0; //@line 1390 "src/markdown.c"
      $work_size=0; //@line 1390 "src/markdown.c"
      $work_data=0; //@line 1391 "src/markdown.c"
      $out=0; //@line 1392 "src/markdown.c"
      var $5=$2; //@line 1394 "src/markdown.c"
      var $6=_rndr_newbuf($5, 0); //@line 1394 "src/markdown.c"
      $out=$6; //@line 1394 "src/markdown.c"
      $beg=0; //@line 1395 "src/markdown.c"
      __label__ = 3; break; //@line 1396 "src/markdown.c"
    case 3: 
      var $8=$beg; //@line 1396 "src/markdown.c"
      var $9=$4; //@line 1396 "src/markdown.c"
      var $10=(($8)>>>0) < (($9)>>>0); //@line 1396 "src/markdown.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 26; break; } //@line 1396 "src/markdown.c"
    case 4: 
      var $12=$beg; //@line 1397 "src/markdown.c"
      var $13=((($12)+(1))|0); //@line 1397 "src/markdown.c"
      $end=$13; //@line 1397 "src/markdown.c"
      __label__ = 5; break; //@line 1397 "src/markdown.c"
    case 5: 
      var $15=$end; //@line 1397 "src/markdown.c"
      var $16=$4; //@line 1397 "src/markdown.c"
      var $17=(($15)>>>0) < (($16)>>>0); //@line 1397 "src/markdown.c"
      if ($17) { __label__ = 6; break; } else { var $27 = 0;__label__ = 7; break; } //@line 1397 "src/markdown.c"
    case 6: 
      var $19=$end; //@line 1397 "src/markdown.c"
      var $20=((($19)-(1))|0); //@line 1397 "src/markdown.c"
      var $21=$3; //@line 1397 "src/markdown.c"
      var $22=(($21+$20)|0); //@line 1397 "src/markdown.c"
      var $23=HEAPU8[($22)]; //@line 1397 "src/markdown.c"
      var $24=(($23)&255); //@line 1397 "src/markdown.c"
      var $25=(($24)|0)!=10; //@line 1397 "src/markdown.c"
      var $27 = $25;__label__ = 7; break;
    case 7: 
      var $27;
      if ($27) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      __label__ = 9; break;
    case 9: 
      var $30=$end; //@line 1397 "src/markdown.c"
      var $31=((($30)+(1))|0); //@line 1397 "src/markdown.c"
      $end=$31; //@line 1397 "src/markdown.c"
      __label__ = 5; break; //@line 1397 "src/markdown.c"
    case 10: 
      var $33=$3; //@line 1399 "src/markdown.c"
      var $34=$beg; //@line 1399 "src/markdown.c"
      var $35=(($33+$34)|0); //@line 1399 "src/markdown.c"
      var $36=$end; //@line 1399 "src/markdown.c"
      var $37=$beg; //@line 1399 "src/markdown.c"
      var $38=((($36)-($37))|0); //@line 1399 "src/markdown.c"
      var $39=_prefix_quote($35, $38); //@line 1399 "src/markdown.c"
      $pre=$39; //@line 1399 "src/markdown.c"
      var $40=$pre; //@line 1401 "src/markdown.c"
      var $41=(($40)|0)!=0; //@line 1401 "src/markdown.c"
      if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1401 "src/markdown.c"
    case 11: 
      var $43=$pre; //@line 1402 "src/markdown.c"
      var $44=$beg; //@line 1402 "src/markdown.c"
      var $45=((($44)+($43))|0); //@line 1402 "src/markdown.c"
      $beg=$45; //@line 1402 "src/markdown.c"
      __label__ = 18; break; //@line 1402 "src/markdown.c"
    case 12: 
      var $47=$3; //@line 1405 "src/markdown.c"
      var $48=$beg; //@line 1405 "src/markdown.c"
      var $49=(($47+$48)|0); //@line 1405 "src/markdown.c"
      var $50=$end; //@line 1405 "src/markdown.c"
      var $51=$beg; //@line 1405 "src/markdown.c"
      var $52=((($50)-($51))|0); //@line 1405 "src/markdown.c"
      var $53=_is_empty($49, $52); //@line 1405 "src/markdown.c"
      var $54=(($53)|0)!=0; //@line 1405 "src/markdown.c"
      if ($54) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 1405 "src/markdown.c"
    case 13: 
      var $56=$end; //@line 1405 "src/markdown.c"
      var $57=$4; //@line 1405 "src/markdown.c"
      var $58=(($56)>>>0) >= (($57)>>>0); //@line 1405 "src/markdown.c"
      if ($58) { __label__ = 16; break; } else { __label__ = 14; break; } //@line 1405 "src/markdown.c"
    case 14: 
      var $60=$3; //@line 1406 "src/markdown.c"
      var $61=$end; //@line 1406 "src/markdown.c"
      var $62=(($60+$61)|0); //@line 1406 "src/markdown.c"
      var $63=$4; //@line 1406 "src/markdown.c"
      var $64=$end; //@line 1406 "src/markdown.c"
      var $65=((($63)-($64))|0); //@line 1406 "src/markdown.c"
      var $66=_prefix_quote($62, $65); //@line 1406 "src/markdown.c"
      var $67=(($66)|0)==0; //@line 1406 "src/markdown.c"
      if ($67) { __label__ = 15; break; } else { __label__ = 17; break; } //@line 1406 "src/markdown.c"
    case 15: 
      var $69=$3; //@line 1407 "src/markdown.c"
      var $70=$end; //@line 1407 "src/markdown.c"
      var $71=(($69+$70)|0); //@line 1407 "src/markdown.c"
      var $72=$4; //@line 1407 "src/markdown.c"
      var $73=$end; //@line 1407 "src/markdown.c"
      var $74=((($72)-($73))|0); //@line 1407 "src/markdown.c"
      var $75=_is_empty($71, $74); //@line 1407 "src/markdown.c"
      var $76=(($75)|0)!=0; //@line 1407 "src/markdown.c"
      if ($76) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1407 "src/markdown.c"
    case 16: 
      __label__ = 26; break; //@line 1408 "src/markdown.c"
    case 17: 
      __label__ = 18; break;
    case 18: 
      var $80=$beg; //@line 1410 "src/markdown.c"
      var $81=$end; //@line 1410 "src/markdown.c"
      var $82=(($80)>>>0) < (($81)>>>0); //@line 1410 "src/markdown.c"
      if ($82) { __label__ = 19; break; } else { __label__ = 25; break; } //@line 1410 "src/markdown.c"
    case 19: 
      var $84=$work_data; //@line 1412 "src/markdown.c"
      var $85=(($84)|0)!=0; //@line 1412 "src/markdown.c"
      if ($85) { __label__ = 21; break; } else { __label__ = 20; break; } //@line 1412 "src/markdown.c"
    case 20: 
      var $87=$3; //@line 1413 "src/markdown.c"
      var $88=$beg; //@line 1413 "src/markdown.c"
      var $89=(($87+$88)|0); //@line 1413 "src/markdown.c"
      $work_data=$89; //@line 1413 "src/markdown.c"
      __label__ = 24; break; //@line 1413 "src/markdown.c"
    case 21: 
      var $91=$3; //@line 1414 "src/markdown.c"
      var $92=$beg; //@line 1414 "src/markdown.c"
      var $93=(($91+$92)|0); //@line 1414 "src/markdown.c"
      var $94=$work_data; //@line 1414 "src/markdown.c"
      var $95=$work_size; //@line 1414 "src/markdown.c"
      var $96=(($94+$95)|0); //@line 1414 "src/markdown.c"
      var $97=(($93)|0)!=(($96)|0); //@line 1414 "src/markdown.c"
      if ($97) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1414 "src/markdown.c"
    case 22: 
      var $99=$work_data; //@line 1415 "src/markdown.c"
      var $100=$work_size; //@line 1415 "src/markdown.c"
      var $101=(($99+$100)|0); //@line 1415 "src/markdown.c"
      var $102=$3; //@line 1415 "src/markdown.c"
      var $103=$beg; //@line 1415 "src/markdown.c"
      var $104=(($102+$103)|0); //@line 1415 "src/markdown.c"
      var $105=$end; //@line 1415 "src/markdown.c"
      var $106=$beg; //@line 1415 "src/markdown.c"
      var $107=((($105)-($106))|0); //@line 1415 "src/markdown.c"
      _llvm_memmove_p0i8_p0i8_i32($101, $104, $107, 1, 0); //@line 1415 "src/markdown.c"
      __label__ = 23; break; //@line 1415 "src/markdown.c"
    case 23: 
      __label__ = 24; break;
    case 24: 
      var $110=$end; //@line 1416 "src/markdown.c"
      var $111=$beg; //@line 1416 "src/markdown.c"
      var $112=((($110)-($111))|0); //@line 1416 "src/markdown.c"
      var $113=$work_size; //@line 1416 "src/markdown.c"
      var $114=((($113)+($112))|0); //@line 1416 "src/markdown.c"
      $work_size=$114; //@line 1416 "src/markdown.c"
      __label__ = 25; break; //@line 1417 "src/markdown.c"
    case 25: 
      var $116=$end; //@line 1418 "src/markdown.c"
      $beg=$116; //@line 1418 "src/markdown.c"
      __label__ = 3; break; //@line 1419 "src/markdown.c"
    case 26: 
      var $118=$out; //@line 1421 "src/markdown.c"
      var $119=$2; //@line 1421 "src/markdown.c"
      var $120=$work_data; //@line 1421 "src/markdown.c"
      var $121=$work_size; //@line 1421 "src/markdown.c"
      _parse_block($118, $119, $120, $121); //@line 1421 "src/markdown.c"
      var $122=$2; //@line 1422 "src/markdown.c"
      var $123=(($122)|0); //@line 1422 "src/markdown.c"
      var $124=(($123+4)|0); //@line 1422 "src/markdown.c"
      var $125=HEAP32[(($124)>>2)]; //@line 1422 "src/markdown.c"
      var $126=(($125)|0)!=0; //@line 1422 "src/markdown.c"
      if ($126) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1422 "src/markdown.c"
    case 27: 
      var $128=$2; //@line 1423 "src/markdown.c"
      var $129=(($128)|0); //@line 1423 "src/markdown.c"
      var $130=(($129+4)|0); //@line 1423 "src/markdown.c"
      var $131=HEAP32[(($130)>>2)]; //@line 1423 "src/markdown.c"
      var $132=$1; //@line 1423 "src/markdown.c"
      var $133=$out; //@line 1423 "src/markdown.c"
      var $134=$2; //@line 1423 "src/markdown.c"
      var $135=(($134+104)|0); //@line 1423 "src/markdown.c"
      var $136=HEAP32[(($135)>>2)]; //@line 1423 "src/markdown.c"
      FUNCTION_TABLE[$131]($132, $133, $136); //@line 1423 "src/markdown.c"
      __label__ = 28; break; //@line 1423 "src/markdown.c"
    case 28: 
      var $138=$2; //@line 1424 "src/markdown.c"
      _rndr_popbuf($138, 0); //@line 1424 "src/markdown.c"
      var $139=$end; //@line 1425 "src/markdown.c"
      ;
      return $139; //@line 1425 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_blockquote["X"]=1;

function _parse_blockcode($ob, $rndr, $data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $beg;
      var $end;
      var $pre;
      var $work;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $work=0; //@line 1589 "src/markdown.c"
      var $5=$2; //@line 1591 "src/markdown.c"
      var $6=_rndr_newbuf($5, 0); //@line 1591 "src/markdown.c"
      $work=$6; //@line 1591 "src/markdown.c"
      $beg=0; //@line 1593 "src/markdown.c"
      __label__ = 3; break; //@line 1594 "src/markdown.c"
    case 3: 
      var $8=$beg; //@line 1594 "src/markdown.c"
      var $9=$4; //@line 1594 "src/markdown.c"
      var $10=(($8)>>>0) < (($9)>>>0); //@line 1594 "src/markdown.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 21; break; } //@line 1594 "src/markdown.c"
    case 4: 
      var $12=$beg; //@line 1595 "src/markdown.c"
      var $13=((($12)+(1))|0); //@line 1595 "src/markdown.c"
      $end=$13; //@line 1595 "src/markdown.c"
      __label__ = 5; break; //@line 1595 "src/markdown.c"
    case 5: 
      var $15=$end; //@line 1595 "src/markdown.c"
      var $16=$4; //@line 1595 "src/markdown.c"
      var $17=(($15)>>>0) < (($16)>>>0); //@line 1595 "src/markdown.c"
      if ($17) { __label__ = 6; break; } else { var $27 = 0;__label__ = 7; break; } //@line 1595 "src/markdown.c"
    case 6: 
      var $19=$end; //@line 1595 "src/markdown.c"
      var $20=((($19)-(1))|0); //@line 1595 "src/markdown.c"
      var $21=$3; //@line 1595 "src/markdown.c"
      var $22=(($21+$20)|0); //@line 1595 "src/markdown.c"
      var $23=HEAPU8[($22)]; //@line 1595 "src/markdown.c"
      var $24=(($23)&255); //@line 1595 "src/markdown.c"
      var $25=(($24)|0)!=10; //@line 1595 "src/markdown.c"
      var $27 = $25;__label__ = 7; break;
    case 7: 
      var $27;
      if ($27) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      __label__ = 9; break; //@line 1595 "src/markdown.c"
    case 9: 
      var $30=$end; //@line 1595 "src/markdown.c"
      var $31=((($30)+(1))|0); //@line 1595 "src/markdown.c"
      $end=$31; //@line 1595 "src/markdown.c"
      __label__ = 5; break; //@line 1595 "src/markdown.c"
    case 10: 
      var $33=$3; //@line 1596 "src/markdown.c"
      var $34=$beg; //@line 1596 "src/markdown.c"
      var $35=(($33+$34)|0); //@line 1596 "src/markdown.c"
      var $36=$end; //@line 1596 "src/markdown.c"
      var $37=$beg; //@line 1596 "src/markdown.c"
      var $38=((($36)-($37))|0); //@line 1596 "src/markdown.c"
      var $39=_prefix_code($35, $38); //@line 1596 "src/markdown.c"
      $pre=$39; //@line 1596 "src/markdown.c"
      var $40=$pre; //@line 1598 "src/markdown.c"
      var $41=(($40)|0)!=0; //@line 1598 "src/markdown.c"
      if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1598 "src/markdown.c"
    case 11: 
      var $43=$pre; //@line 1599 "src/markdown.c"
      var $44=$beg; //@line 1599 "src/markdown.c"
      var $45=((($44)+($43))|0); //@line 1599 "src/markdown.c"
      $beg=$45; //@line 1599 "src/markdown.c"
      __label__ = 15; break; //@line 1599 "src/markdown.c"
    case 12: 
      var $47=$3; //@line 1600 "src/markdown.c"
      var $48=$beg; //@line 1600 "src/markdown.c"
      var $49=(($47+$48)|0); //@line 1600 "src/markdown.c"
      var $50=$end; //@line 1600 "src/markdown.c"
      var $51=$beg; //@line 1600 "src/markdown.c"
      var $52=((($50)-($51))|0); //@line 1600 "src/markdown.c"
      var $53=_is_empty($49, $52); //@line 1600 "src/markdown.c"
      var $54=(($53)|0)!=0; //@line 1600 "src/markdown.c"
      if ($54) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 1600 "src/markdown.c"
    case 13: 
      __label__ = 21; break; //@line 1602 "src/markdown.c"
    case 14: 
      __label__ = 15; break;
    case 15: 
      var $58=$beg; //@line 1604 "src/markdown.c"
      var $59=$end; //@line 1604 "src/markdown.c"
      var $60=(($58)>>>0) < (($59)>>>0); //@line 1604 "src/markdown.c"
      if ($60) { __label__ = 16; break; } else { __label__ = 20; break; } //@line 1604 "src/markdown.c"
    case 16: 
      var $62=$3; //@line 1607 "src/markdown.c"
      var $63=$beg; //@line 1607 "src/markdown.c"
      var $64=(($62+$63)|0); //@line 1607 "src/markdown.c"
      var $65=$end; //@line 1607 "src/markdown.c"
      var $66=$beg; //@line 1607 "src/markdown.c"
      var $67=((($65)-($66))|0); //@line 1607 "src/markdown.c"
      var $68=_is_empty($64, $67); //@line 1607 "src/markdown.c"
      var $69=(($68)|0)!=0; //@line 1607 "src/markdown.c"
      if ($69) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1607 "src/markdown.c"
    case 17: 
      var $71=$work; //@line 1608 "src/markdown.c"
      _bufputc($71, 10); //@line 1608 "src/markdown.c"
      __label__ = 19; break; //@line 1608 "src/markdown.c"
    case 18: 
      var $73=$work; //@line 1609 "src/markdown.c"
      var $74=$3; //@line 1609 "src/markdown.c"
      var $75=$beg; //@line 1609 "src/markdown.c"
      var $76=(($74+$75)|0); //@line 1609 "src/markdown.c"
      var $77=$end; //@line 1609 "src/markdown.c"
      var $78=$beg; //@line 1609 "src/markdown.c"
      var $79=((($77)-($78))|0); //@line 1609 "src/markdown.c"
      _bufput($73, $76, $79); //@line 1609 "src/markdown.c"
      __label__ = 19; break;
    case 19: 
      __label__ = 20; break; //@line 1610 "src/markdown.c"
    case 20: 
      var $82=$end; //@line 1611 "src/markdown.c"
      $beg=$82; //@line 1611 "src/markdown.c"
      __label__ = 3; break; //@line 1612 "src/markdown.c"
    case 21: 
      __label__ = 22; break; //@line 1614 "src/markdown.c"
    case 22: 
      var $85=$work; //@line 1614 "src/markdown.c"
      var $86=(($85+4)|0); //@line 1614 "src/markdown.c"
      var $87=HEAP32[(($86)>>2)]; //@line 1614 "src/markdown.c"
      var $88=(($87)|0)!=0; //@line 1614 "src/markdown.c"
      if ($88) { __label__ = 23; break; } else { var $102 = 0;__label__ = 24; break; } //@line 1614 "src/markdown.c"
    case 23: 
      var $90=$work; //@line 1614 "src/markdown.c"
      var $91=(($90+4)|0); //@line 1614 "src/markdown.c"
      var $92=HEAP32[(($91)>>2)]; //@line 1614 "src/markdown.c"
      var $93=((($92)-(1))|0); //@line 1614 "src/markdown.c"
      var $94=$work; //@line 1614 "src/markdown.c"
      var $95=(($94)|0); //@line 1614 "src/markdown.c"
      var $96=HEAP32[(($95)>>2)]; //@line 1614 "src/markdown.c"
      var $97=(($96+$93)|0); //@line 1614 "src/markdown.c"
      var $98=HEAPU8[($97)]; //@line 1614 "src/markdown.c"
      var $99=(($98)&255); //@line 1614 "src/markdown.c"
      var $100=(($99)|0)==10; //@line 1614 "src/markdown.c"
      var $102 = $100;__label__ = 24; break;
    case 24: 
      var $102;
      if ($102) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: 
      var $104=$work; //@line 1615 "src/markdown.c"
      var $105=(($104+4)|0); //@line 1615 "src/markdown.c"
      var $106=HEAP32[(($105)>>2)]; //@line 1615 "src/markdown.c"
      var $107=((($106)-(1))|0); //@line 1615 "src/markdown.c"
      HEAP32[(($105)>>2)]=$107; //@line 1615 "src/markdown.c"
      __label__ = 22; break; //@line 1615 "src/markdown.c"
    case 26: 
      var $109=$work; //@line 1617 "src/markdown.c"
      _bufputc($109, 10); //@line 1617 "src/markdown.c"
      var $110=$2; //@line 1619 "src/markdown.c"
      var $111=(($110)|0); //@line 1619 "src/markdown.c"
      var $112=(($111)|0); //@line 1619 "src/markdown.c"
      var $113=HEAP32[(($112)>>2)]; //@line 1619 "src/markdown.c"
      var $114=(($113)|0)!=0; //@line 1619 "src/markdown.c"
      if ($114) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1619 "src/markdown.c"
    case 27: 
      var $116=$2; //@line 1620 "src/markdown.c"
      var $117=(($116)|0); //@line 1620 "src/markdown.c"
      var $118=(($117)|0); //@line 1620 "src/markdown.c"
      var $119=HEAP32[(($118)>>2)]; //@line 1620 "src/markdown.c"
      var $120=$1; //@line 1620 "src/markdown.c"
      var $121=$work; //@line 1620 "src/markdown.c"
      var $122=$2; //@line 1620 "src/markdown.c"
      var $123=(($122+104)|0); //@line 1620 "src/markdown.c"
      var $124=HEAP32[(($123)>>2)]; //@line 1620 "src/markdown.c"
      FUNCTION_TABLE[$119]($120, $121, 0, $124); //@line 1620 "src/markdown.c"
      __label__ = 28; break; //@line 1620 "src/markdown.c"
    case 28: 
      var $126=$2; //@line 1622 "src/markdown.c"
      _rndr_popbuf($126, 0); //@line 1622 "src/markdown.c"
      var $127=$beg; //@line 1623 "src/markdown.c"
      ;
      return $127; //@line 1623 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_blockcode["X"]=1;

function _prefix_uli($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$data;
      $3=$size;
      $i=0; //@line 1363 "src/markdown.c"
      var $4=$i; //@line 1365 "src/markdown.c"
      var $5=$3; //@line 1365 "src/markdown.c"
      var $6=(($4)>>>0) < (($5)>>>0); //@line 1365 "src/markdown.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1365 "src/markdown.c"
    case 3: 
      var $8=$i; //@line 1365 "src/markdown.c"
      var $9=$2; //@line 1365 "src/markdown.c"
      var $10=(($9+$8)|0); //@line 1365 "src/markdown.c"
      var $11=HEAPU8[($10)]; //@line 1365 "src/markdown.c"
      var $12=(($11)&255); //@line 1365 "src/markdown.c"
      var $13=(($12)|0)==32; //@line 1365 "src/markdown.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1365 "src/markdown.c"
    case 4: 
      var $15=$i; //@line 1365 "src/markdown.c"
      var $16=((($15)+(1))|0); //@line 1365 "src/markdown.c"
      $i=$16; //@line 1365 "src/markdown.c"
      __label__ = 5; break; //@line 1365 "src/markdown.c"
    case 5: 
      var $18=$i; //@line 1366 "src/markdown.c"
      var $19=$3; //@line 1366 "src/markdown.c"
      var $20=(($18)>>>0) < (($19)>>>0); //@line 1366 "src/markdown.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 1366 "src/markdown.c"
    case 6: 
      var $22=$i; //@line 1366 "src/markdown.c"
      var $23=$2; //@line 1366 "src/markdown.c"
      var $24=(($23+$22)|0); //@line 1366 "src/markdown.c"
      var $25=HEAPU8[($24)]; //@line 1366 "src/markdown.c"
      var $26=(($25)&255); //@line 1366 "src/markdown.c"
      var $27=(($26)|0)==32; //@line 1366 "src/markdown.c"
      if ($27) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1366 "src/markdown.c"
    case 7: 
      var $29=$i; //@line 1366 "src/markdown.c"
      var $30=((($29)+(1))|0); //@line 1366 "src/markdown.c"
      $i=$30; //@line 1366 "src/markdown.c"
      __label__ = 8; break; //@line 1366 "src/markdown.c"
    case 8: 
      var $32=$i; //@line 1367 "src/markdown.c"
      var $33=$3; //@line 1367 "src/markdown.c"
      var $34=(($32)>>>0) < (($33)>>>0); //@line 1367 "src/markdown.c"
      if ($34) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 1367 "src/markdown.c"
    case 9: 
      var $36=$i; //@line 1367 "src/markdown.c"
      var $37=$2; //@line 1367 "src/markdown.c"
      var $38=(($37+$36)|0); //@line 1367 "src/markdown.c"
      var $39=HEAPU8[($38)]; //@line 1367 "src/markdown.c"
      var $40=(($39)&255); //@line 1367 "src/markdown.c"
      var $41=(($40)|0)==32; //@line 1367 "src/markdown.c"
      if ($41) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1367 "src/markdown.c"
    case 10: 
      var $43=$i; //@line 1367 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 1367 "src/markdown.c"
      $i=$44; //@line 1367 "src/markdown.c"
      __label__ = 11; break; //@line 1367 "src/markdown.c"
    case 11: 
      var $46=$i; //@line 1369 "src/markdown.c"
      var $47=((($46)+(1))|0); //@line 1369 "src/markdown.c"
      var $48=$3; //@line 1369 "src/markdown.c"
      var $49=(($47)>>>0) >= (($48)>>>0); //@line 1369 "src/markdown.c"
      if ($49) { __label__ = 16; break; } else { __label__ = 12; break; } //@line 1369 "src/markdown.c"
    case 12: 
      var $51=$i; //@line 1369 "src/markdown.c"
      var $52=$2; //@line 1369 "src/markdown.c"
      var $53=(($52+$51)|0); //@line 1369 "src/markdown.c"
      var $54=HEAPU8[($53)]; //@line 1369 "src/markdown.c"
      var $55=(($54)&255); //@line 1369 "src/markdown.c"
      var $56=(($55)|0)!=42; //@line 1369 "src/markdown.c"
      if ($56) { __label__ = 13; break; } else { __label__ = 15; break; } //@line 1369 "src/markdown.c"
    case 13: 
      var $58=$i; //@line 1369 "src/markdown.c"
      var $59=$2; //@line 1369 "src/markdown.c"
      var $60=(($59+$58)|0); //@line 1369 "src/markdown.c"
      var $61=HEAPU8[($60)]; //@line 1369 "src/markdown.c"
      var $62=(($61)&255); //@line 1369 "src/markdown.c"
      var $63=(($62)|0)!=43; //@line 1369 "src/markdown.c"
      if ($63) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1369 "src/markdown.c"
    case 14: 
      var $65=$i; //@line 1369 "src/markdown.c"
      var $66=$2; //@line 1369 "src/markdown.c"
      var $67=(($66+$65)|0); //@line 1369 "src/markdown.c"
      var $68=HEAPU8[($67)]; //@line 1369 "src/markdown.c"
      var $69=(($68)&255); //@line 1369 "src/markdown.c"
      var $70=(($69)|0)!=45; //@line 1369 "src/markdown.c"
      if ($70) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 1369 "src/markdown.c"
    case 15: 
      var $72=$i; //@line 1369 "src/markdown.c"
      var $73=((($72)+(1))|0); //@line 1369 "src/markdown.c"
      var $74=$2; //@line 1369 "src/markdown.c"
      var $75=(($74+$73)|0); //@line 1369 "src/markdown.c"
      var $76=HEAPU8[($75)]; //@line 1369 "src/markdown.c"
      var $77=(($76)&255); //@line 1369 "src/markdown.c"
      var $78=(($77)|0)!=32; //@line 1369 "src/markdown.c"
      if ($78) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1369 "src/markdown.c"
    case 16: 
      $1=0; //@line 1372 "src/markdown.c"
      __label__ = 20; break; //@line 1372 "src/markdown.c"
    case 17: 
      var $81=$2; //@line 1374 "src/markdown.c"
      var $82=$i; //@line 1374 "src/markdown.c"
      var $83=(($81+$82)|0); //@line 1374 "src/markdown.c"
      var $84=$3; //@line 1374 "src/markdown.c"
      var $85=$i; //@line 1374 "src/markdown.c"
      var $86=((($84)-($85))|0); //@line 1374 "src/markdown.c"
      var $87=_is_next_headerline($83, $86); //@line 1374 "src/markdown.c"
      var $88=(($87)|0)!=0; //@line 1374 "src/markdown.c"
      if ($88) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1374 "src/markdown.c"
    case 18: 
      $1=0; //@line 1375 "src/markdown.c"
      __label__ = 20; break; //@line 1375 "src/markdown.c"
    case 19: 
      var $91=$i; //@line 1377 "src/markdown.c"
      var $92=((($91)+(2))|0); //@line 1377 "src/markdown.c"
      $1=$92; //@line 1377 "src/markdown.c"
      __label__ = 20; break; //@line 1377 "src/markdown.c"
    case 20: 
      var $94=$1; //@line 1378 "src/markdown.c"
      ;
      return $94; //@line 1378 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prefix_uli["X"]=1;

function _parse_list($ob, $rndr, $data, $size, $flags) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5=__stackBase__;
      var $work;
      var $i;
      var $j;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      HEAP32[(($5)>>2)]=$flags;
      $work=0; //@line 1768 "src/markdown.c"
      $i=0; //@line 1769 "src/markdown.c"
      var $6=$2; //@line 1771 "src/markdown.c"
      var $7=_rndr_newbuf($6, 0); //@line 1771 "src/markdown.c"
      $work=$7; //@line 1771 "src/markdown.c"
      __label__ = 3; break; //@line 1773 "src/markdown.c"
    case 3: 
      var $9=$i; //@line 1773 "src/markdown.c"
      var $10=$4; //@line 1773 "src/markdown.c"
      var $11=(($9)>>>0) < (($10)>>>0); //@line 1773 "src/markdown.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 8; break; } //@line 1773 "src/markdown.c"
    case 4: 
      var $13=$work; //@line 1774 "src/markdown.c"
      var $14=$2; //@line 1774 "src/markdown.c"
      var $15=$3; //@line 1774 "src/markdown.c"
      var $16=$i; //@line 1774 "src/markdown.c"
      var $17=(($15+$16)|0); //@line 1774 "src/markdown.c"
      var $18=$4; //@line 1774 "src/markdown.c"
      var $19=$i; //@line 1774 "src/markdown.c"
      var $20=((($18)-($19))|0); //@line 1774 "src/markdown.c"
      var $21=_parse_listitem($13, $14, $17, $20, $5); //@line 1774 "src/markdown.c"
      $j=$21; //@line 1774 "src/markdown.c"
      var $22=$j; //@line 1775 "src/markdown.c"
      var $23=$i; //@line 1775 "src/markdown.c"
      var $24=((($23)+($22))|0); //@line 1775 "src/markdown.c"
      $i=$24; //@line 1775 "src/markdown.c"
      var $25=$j; //@line 1777 "src/markdown.c"
      var $26=(($25)|0)!=0; //@line 1777 "src/markdown.c"
      if ($26) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1777 "src/markdown.c"
    case 5: 
      var $28=HEAP32[(($5)>>2)]; //@line 1777 "src/markdown.c"
      var $29=$28 & 8; //@line 1777 "src/markdown.c"
      var $30=(($29)|0)!=0; //@line 1777 "src/markdown.c"
      if ($30) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1777 "src/markdown.c"
    case 6: 
      __label__ = 8; break; //@line 1778 "src/markdown.c"
    case 7: 
      __label__ = 3; break; //@line 1779 "src/markdown.c"
    case 8: 
      var $34=$2; //@line 1781 "src/markdown.c"
      var $35=(($34)|0); //@line 1781 "src/markdown.c"
      var $36=(($35+20)|0); //@line 1781 "src/markdown.c"
      var $37=HEAP32[(($36)>>2)]; //@line 1781 "src/markdown.c"
      var $38=(($37)|0)!=0; //@line 1781 "src/markdown.c"
      if ($38) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1781 "src/markdown.c"
    case 9: 
      var $40=$2; //@line 1782 "src/markdown.c"
      var $41=(($40)|0); //@line 1782 "src/markdown.c"
      var $42=(($41+20)|0); //@line 1782 "src/markdown.c"
      var $43=HEAP32[(($42)>>2)]; //@line 1782 "src/markdown.c"
      var $44=$1; //@line 1782 "src/markdown.c"
      var $45=$work; //@line 1782 "src/markdown.c"
      var $46=HEAP32[(($5)>>2)]; //@line 1782 "src/markdown.c"
      var $47=$2; //@line 1782 "src/markdown.c"
      var $48=(($47+104)|0); //@line 1782 "src/markdown.c"
      var $49=HEAP32[(($48)>>2)]; //@line 1782 "src/markdown.c"
      FUNCTION_TABLE[$43]($44, $45, $46, $49); //@line 1782 "src/markdown.c"
      __label__ = 10; break; //@line 1782 "src/markdown.c"
    case 10: 
      var $51=$2; //@line 1783 "src/markdown.c"
      _rndr_popbuf($51, 0); //@line 1783 "src/markdown.c"
      var $52=$i; //@line 1784 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $52; //@line 1784 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_list["X"]=1;

function _prefix_oli($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$data;
      $3=$size;
      $i=0; //@line 1338 "src/markdown.c"
      var $4=$i; //@line 1340 "src/markdown.c"
      var $5=$3; //@line 1340 "src/markdown.c"
      var $6=(($4)>>>0) < (($5)>>>0); //@line 1340 "src/markdown.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1340 "src/markdown.c"
    case 3: 
      var $8=$i; //@line 1340 "src/markdown.c"
      var $9=$2; //@line 1340 "src/markdown.c"
      var $10=(($9+$8)|0); //@line 1340 "src/markdown.c"
      var $11=HEAPU8[($10)]; //@line 1340 "src/markdown.c"
      var $12=(($11)&255); //@line 1340 "src/markdown.c"
      var $13=(($12)|0)==32; //@line 1340 "src/markdown.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1340 "src/markdown.c"
    case 4: 
      var $15=$i; //@line 1340 "src/markdown.c"
      var $16=((($15)+(1))|0); //@line 1340 "src/markdown.c"
      $i=$16; //@line 1340 "src/markdown.c"
      __label__ = 5; break; //@line 1340 "src/markdown.c"
    case 5: 
      var $18=$i; //@line 1341 "src/markdown.c"
      var $19=$3; //@line 1341 "src/markdown.c"
      var $20=(($18)>>>0) < (($19)>>>0); //@line 1341 "src/markdown.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 1341 "src/markdown.c"
    case 6: 
      var $22=$i; //@line 1341 "src/markdown.c"
      var $23=$2; //@line 1341 "src/markdown.c"
      var $24=(($23+$22)|0); //@line 1341 "src/markdown.c"
      var $25=HEAPU8[($24)]; //@line 1341 "src/markdown.c"
      var $26=(($25)&255); //@line 1341 "src/markdown.c"
      var $27=(($26)|0)==32; //@line 1341 "src/markdown.c"
      if ($27) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1341 "src/markdown.c"
    case 7: 
      var $29=$i; //@line 1341 "src/markdown.c"
      var $30=((($29)+(1))|0); //@line 1341 "src/markdown.c"
      $i=$30; //@line 1341 "src/markdown.c"
      __label__ = 8; break; //@line 1341 "src/markdown.c"
    case 8: 
      var $32=$i; //@line 1342 "src/markdown.c"
      var $33=$3; //@line 1342 "src/markdown.c"
      var $34=(($32)>>>0) < (($33)>>>0); //@line 1342 "src/markdown.c"
      if ($34) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 1342 "src/markdown.c"
    case 9: 
      var $36=$i; //@line 1342 "src/markdown.c"
      var $37=$2; //@line 1342 "src/markdown.c"
      var $38=(($37+$36)|0); //@line 1342 "src/markdown.c"
      var $39=HEAPU8[($38)]; //@line 1342 "src/markdown.c"
      var $40=(($39)&255); //@line 1342 "src/markdown.c"
      var $41=(($40)|0)==32; //@line 1342 "src/markdown.c"
      if ($41) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1342 "src/markdown.c"
    case 10: 
      var $43=$i; //@line 1342 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 1342 "src/markdown.c"
      $i=$44; //@line 1342 "src/markdown.c"
      __label__ = 11; break; //@line 1342 "src/markdown.c"
    case 11: 
      var $46=$i; //@line 1344 "src/markdown.c"
      var $47=$3; //@line 1344 "src/markdown.c"
      var $48=(($46)>>>0) >= (($47)>>>0); //@line 1344 "src/markdown.c"
      if ($48) { __label__ = 14; break; } else { __label__ = 12; break; } //@line 1344 "src/markdown.c"
    case 12: 
      var $50=$i; //@line 1344 "src/markdown.c"
      var $51=$2; //@line 1344 "src/markdown.c"
      var $52=(($51+$50)|0); //@line 1344 "src/markdown.c"
      var $53=HEAPU8[($52)]; //@line 1344 "src/markdown.c"
      var $54=(($53)&255); //@line 1344 "src/markdown.c"
      var $55=(($54)|0) < 48; //@line 1344 "src/markdown.c"
      if ($55) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 1344 "src/markdown.c"
    case 13: 
      var $57=$i; //@line 1344 "src/markdown.c"
      var $58=$2; //@line 1344 "src/markdown.c"
      var $59=(($58+$57)|0); //@line 1344 "src/markdown.c"
      var $60=HEAPU8[($59)]; //@line 1344 "src/markdown.c"
      var $61=(($60)&255); //@line 1344 "src/markdown.c"
      var $62=(($61)|0) > 57; //@line 1344 "src/markdown.c"
      if ($62) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1344 "src/markdown.c"
    case 14: 
      $1=0; //@line 1345 "src/markdown.c"
      __label__ = 28; break; //@line 1345 "src/markdown.c"
    case 15: 
      __label__ = 16; break; //@line 1347 "src/markdown.c"
    case 16: 
      var $66=$i; //@line 1347 "src/markdown.c"
      var $67=$3; //@line 1347 "src/markdown.c"
      var $68=(($66)>>>0) < (($67)>>>0); //@line 1347 "src/markdown.c"
      if ($68) { __label__ = 17; break; } else { var $84 = 0;__label__ = 19; break; } //@line 1347 "src/markdown.c"
    case 17: 
      var $70=$i; //@line 1347 "src/markdown.c"
      var $71=$2; //@line 1347 "src/markdown.c"
      var $72=(($71+$70)|0); //@line 1347 "src/markdown.c"
      var $73=HEAPU8[($72)]; //@line 1347 "src/markdown.c"
      var $74=(($73)&255); //@line 1347 "src/markdown.c"
      var $75=(($74)|0) >= 48; //@line 1347 "src/markdown.c"
      if ($75) { __label__ = 18; break; } else { var $84 = 0;__label__ = 19; break; } //@line 1347 "src/markdown.c"
    case 18: 
      var $77=$i; //@line 1347 "src/markdown.c"
      var $78=$2; //@line 1347 "src/markdown.c"
      var $79=(($78+$77)|0); //@line 1347 "src/markdown.c"
      var $80=HEAPU8[($79)]; //@line 1347 "src/markdown.c"
      var $81=(($80)&255); //@line 1347 "src/markdown.c"
      var $82=(($81)|0) <= 57; //@line 1347 "src/markdown.c"
      var $84 = $82;__label__ = 19; break;
    case 19: 
      var $84;
      if ($84) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      var $86=$i; //@line 1348 "src/markdown.c"
      var $87=((($86)+(1))|0); //@line 1348 "src/markdown.c"
      $i=$87; //@line 1348 "src/markdown.c"
      __label__ = 16; break; //@line 1348 "src/markdown.c"
    case 21: 
      var $89=$i; //@line 1350 "src/markdown.c"
      var $90=((($89)+(1))|0); //@line 1350 "src/markdown.c"
      var $91=$3; //@line 1350 "src/markdown.c"
      var $92=(($90)>>>0) >= (($91)>>>0); //@line 1350 "src/markdown.c"
      if ($92) { __label__ = 24; break; } else { __label__ = 22; break; } //@line 1350 "src/markdown.c"
    case 22: 
      var $94=$i; //@line 1350 "src/markdown.c"
      var $95=$2; //@line 1350 "src/markdown.c"
      var $96=(($95+$94)|0); //@line 1350 "src/markdown.c"
      var $97=HEAPU8[($96)]; //@line 1350 "src/markdown.c"
      var $98=(($97)&255); //@line 1350 "src/markdown.c"
      var $99=(($98)|0)!=46; //@line 1350 "src/markdown.c"
      if ($99) { __label__ = 24; break; } else { __label__ = 23; break; } //@line 1350 "src/markdown.c"
    case 23: 
      var $101=$i; //@line 1350 "src/markdown.c"
      var $102=((($101)+(1))|0); //@line 1350 "src/markdown.c"
      var $103=$2; //@line 1350 "src/markdown.c"
      var $104=(($103+$102)|0); //@line 1350 "src/markdown.c"
      var $105=HEAPU8[($104)]; //@line 1350 "src/markdown.c"
      var $106=(($105)&255); //@line 1350 "src/markdown.c"
      var $107=(($106)|0)!=32; //@line 1350 "src/markdown.c"
      if ($107) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 1350 "src/markdown.c"
    case 24: 
      $1=0; //@line 1351 "src/markdown.c"
      __label__ = 28; break; //@line 1351 "src/markdown.c"
    case 25: 
      var $110=$2; //@line 1353 "src/markdown.c"
      var $111=$i; //@line 1353 "src/markdown.c"
      var $112=(($110+$111)|0); //@line 1353 "src/markdown.c"
      var $113=$3; //@line 1353 "src/markdown.c"
      var $114=$i; //@line 1353 "src/markdown.c"
      var $115=((($113)-($114))|0); //@line 1353 "src/markdown.c"
      var $116=_is_next_headerline($112, $115); //@line 1353 "src/markdown.c"
      var $117=(($116)|0)!=0; //@line 1353 "src/markdown.c"
      if ($117) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1353 "src/markdown.c"
    case 26: 
      $1=0; //@line 1354 "src/markdown.c"
      __label__ = 28; break; //@line 1354 "src/markdown.c"
    case 27: 
      var $120=$i; //@line 1356 "src/markdown.c"
      var $121=((($120)+(2))|0); //@line 1356 "src/markdown.c"
      $1=$121; //@line 1356 "src/markdown.c"
      __label__ = 28; break; //@line 1356 "src/markdown.c"
    case 28: 
      var $123=$1; //@line 1357 "src/markdown.c"
      ;
      return $123; //@line 1357 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prefix_oli["X"]=1;

function _parse_paragraph($ob, $rndr, $data, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $end;
      var $level;
      var $work=__stackBase__;
      var $tmp;
      var $header_work;
      var $beg;
      var $tmp1;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $i=0; //@line 1435 "src/markdown.c"
      $end=0; //@line 1435 "src/markdown.c"
      $level=0; //@line 1436 "src/markdown.c"
      var $5=(($work)|0); //@line 1437 "src/markdown.c"
      var $6=$3; //@line 1437 "src/markdown.c"
      HEAP32[(($5)>>2)]=$6; //@line 1437 "src/markdown.c"
      var $7=(($work+4)|0); //@line 1437 "src/markdown.c"
      HEAP32[(($7)>>2)]=0; //@line 1437 "src/markdown.c"
      var $8=(($work+8)|0); //@line 1437 "src/markdown.c"
      HEAP32[(($8)>>2)]=0; //@line 1437 "src/markdown.c"
      var $9=(($work+12)|0); //@line 1437 "src/markdown.c"
      HEAP32[(($9)>>2)]=0; //@line 1437 "src/markdown.c"
      __label__ = 3; break; //@line 1439 "src/markdown.c"
    case 3: 
      var $11=$i; //@line 1439 "src/markdown.c"
      var $12=$4; //@line 1439 "src/markdown.c"
      var $13=(($11)>>>0) < (($12)>>>0); //@line 1439 "src/markdown.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 32; break; } //@line 1439 "src/markdown.c"
    case 4: 
      var $15=$i; //@line 1440 "src/markdown.c"
      var $16=((($15)+(1))|0); //@line 1440 "src/markdown.c"
      $end=$16; //@line 1440 "src/markdown.c"
      __label__ = 5; break; //@line 1440 "src/markdown.c"
    case 5: 
      var $18=$end; //@line 1440 "src/markdown.c"
      var $19=$4; //@line 1440 "src/markdown.c"
      var $20=(($18)>>>0) < (($19)>>>0); //@line 1440 "src/markdown.c"
      if ($20) { __label__ = 6; break; } else { var $30 = 0;__label__ = 7; break; } //@line 1440 "src/markdown.c"
    case 6: 
      var $22=$end; //@line 1440 "src/markdown.c"
      var $23=((($22)-(1))|0); //@line 1440 "src/markdown.c"
      var $24=$3; //@line 1440 "src/markdown.c"
      var $25=(($24+$23)|0); //@line 1440 "src/markdown.c"
      var $26=HEAPU8[($25)]; //@line 1440 "src/markdown.c"
      var $27=(($26)&255); //@line 1440 "src/markdown.c"
      var $28=(($27)|0)!=10; //@line 1440 "src/markdown.c"
      var $30 = $28;__label__ = 7; break;
    case 7: 
      var $30;
      if ($30) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      __label__ = 9; break;
    case 9: 
      var $33=$end; //@line 1440 "src/markdown.c"
      var $34=((($33)+(1))|0); //@line 1440 "src/markdown.c"
      $end=$34; //@line 1440 "src/markdown.c"
      __label__ = 5; break; //@line 1440 "src/markdown.c"
    case 10: 
      var $36=$3; //@line 1442 "src/markdown.c"
      var $37=$i; //@line 1442 "src/markdown.c"
      var $38=(($36+$37)|0); //@line 1442 "src/markdown.c"
      var $39=$4; //@line 1442 "src/markdown.c"
      var $40=$i; //@line 1442 "src/markdown.c"
      var $41=((($39)-($40))|0); //@line 1442 "src/markdown.c"
      var $42=_is_empty($38, $41); //@line 1442 "src/markdown.c"
      var $43=(($42)|0)!=0; //@line 1442 "src/markdown.c"
      if ($43) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1442 "src/markdown.c"
    case 11: 
      __label__ = 32; break; //@line 1443 "src/markdown.c"
    case 12: 
      var $46=$3; //@line 1445 "src/markdown.c"
      var $47=$i; //@line 1445 "src/markdown.c"
      var $48=(($46+$47)|0); //@line 1445 "src/markdown.c"
      var $49=$4; //@line 1445 "src/markdown.c"
      var $50=$i; //@line 1445 "src/markdown.c"
      var $51=((($49)-($50))|0); //@line 1445 "src/markdown.c"
      var $52=_is_headerline($48, $51); //@line 1445 "src/markdown.c"
      $level=$52; //@line 1445 "src/markdown.c"
      var $53=(($52)|0)!=0; //@line 1445 "src/markdown.c"
      if ($53) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1445 "src/markdown.c"
    case 13: 
      __label__ = 32; break; //@line 1446 "src/markdown.c"
    case 14: 
      var $56=$2; //@line 1448 "src/markdown.c"
      var $57=$3; //@line 1448 "src/markdown.c"
      var $58=$i; //@line 1448 "src/markdown.c"
      var $59=(($57+$58)|0); //@line 1448 "src/markdown.c"
      var $60=$4; //@line 1448 "src/markdown.c"
      var $61=$i; //@line 1448 "src/markdown.c"
      var $62=((($60)-($61))|0); //@line 1448 "src/markdown.c"
      var $63=_is_atxheader($56, $59, $62); //@line 1448 "src/markdown.c"
      var $64=(($63)|0)!=0; //@line 1448 "src/markdown.c"
      if ($64) { __label__ = 17; break; } else { __label__ = 15; break; } //@line 1448 "src/markdown.c"
    case 15: 
      var $66=$3; //@line 1449 "src/markdown.c"
      var $67=$i; //@line 1449 "src/markdown.c"
      var $68=(($66+$67)|0); //@line 1449 "src/markdown.c"
      var $69=$4; //@line 1449 "src/markdown.c"
      var $70=$i; //@line 1449 "src/markdown.c"
      var $71=((($69)-($70))|0); //@line 1449 "src/markdown.c"
      var $72=_is_hrule($68, $71); //@line 1449 "src/markdown.c"
      var $73=(($72)|0)!=0; //@line 1449 "src/markdown.c"
      if ($73) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1449 "src/markdown.c"
    case 16: 
      var $75=$3; //@line 1450 "src/markdown.c"
      var $76=$i; //@line 1450 "src/markdown.c"
      var $77=(($75+$76)|0); //@line 1450 "src/markdown.c"
      var $78=$4; //@line 1450 "src/markdown.c"
      var $79=$i; //@line 1450 "src/markdown.c"
      var $80=((($78)-($79))|0); //@line 1450 "src/markdown.c"
      var $81=_prefix_quote($77, $80); //@line 1450 "src/markdown.c"
      var $82=(($81)|0)!=0; //@line 1450 "src/markdown.c"
      if ($82) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1450 "src/markdown.c"
    case 17: 
      var $84=$i; //@line 1451 "src/markdown.c"
      $end=$84; //@line 1451 "src/markdown.c"
      __label__ = 32; break; //@line 1452 "src/markdown.c"
    case 18: 
      var $86=$2; //@line 1464 "src/markdown.c"
      var $87=(($86+420)|0); //@line 1464 "src/markdown.c"
      var $88=HEAP32[(($87)>>2)]; //@line 1464 "src/markdown.c"
      var $89=$88 & 256; //@line 1464 "src/markdown.c"
      var $90=(($89)|0)!=0; //@line 1464 "src/markdown.c"
      if ($90) { __label__ = 19; break; } else { __label__ = 31; break; } //@line 1464 "src/markdown.c"
    case 19: 
      var $92=$i; //@line 1464 "src/markdown.c"
      var $93=$3; //@line 1464 "src/markdown.c"
      var $94=(($93+$92)|0); //@line 1464 "src/markdown.c"
      var $95=HEAPU8[($94)]; //@line 1464 "src/markdown.c"
      var $96=(($95)&255); //@line 1464 "src/markdown.c"
      var $97=_isalnum($96); //@line 1464 "src/markdown.c"
      var $98=(($97)|0)!=0; //@line 1464 "src/markdown.c"
      if ($98) { __label__ = 31; break; } else { __label__ = 20; break; } //@line 1464 "src/markdown.c"
    case 20: 
      var $100=$3; //@line 1465 "src/markdown.c"
      var $101=$i; //@line 1465 "src/markdown.c"
      var $102=(($100+$101)|0); //@line 1465 "src/markdown.c"
      var $103=$4; //@line 1465 "src/markdown.c"
      var $104=$i; //@line 1465 "src/markdown.c"
      var $105=((($103)-($104))|0); //@line 1465 "src/markdown.c"
      var $106=_prefix_oli($102, $105); //@line 1465 "src/markdown.c"
      var $107=(($106)|0)!=0; //@line 1465 "src/markdown.c"
      if ($107) { __label__ = 22; break; } else { __label__ = 21; break; } //@line 1465 "src/markdown.c"
    case 21: 
      var $109=$3; //@line 1466 "src/markdown.c"
      var $110=$i; //@line 1466 "src/markdown.c"
      var $111=(($109+$110)|0); //@line 1466 "src/markdown.c"
      var $112=$4; //@line 1466 "src/markdown.c"
      var $113=$i; //@line 1466 "src/markdown.c"
      var $114=((($112)-($113))|0); //@line 1466 "src/markdown.c"
      var $115=_prefix_uli($111, $114); //@line 1466 "src/markdown.c"
      var $116=(($115)|0)!=0; //@line 1466 "src/markdown.c"
      if ($116) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1466 "src/markdown.c"
    case 22: 
      var $118=$i; //@line 1467 "src/markdown.c"
      $end=$118; //@line 1467 "src/markdown.c"
      __label__ = 32; break; //@line 1468 "src/markdown.c"
    case 23: 
      var $120=$i; //@line 1472 "src/markdown.c"
      var $121=$3; //@line 1472 "src/markdown.c"
      var $122=(($121+$120)|0); //@line 1472 "src/markdown.c"
      var $123=HEAPU8[($122)]; //@line 1472 "src/markdown.c"
      var $124=(($123)&255); //@line 1472 "src/markdown.c"
      var $125=(($124)|0)==60; //@line 1472 "src/markdown.c"
      if ($125) { __label__ = 24; break; } else { __label__ = 27; break; } //@line 1472 "src/markdown.c"
    case 24: 
      var $127=$2; //@line 1472 "src/markdown.c"
      var $128=(($127)|0); //@line 1472 "src/markdown.c"
      var $129=(($128+8)|0); //@line 1472 "src/markdown.c"
      var $130=HEAP32[(($129)>>2)]; //@line 1472 "src/markdown.c"
      var $131=(($130)|0)!=0; //@line 1472 "src/markdown.c"
      if ($131) { __label__ = 25; break; } else { __label__ = 27; break; } //@line 1472 "src/markdown.c"
    case 25: 
      var $133=$1; //@line 1473 "src/markdown.c"
      var $134=$2; //@line 1473 "src/markdown.c"
      var $135=$3; //@line 1473 "src/markdown.c"
      var $136=$i; //@line 1473 "src/markdown.c"
      var $137=(($135+$136)|0); //@line 1473 "src/markdown.c"
      var $138=$4; //@line 1473 "src/markdown.c"
      var $139=$i; //@line 1473 "src/markdown.c"
      var $140=((($138)-($139))|0); //@line 1473 "src/markdown.c"
      var $141=_parse_htmlblock($133, $134, $137, $140, 0); //@line 1473 "src/markdown.c"
      var $142=(($141)|0)!=0; //@line 1473 "src/markdown.c"
      if ($142) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1473 "src/markdown.c"
    case 26: 
      var $144=$i; //@line 1474 "src/markdown.c"
      $end=$144; //@line 1474 "src/markdown.c"
      __label__ = 32; break; //@line 1475 "src/markdown.c"
    case 27: 
      var $146=$2; //@line 1479 "src/markdown.c"
      var $147=(($146+420)|0); //@line 1479 "src/markdown.c"
      var $148=HEAP32[(($147)>>2)]; //@line 1479 "src/markdown.c"
      var $149=$148 & 4; //@line 1479 "src/markdown.c"
      var $150=(($149)|0)!=0; //@line 1479 "src/markdown.c"
      if ($150) { __label__ = 28; break; } else { __label__ = 30; break; } //@line 1479 "src/markdown.c"
    case 28: 
      var $152=$3; //@line 1480 "src/markdown.c"
      var $153=$i; //@line 1480 "src/markdown.c"
      var $154=(($152+$153)|0); //@line 1480 "src/markdown.c"
      var $155=$4; //@line 1480 "src/markdown.c"
      var $156=$i; //@line 1480 "src/markdown.c"
      var $157=((($155)-($156))|0); //@line 1480 "src/markdown.c"
      var $158=_is_codefence($154, $157, 0); //@line 1480 "src/markdown.c"
      var $159=(($158)|0)!=0; //@line 1480 "src/markdown.c"
      if ($159) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 1480 "src/markdown.c"
    case 29: 
      var $161=$i; //@line 1481 "src/markdown.c"
      $end=$161; //@line 1481 "src/markdown.c"
      __label__ = 32; break; //@line 1482 "src/markdown.c"
    case 30: 
      __label__ = 31; break; //@line 1484 "src/markdown.c"
    case 31: 
      var $164=$end; //@line 1486 "src/markdown.c"
      $i=$164; //@line 1486 "src/markdown.c"
      __label__ = 3; break; //@line 1487 "src/markdown.c"
    case 32: 
      var $166=$i; //@line 1489 "src/markdown.c"
      var $167=(($work+4)|0); //@line 1489 "src/markdown.c"
      HEAP32[(($167)>>2)]=$166; //@line 1489 "src/markdown.c"
      __label__ = 33; break; //@line 1490 "src/markdown.c"
    case 33: 
      var $169=(($work+4)|0); //@line 1490 "src/markdown.c"
      var $170=HEAP32[(($169)>>2)]; //@line 1490 "src/markdown.c"
      var $171=(($170)|0)!=0; //@line 1490 "src/markdown.c"
      if ($171) { __label__ = 34; break; } else { var $182 = 0;__label__ = 35; break; } //@line 1490 "src/markdown.c"
    case 34: 
      var $173=(($work+4)|0); //@line 1490 "src/markdown.c"
      var $174=HEAP32[(($173)>>2)]; //@line 1490 "src/markdown.c"
      var $175=((($174)-(1))|0); //@line 1490 "src/markdown.c"
      var $176=$3; //@line 1490 "src/markdown.c"
      var $177=(($176+$175)|0); //@line 1490 "src/markdown.c"
      var $178=HEAPU8[($177)]; //@line 1490 "src/markdown.c"
      var $179=(($178)&255); //@line 1490 "src/markdown.c"
      var $180=(($179)|0)==10; //@line 1490 "src/markdown.c"
      var $182 = $180;__label__ = 35; break;
    case 35: 
      var $182;
      if ($182) { __label__ = 36; break; } else { __label__ = 37; break; }
    case 36: 
      var $184=(($work+4)|0); //@line 1491 "src/markdown.c"
      var $185=HEAP32[(($184)>>2)]; //@line 1491 "src/markdown.c"
      var $186=((($185)-(1))|0); //@line 1491 "src/markdown.c"
      HEAP32[(($184)>>2)]=$186; //@line 1491 "src/markdown.c"
      __label__ = 33; break; //@line 1491 "src/markdown.c"
    case 37: 
      var $188=$level; //@line 1493 "src/markdown.c"
      var $189=(($188)|0)!=0; //@line 1493 "src/markdown.c"
      if ($189) { __label__ = 41; break; } else { __label__ = 38; break; } //@line 1493 "src/markdown.c"
    case 38: 
      var $191=$2; //@line 1494 "src/markdown.c"
      var $192=_rndr_newbuf($191, 0); //@line 1494 "src/markdown.c"
      $tmp=$192; //@line 1494 "src/markdown.c"
      var $193=$tmp; //@line 1495 "src/markdown.c"
      var $194=$2; //@line 1495 "src/markdown.c"
      var $195=(($work)|0); //@line 1495 "src/markdown.c"
      var $196=HEAP32[(($195)>>2)]; //@line 1495 "src/markdown.c"
      var $197=(($work+4)|0); //@line 1495 "src/markdown.c"
      var $198=HEAP32[(($197)>>2)]; //@line 1495 "src/markdown.c"
      _parse_inline($193, $194, $196, $198); //@line 1495 "src/markdown.c"
      var $199=$2; //@line 1496 "src/markdown.c"
      var $200=(($199)|0); //@line 1496 "src/markdown.c"
      var $201=(($200+28)|0); //@line 1496 "src/markdown.c"
      var $202=HEAP32[(($201)>>2)]; //@line 1496 "src/markdown.c"
      var $203=(($202)|0)!=0; //@line 1496 "src/markdown.c"
      if ($203) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 1496 "src/markdown.c"
    case 39: 
      var $205=$2; //@line 1497 "src/markdown.c"
      var $206=(($205)|0); //@line 1497 "src/markdown.c"
      var $207=(($206+28)|0); //@line 1497 "src/markdown.c"
      var $208=HEAP32[(($207)>>2)]; //@line 1497 "src/markdown.c"
      var $209=$1; //@line 1497 "src/markdown.c"
      var $210=$tmp; //@line 1497 "src/markdown.c"
      var $211=$2; //@line 1497 "src/markdown.c"
      var $212=(($211+104)|0); //@line 1497 "src/markdown.c"
      var $213=HEAP32[(($212)>>2)]; //@line 1497 "src/markdown.c"
      FUNCTION_TABLE[$208]($209, $210, $213); //@line 1497 "src/markdown.c"
      __label__ = 40; break; //@line 1497 "src/markdown.c"
    case 40: 
      var $215=$2; //@line 1498 "src/markdown.c"
      _rndr_popbuf($215, 0); //@line 1498 "src/markdown.c"
      __label__ = 61; break; //@line 1499 "src/markdown.c"
    case 41: 
      var $217=(($work+4)|0); //@line 1502 "src/markdown.c"
      var $218=HEAP32[(($217)>>2)]; //@line 1502 "src/markdown.c"
      var $219=(($218)|0)!=0; //@line 1502 "src/markdown.c"
      if ($219) { __label__ = 42; break; } else { __label__ = 58; break; } //@line 1502 "src/markdown.c"
    case 42: 
      var $221=(($work+4)|0); //@line 1504 "src/markdown.c"
      var $222=HEAP32[(($221)>>2)]; //@line 1504 "src/markdown.c"
      $i=$222; //@line 1504 "src/markdown.c"
      var $223=(($work+4)|0); //@line 1505 "src/markdown.c"
      var $224=HEAP32[(($223)>>2)]; //@line 1505 "src/markdown.c"
      var $225=((($224)-(1))|0); //@line 1505 "src/markdown.c"
      HEAP32[(($223)>>2)]=$225; //@line 1505 "src/markdown.c"
      __label__ = 43; break; //@line 1507 "src/markdown.c"
    case 43: 
      var $227=(($work+4)|0); //@line 1507 "src/markdown.c"
      var $228=HEAP32[(($227)>>2)]; //@line 1507 "src/markdown.c"
      var $229=(($228)|0)!=0; //@line 1507 "src/markdown.c"
      if ($229) { __label__ = 44; break; } else { var $239 = 0;__label__ = 45; break; } //@line 1507 "src/markdown.c"
    case 44: 
      var $231=(($work+4)|0); //@line 1507 "src/markdown.c"
      var $232=HEAP32[(($231)>>2)]; //@line 1507 "src/markdown.c"
      var $233=$3; //@line 1507 "src/markdown.c"
      var $234=(($233+$232)|0); //@line 1507 "src/markdown.c"
      var $235=HEAPU8[($234)]; //@line 1507 "src/markdown.c"
      var $236=(($235)&255); //@line 1507 "src/markdown.c"
      var $237=(($236)|0)!=10; //@line 1507 "src/markdown.c"
      var $239 = $237;__label__ = 45; break;
    case 45: 
      var $239;
      if ($239) { __label__ = 46; break; } else { __label__ = 47; break; }
    case 46: 
      var $241=(($work+4)|0); //@line 1508 "src/markdown.c"
      var $242=HEAP32[(($241)>>2)]; //@line 1508 "src/markdown.c"
      var $243=((($242)-(1))|0); //@line 1508 "src/markdown.c"
      HEAP32[(($241)>>2)]=$243; //@line 1508 "src/markdown.c"
      __label__ = 43; break; //@line 1508 "src/markdown.c"
    case 47: 
      var $245=(($work+4)|0); //@line 1510 "src/markdown.c"
      var $246=HEAP32[(($245)>>2)]; //@line 1510 "src/markdown.c"
      var $247=((($246)+(1))|0); //@line 1510 "src/markdown.c"
      $beg=$247; //@line 1510 "src/markdown.c"
      __label__ = 48; break; //@line 1511 "src/markdown.c"
    case 48: 
      var $249=(($work+4)|0); //@line 1511 "src/markdown.c"
      var $250=HEAP32[(($249)>>2)]; //@line 1511 "src/markdown.c"
      var $251=(($250)|0)!=0; //@line 1511 "src/markdown.c"
      if ($251) { __label__ = 49; break; } else { var $262 = 0;__label__ = 50; break; } //@line 1511 "src/markdown.c"
    case 49: 
      var $253=(($work+4)|0); //@line 1511 "src/markdown.c"
      var $254=HEAP32[(($253)>>2)]; //@line 1511 "src/markdown.c"
      var $255=((($254)-(1))|0); //@line 1511 "src/markdown.c"
      var $256=$3; //@line 1511 "src/markdown.c"
      var $257=(($256+$255)|0); //@line 1511 "src/markdown.c"
      var $258=HEAPU8[($257)]; //@line 1511 "src/markdown.c"
      var $259=(($258)&255); //@line 1511 "src/markdown.c"
      var $260=(($259)|0)==10; //@line 1511 "src/markdown.c"
      var $262 = $260;__label__ = 50; break;
    case 50: 
      var $262;
      if ($262) { __label__ = 51; break; } else { __label__ = 52; break; }
    case 51: 
      var $264=(($work+4)|0); //@line 1512 "src/markdown.c"
      var $265=HEAP32[(($264)>>2)]; //@line 1512 "src/markdown.c"
      var $266=((($265)-(1))|0); //@line 1512 "src/markdown.c"
      HEAP32[(($264)>>2)]=$266; //@line 1512 "src/markdown.c"
      __label__ = 48; break; //@line 1512 "src/markdown.c"
    case 52: 
      var $268=(($work+4)|0); //@line 1514 "src/markdown.c"
      var $269=HEAPU32[(($268)>>2)]; //@line 1514 "src/markdown.c"
      var $270=(($269)>>>0) > 0; //@line 1514 "src/markdown.c"
      if ($270) { __label__ = 53; break; } else { __label__ = 56; break; } //@line 1514 "src/markdown.c"
    case 53: 
      var $272=$2; //@line 1515 "src/markdown.c"
      var $273=_rndr_newbuf($272, 0); //@line 1515 "src/markdown.c"
      $tmp1=$273; //@line 1515 "src/markdown.c"
      var $274=$tmp1; //@line 1516 "src/markdown.c"
      var $275=$2; //@line 1516 "src/markdown.c"
      var $276=(($work)|0); //@line 1516 "src/markdown.c"
      var $277=HEAP32[(($276)>>2)]; //@line 1516 "src/markdown.c"
      var $278=(($work+4)|0); //@line 1516 "src/markdown.c"
      var $279=HEAP32[(($278)>>2)]; //@line 1516 "src/markdown.c"
      _parse_inline($274, $275, $277, $279); //@line 1516 "src/markdown.c"
      var $280=$2; //@line 1518 "src/markdown.c"
      var $281=(($280)|0); //@line 1518 "src/markdown.c"
      var $282=(($281+28)|0); //@line 1518 "src/markdown.c"
      var $283=HEAP32[(($282)>>2)]; //@line 1518 "src/markdown.c"
      var $284=(($283)|0)!=0; //@line 1518 "src/markdown.c"
      if ($284) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 1518 "src/markdown.c"
    case 54: 
      var $286=$2; //@line 1519 "src/markdown.c"
      var $287=(($286)|0); //@line 1519 "src/markdown.c"
      var $288=(($287+28)|0); //@line 1519 "src/markdown.c"
      var $289=HEAP32[(($288)>>2)]; //@line 1519 "src/markdown.c"
      var $290=$1; //@line 1519 "src/markdown.c"
      var $291=$tmp1; //@line 1519 "src/markdown.c"
      var $292=$2; //@line 1519 "src/markdown.c"
      var $293=(($292+104)|0); //@line 1519 "src/markdown.c"
      var $294=HEAP32[(($293)>>2)]; //@line 1519 "src/markdown.c"
      FUNCTION_TABLE[$289]($290, $291, $294); //@line 1519 "src/markdown.c"
      __label__ = 55; break; //@line 1519 "src/markdown.c"
    case 55: 
      var $296=$2; //@line 1521 "src/markdown.c"
      _rndr_popbuf($296, 0); //@line 1521 "src/markdown.c"
      var $297=$beg; //@line 1522 "src/markdown.c"
      var $298=(($work)|0); //@line 1522 "src/markdown.c"
      var $299=HEAP32[(($298)>>2)]; //@line 1522 "src/markdown.c"
      var $300=(($299+$297)|0); //@line 1522 "src/markdown.c"
      HEAP32[(($298)>>2)]=$300; //@line 1522 "src/markdown.c"
      var $301=$i; //@line 1523 "src/markdown.c"
      var $302=$beg; //@line 1523 "src/markdown.c"
      var $303=((($301)-($302))|0); //@line 1523 "src/markdown.c"
      var $304=(($work+4)|0); //@line 1523 "src/markdown.c"
      HEAP32[(($304)>>2)]=$303; //@line 1523 "src/markdown.c"
      __label__ = 57; break; //@line 1524 "src/markdown.c"
    case 56: 
      var $306=$i; //@line 1525 "src/markdown.c"
      var $307=(($work+4)|0); //@line 1525 "src/markdown.c"
      HEAP32[(($307)>>2)]=$306; //@line 1525 "src/markdown.c"
      __label__ = 57; break;
    case 57: 
      __label__ = 58; break; //@line 1526 "src/markdown.c"
    case 58: 
      var $310=$2; //@line 1528 "src/markdown.c"
      var $311=_rndr_newbuf($310, 1); //@line 1528 "src/markdown.c"
      $header_work=$311; //@line 1528 "src/markdown.c"
      var $312=$header_work; //@line 1529 "src/markdown.c"
      var $313=$2; //@line 1529 "src/markdown.c"
      var $314=(($work)|0); //@line 1529 "src/markdown.c"
      var $315=HEAP32[(($314)>>2)]; //@line 1529 "src/markdown.c"
      var $316=(($work+4)|0); //@line 1529 "src/markdown.c"
      var $317=HEAP32[(($316)>>2)]; //@line 1529 "src/markdown.c"
      _parse_inline($312, $313, $315, $317); //@line 1529 "src/markdown.c"
      var $318=$2; //@line 1531 "src/markdown.c"
      var $319=(($318)|0); //@line 1531 "src/markdown.c"
      var $320=(($319+12)|0); //@line 1531 "src/markdown.c"
      var $321=HEAP32[(($320)>>2)]; //@line 1531 "src/markdown.c"
      var $322=(($321)|0)!=0; //@line 1531 "src/markdown.c"
      if ($322) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 1531 "src/markdown.c"
    case 59: 
      var $324=$2; //@line 1532 "src/markdown.c"
      var $325=(($324)|0); //@line 1532 "src/markdown.c"
      var $326=(($325+12)|0); //@line 1532 "src/markdown.c"
      var $327=HEAP32[(($326)>>2)]; //@line 1532 "src/markdown.c"
      var $328=$1; //@line 1532 "src/markdown.c"
      var $329=$header_work; //@line 1532 "src/markdown.c"
      var $330=$level; //@line 1532 "src/markdown.c"
      var $331=$2; //@line 1532 "src/markdown.c"
      var $332=(($331+104)|0); //@line 1532 "src/markdown.c"
      var $333=HEAP32[(($332)>>2)]; //@line 1532 "src/markdown.c"
      FUNCTION_TABLE[$327]($328, $329, $330, $333); //@line 1532 "src/markdown.c"
      __label__ = 60; break; //@line 1532 "src/markdown.c"
    case 60: 
      var $335=$2; //@line 1534 "src/markdown.c"
      _rndr_popbuf($335, 1); //@line 1534 "src/markdown.c"
      __label__ = 61; break;
    case 61: 
      var $337=$end; //@line 1537 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $337; //@line 1537 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_paragraph["X"]=1;

function _is_headerline($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$data;
      $3=$size;
      $i=0; //@line 1274 "src/markdown.c"
      var $4=$i; //@line 1277 "src/markdown.c"
      var $5=$2; //@line 1277 "src/markdown.c"
      var $6=(($5+$4)|0); //@line 1277 "src/markdown.c"
      var $7=HEAPU8[($6)]; //@line 1277 "src/markdown.c"
      var $8=(($7)&255); //@line 1277 "src/markdown.c"
      var $9=(($8)|0)==61; //@line 1277 "src/markdown.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 17; break; } //@line 1277 "src/markdown.c"
    case 3: 
      $i=1; //@line 1278 "src/markdown.c"
      __label__ = 4; break; //@line 1278 "src/markdown.c"
    case 4: 
      var $12=$i; //@line 1278 "src/markdown.c"
      var $13=$3; //@line 1278 "src/markdown.c"
      var $14=(($12)>>>0) < (($13)>>>0); //@line 1278 "src/markdown.c"
      if ($14) { __label__ = 5; break; } else { var $23 = 0;__label__ = 6; break; } //@line 1278 "src/markdown.c"
    case 5: 
      var $16=$i; //@line 1278 "src/markdown.c"
      var $17=$2; //@line 1278 "src/markdown.c"
      var $18=(($17+$16)|0); //@line 1278 "src/markdown.c"
      var $19=HEAPU8[($18)]; //@line 1278 "src/markdown.c"
      var $20=(($19)&255); //@line 1278 "src/markdown.c"
      var $21=(($20)|0)==61; //@line 1278 "src/markdown.c"
      var $23 = $21;__label__ = 6; break;
    case 6: 
      var $23;
      if ($23) { __label__ = 7; break; } else { __label__ = 9; break; }
    case 7: 
      __label__ = 8; break;
    case 8: 
      var $26=$i; //@line 1278 "src/markdown.c"
      var $27=((($26)+(1))|0); //@line 1278 "src/markdown.c"
      $i=$27; //@line 1278 "src/markdown.c"
      __label__ = 4; break; //@line 1278 "src/markdown.c"
    case 9: 
      __label__ = 10; break; //@line 1279 "src/markdown.c"
    case 10: 
      var $30=$i; //@line 1279 "src/markdown.c"
      var $31=$3; //@line 1279 "src/markdown.c"
      var $32=(($30)>>>0) < (($31)>>>0); //@line 1279 "src/markdown.c"
      if ($32) { __label__ = 11; break; } else { var $41 = 0;__label__ = 12; break; } //@line 1279 "src/markdown.c"
    case 11: 
      var $34=$i; //@line 1279 "src/markdown.c"
      var $35=$2; //@line 1279 "src/markdown.c"
      var $36=(($35+$34)|0); //@line 1279 "src/markdown.c"
      var $37=HEAPU8[($36)]; //@line 1279 "src/markdown.c"
      var $38=(($37)&255); //@line 1279 "src/markdown.c"
      var $39=(($38)|0)==32; //@line 1279 "src/markdown.c"
      var $41 = $39;__label__ = 12; break;
    case 12: 
      var $41;
      if ($41) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      var $43=$i; //@line 1279 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 1279 "src/markdown.c"
      $i=$44; //@line 1279 "src/markdown.c"
      __label__ = 10; break; //@line 1279 "src/markdown.c"
    case 14: 
      var $46=$i; //@line 1280 "src/markdown.c"
      var $47=$3; //@line 1280 "src/markdown.c"
      var $48=(($46)>>>0) >= (($47)>>>0); //@line 1280 "src/markdown.c"
      if ($48) { var $57 = 1;__label__ = 16; break; } else { __label__ = 15; break; } //@line 1280 "src/markdown.c"
    case 15: 
      var $50=$i; //@line 1280 "src/markdown.c"
      var $51=$2; //@line 1280 "src/markdown.c"
      var $52=(($51+$50)|0); //@line 1280 "src/markdown.c"
      var $53=HEAPU8[($52)]; //@line 1280 "src/markdown.c"
      var $54=(($53)&255); //@line 1280 "src/markdown.c"
      var $55=(($54)|0)==10; //@line 1280 "src/markdown.c"
      var $57 = $55;__label__ = 16; break; //@line 1280 "src/markdown.c"
    case 16: 
      var $57;
      var $58=$57 ? 1 : 0; //@line 1280 "src/markdown.c"
      $1=$58; //@line 1280 "src/markdown.c"
      __label__ = 33; break; //@line 1280 "src/markdown.c"
    case 17: 
      var $60=$i; //@line 1283 "src/markdown.c"
      var $61=$2; //@line 1283 "src/markdown.c"
      var $62=(($61+$60)|0); //@line 1283 "src/markdown.c"
      var $63=HEAPU8[($62)]; //@line 1283 "src/markdown.c"
      var $64=(($63)&255); //@line 1283 "src/markdown.c"
      var $65=(($64)|0)==45; //@line 1283 "src/markdown.c"
      if ($65) { __label__ = 18; break; } else { __label__ = 32; break; } //@line 1283 "src/markdown.c"
    case 18: 
      $i=1; //@line 1284 "src/markdown.c"
      __label__ = 19; break; //@line 1284 "src/markdown.c"
    case 19: 
      var $68=$i; //@line 1284 "src/markdown.c"
      var $69=$3; //@line 1284 "src/markdown.c"
      var $70=(($68)>>>0) < (($69)>>>0); //@line 1284 "src/markdown.c"
      if ($70) { __label__ = 20; break; } else { var $79 = 0;__label__ = 21; break; } //@line 1284 "src/markdown.c"
    case 20: 
      var $72=$i; //@line 1284 "src/markdown.c"
      var $73=$2; //@line 1284 "src/markdown.c"
      var $74=(($73+$72)|0); //@line 1284 "src/markdown.c"
      var $75=HEAPU8[($74)]; //@line 1284 "src/markdown.c"
      var $76=(($75)&255); //@line 1284 "src/markdown.c"
      var $77=(($76)|0)==45; //@line 1284 "src/markdown.c"
      var $79 = $77;__label__ = 21; break;
    case 21: 
      var $79;
      if ($79) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: 
      __label__ = 23; break;
    case 23: 
      var $82=$i; //@line 1284 "src/markdown.c"
      var $83=((($82)+(1))|0); //@line 1284 "src/markdown.c"
      $i=$83; //@line 1284 "src/markdown.c"
      __label__ = 19; break; //@line 1284 "src/markdown.c"
    case 24: 
      __label__ = 25; break; //@line 1285 "src/markdown.c"
    case 25: 
      var $86=$i; //@line 1285 "src/markdown.c"
      var $87=$3; //@line 1285 "src/markdown.c"
      var $88=(($86)>>>0) < (($87)>>>0); //@line 1285 "src/markdown.c"
      if ($88) { __label__ = 26; break; } else { var $97 = 0;__label__ = 27; break; } //@line 1285 "src/markdown.c"
    case 26: 
      var $90=$i; //@line 1285 "src/markdown.c"
      var $91=$2; //@line 1285 "src/markdown.c"
      var $92=(($91+$90)|0); //@line 1285 "src/markdown.c"
      var $93=HEAPU8[($92)]; //@line 1285 "src/markdown.c"
      var $94=(($93)&255); //@line 1285 "src/markdown.c"
      var $95=(($94)|0)==32; //@line 1285 "src/markdown.c"
      var $97 = $95;__label__ = 27; break;
    case 27: 
      var $97;
      if ($97) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: 
      var $99=$i; //@line 1285 "src/markdown.c"
      var $100=((($99)+(1))|0); //@line 1285 "src/markdown.c"
      $i=$100; //@line 1285 "src/markdown.c"
      __label__ = 25; break; //@line 1285 "src/markdown.c"
    case 29: 
      var $102=$i; //@line 1286 "src/markdown.c"
      var $103=$3; //@line 1286 "src/markdown.c"
      var $104=(($102)>>>0) >= (($103)>>>0); //@line 1286 "src/markdown.c"
      if ($104) { var $113 = 1;__label__ = 31; break; } else { __label__ = 30; break; } //@line 1286 "src/markdown.c"
    case 30: 
      var $106=$i; //@line 1286 "src/markdown.c"
      var $107=$2; //@line 1286 "src/markdown.c"
      var $108=(($107+$106)|0); //@line 1286 "src/markdown.c"
      var $109=HEAPU8[($108)]; //@line 1286 "src/markdown.c"
      var $110=(($109)&255); //@line 1286 "src/markdown.c"
      var $111=(($110)|0)==10; //@line 1286 "src/markdown.c"
      var $113 = $111;__label__ = 31; break; //@line 1286 "src/markdown.c"
    case 31: 
      var $113;
      var $114=$113 ? 2 : 0; //@line 1286 "src/markdown.c"
      $1=$114; //@line 1286 "src/markdown.c"
      __label__ = 33; break; //@line 1286 "src/markdown.c"
    case 32: 
      $1=0; //@line 1288 "src/markdown.c"
      __label__ = 33; break; //@line 1288 "src/markdown.c"
    case 33: 
      var $117=$1; //@line 1289 "src/markdown.c"
      ;
      return $117; //@line 1289 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_is_headerline["X"]=1;

function _rndr_popbuf($rndr, $type) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$rndr;
  $2=$type;
  var $3=$2; //@line 147 "src/markdown.c"
  var $4=$1; //@line 147 "src/markdown.c"
  var $5=(($4+396)|0); //@line 147 "src/markdown.c"
  var $6=(($5+($3)*(12))|0); //@line 147 "src/markdown.c"
  var $7=(($6+4)|0); //@line 147 "src/markdown.c"
  var $8=HEAP32[(($7)>>2)]; //@line 147 "src/markdown.c"
  var $9=((($8)-(1))|0); //@line 147 "src/markdown.c"
  HEAP32[(($7)>>2)]=$9; //@line 147 "src/markdown.c"
  ;
  return; //@line 148 "src/markdown.c"
}


function _is_codefence($data, $size, $syntax) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $syn_len;
      var $syn_start;
      $2=$data;
      $3=$size;
      $4=$syntax;
      $i=0; //@line 1197 "src/markdown.c"
      $syn_len=0; //@line 1197 "src/markdown.c"
      var $5=$2; //@line 1200 "src/markdown.c"
      var $6=$3; //@line 1200 "src/markdown.c"
      var $7=_prefix_codefence($5, $6); //@line 1200 "src/markdown.c"
      $i=$7; //@line 1200 "src/markdown.c"
      var $8=$i; //@line 1201 "src/markdown.c"
      var $9=(($8)|0)==0; //@line 1201 "src/markdown.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1201 "src/markdown.c"
    case 3: 
      $1=0; //@line 1202 "src/markdown.c"
      __label__ = 47; break; //@line 1202 "src/markdown.c"
    case 4: 
      __label__ = 5; break; //@line 1204 "src/markdown.c"
    case 5: 
      var $13=$i; //@line 1204 "src/markdown.c"
      var $14=$3; //@line 1204 "src/markdown.c"
      var $15=(($13)>>>0) < (($14)>>>0); //@line 1204 "src/markdown.c"
      if ($15) { __label__ = 6; break; } else { var $24 = 0;__label__ = 7; break; } //@line 1204 "src/markdown.c"
    case 6: 
      var $17=$i; //@line 1204 "src/markdown.c"
      var $18=$2; //@line 1204 "src/markdown.c"
      var $19=(($18+$17)|0); //@line 1204 "src/markdown.c"
      var $20=HEAPU8[($19)]; //@line 1204 "src/markdown.c"
      var $21=(($20)&255); //@line 1204 "src/markdown.c"
      var $22=(($21)|0)==32; //@line 1204 "src/markdown.c"
      var $24 = $22;__label__ = 7; break;
    case 7: 
      var $24;
      if ($24) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $26=$i; //@line 1205 "src/markdown.c"
      var $27=((($26)+(1))|0); //@line 1205 "src/markdown.c"
      $i=$27; //@line 1205 "src/markdown.c"
      __label__ = 5; break; //@line 1205 "src/markdown.c"
    case 9: 
      var $29=$2; //@line 1207 "src/markdown.c"
      var $30=$i; //@line 1207 "src/markdown.c"
      var $31=(($29+$30)|0); //@line 1207 "src/markdown.c"
      $syn_start=$31; //@line 1207 "src/markdown.c"
      var $32=$i; //@line 1209 "src/markdown.c"
      var $33=$3; //@line 1209 "src/markdown.c"
      var $34=(($32)>>>0) < (($33)>>>0); //@line 1209 "src/markdown.c"
      if ($34) { __label__ = 10; break; } else { __label__ = 31; break; } //@line 1209 "src/markdown.c"
    case 10: 
      var $36=$i; //@line 1209 "src/markdown.c"
      var $37=$2; //@line 1209 "src/markdown.c"
      var $38=(($37+$36)|0); //@line 1209 "src/markdown.c"
      var $39=HEAPU8[($38)]; //@line 1209 "src/markdown.c"
      var $40=(($39)&255); //@line 1209 "src/markdown.c"
      var $41=(($40)|0)==123; //@line 1209 "src/markdown.c"
      if ($41) { __label__ = 11; break; } else { __label__ = 31; break; } //@line 1209 "src/markdown.c"
    case 11: 
      var $43=$i; //@line 1210 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 1210 "src/markdown.c"
      $i=$44; //@line 1210 "src/markdown.c"
      var $45=$syn_start; //@line 1210 "src/markdown.c"
      var $46=(($45+1)|0); //@line 1210 "src/markdown.c"
      $syn_start=$46; //@line 1210 "src/markdown.c"
      __label__ = 12; break; //@line 1212 "src/markdown.c"
    case 12: 
      var $48=$i; //@line 1212 "src/markdown.c"
      var $49=$3; //@line 1212 "src/markdown.c"
      var $50=(($48)>>>0) < (($49)>>>0); //@line 1212 "src/markdown.c"
      if ($50) { __label__ = 13; break; } else { var $66 = 0;__label__ = 15; break; } //@line 1212 "src/markdown.c"
    case 13: 
      var $52=$i; //@line 1212 "src/markdown.c"
      var $53=$2; //@line 1212 "src/markdown.c"
      var $54=(($53+$52)|0); //@line 1212 "src/markdown.c"
      var $55=HEAPU8[($54)]; //@line 1212 "src/markdown.c"
      var $56=(($55)&255); //@line 1212 "src/markdown.c"
      var $57=(($56)|0)!=125; //@line 1212 "src/markdown.c"
      if ($57) { __label__ = 14; break; } else { var $66 = 0;__label__ = 15; break; } //@line 1212 "src/markdown.c"
    case 14: 
      var $59=$i; //@line 1212 "src/markdown.c"
      var $60=$2; //@line 1212 "src/markdown.c"
      var $61=(($60+$59)|0); //@line 1212 "src/markdown.c"
      var $62=HEAPU8[($61)]; //@line 1212 "src/markdown.c"
      var $63=(($62)&255); //@line 1212 "src/markdown.c"
      var $64=(($63)|0)!=10; //@line 1212 "src/markdown.c"
      var $66 = $64;__label__ = 15; break;
    case 15: 
      var $66;
      if ($66) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $68=$syn_len; //@line 1213 "src/markdown.c"
      var $69=((($68)+(1))|0); //@line 1213 "src/markdown.c"
      $syn_len=$69; //@line 1213 "src/markdown.c"
      var $70=$i; //@line 1213 "src/markdown.c"
      var $71=((($70)+(1))|0); //@line 1213 "src/markdown.c"
      $i=$71; //@line 1213 "src/markdown.c"
      __label__ = 12; break; //@line 1214 "src/markdown.c"
    case 17: 
      var $73=$i; //@line 1216 "src/markdown.c"
      var $74=$3; //@line 1216 "src/markdown.c"
      var $75=(($73)|0)==(($74)|0); //@line 1216 "src/markdown.c"
      if ($75) { __label__ = 19; break; } else { __label__ = 18; break; } //@line 1216 "src/markdown.c"
    case 18: 
      var $77=$i; //@line 1216 "src/markdown.c"
      var $78=$2; //@line 1216 "src/markdown.c"
      var $79=(($78+$77)|0); //@line 1216 "src/markdown.c"
      var $80=HEAPU8[($79)]; //@line 1216 "src/markdown.c"
      var $81=(($80)&255); //@line 1216 "src/markdown.c"
      var $82=(($81)|0)!=125; //@line 1216 "src/markdown.c"
      if ($82) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 1216 "src/markdown.c"
    case 19: 
      $1=0; //@line 1217 "src/markdown.c"
      __label__ = 47; break; //@line 1217 "src/markdown.c"
    case 20: 
      __label__ = 21; break; //@line 1221 "src/markdown.c"
    case 21: 
      var $86=$syn_len; //@line 1221 "src/markdown.c"
      var $87=(($86)>>>0) > 0; //@line 1221 "src/markdown.c"
      if ($87) { __label__ = 22; break; } else { var $96 = 0;__label__ = 23; break; } //@line 1221 "src/markdown.c"
    case 22: 
      var $89=$syn_start; //@line 1221 "src/markdown.c"
      var $90=(($89)|0); //@line 1221 "src/markdown.c"
      var $91=HEAPU8[($90)]; //@line 1221 "src/markdown.c"
      var $92=(($91)&255); //@line 1221 "src/markdown.c"
      var $93=__isspace($92); //@line 1221 "src/markdown.c"
      var $94=(($93)|0)!=0; //@line 1221 "src/markdown.c"
      var $96 = $94;__label__ = 23; break;
    case 23: 
      var $96;
      if ($96) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $98=$syn_start; //@line 1222 "src/markdown.c"
      var $99=(($98+1)|0); //@line 1222 "src/markdown.c"
      $syn_start=$99; //@line 1222 "src/markdown.c"
      var $100=$syn_len; //@line 1222 "src/markdown.c"
      var $101=((($100)-(1))|0); //@line 1222 "src/markdown.c"
      $syn_len=$101; //@line 1222 "src/markdown.c"
      __label__ = 21; break; //@line 1223 "src/markdown.c"
    case 25: 
      __label__ = 26; break; //@line 1225 "src/markdown.c"
    case 26: 
      var $104=$syn_len; //@line 1225 "src/markdown.c"
      var $105=(($104)>>>0) > 0; //@line 1225 "src/markdown.c"
      if ($105) { __label__ = 27; break; } else { var $116 = 0;__label__ = 28; break; } //@line 1225 "src/markdown.c"
    case 27: 
      var $107=$syn_len; //@line 1225 "src/markdown.c"
      var $108=((($107)-(1))|0); //@line 1225 "src/markdown.c"
      var $109=$syn_start; //@line 1225 "src/markdown.c"
      var $110=(($109+$108)|0); //@line 1225 "src/markdown.c"
      var $111=HEAPU8[($110)]; //@line 1225 "src/markdown.c"
      var $112=(($111)&255); //@line 1225 "src/markdown.c"
      var $113=__isspace($112); //@line 1225 "src/markdown.c"
      var $114=(($113)|0)!=0; //@line 1225 "src/markdown.c"
      var $116 = $114;__label__ = 28; break;
    case 28: 
      var $116;
      if ($116) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: 
      var $118=$syn_len; //@line 1226 "src/markdown.c"
      var $119=((($118)-(1))|0); //@line 1226 "src/markdown.c"
      $syn_len=$119; //@line 1226 "src/markdown.c"
      __label__ = 26; break; //@line 1226 "src/markdown.c"
    case 30: 
      var $121=$i; //@line 1228 "src/markdown.c"
      var $122=((($121)+(1))|0); //@line 1228 "src/markdown.c"
      $i=$122; //@line 1228 "src/markdown.c"
      __label__ = 37; break; //@line 1229 "src/markdown.c"
    case 31: 
      __label__ = 32; break; //@line 1230 "src/markdown.c"
    case 32: 
      var $125=$i; //@line 1230 "src/markdown.c"
      var $126=$3; //@line 1230 "src/markdown.c"
      var $127=(($125)>>>0) < (($126)>>>0); //@line 1230 "src/markdown.c"
      if ($127) { __label__ = 33; break; } else { var $138 = 0;__label__ = 34; break; } //@line 1230 "src/markdown.c"
    case 33: 
      var $129=$i; //@line 1230 "src/markdown.c"
      var $130=$2; //@line 1230 "src/markdown.c"
      var $131=(($130+$129)|0); //@line 1230 "src/markdown.c"
      var $132=HEAPU8[($131)]; //@line 1230 "src/markdown.c"
      var $133=(($132)&255); //@line 1230 "src/markdown.c"
      var $134=__isspace($133); //@line 1230 "src/markdown.c"
      var $135=(($134)|0)!=0; //@line 1230 "src/markdown.c"
      var $136=$135 ^ 1; //@line 1230 "src/markdown.c"
      var $138 = $136;__label__ = 34; break;
    case 34: 
      var $138;
      if ($138) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: 
      var $140=$syn_len; //@line 1231 "src/markdown.c"
      var $141=((($140)+(1))|0); //@line 1231 "src/markdown.c"
      $syn_len=$141; //@line 1231 "src/markdown.c"
      var $142=$i; //@line 1231 "src/markdown.c"
      var $143=((($142)+(1))|0); //@line 1231 "src/markdown.c"
      $i=$143; //@line 1231 "src/markdown.c"
      __label__ = 32; break; //@line 1232 "src/markdown.c"
    case 36: 
      __label__ = 37; break;
    case 37: 
      var $146=$4; //@line 1235 "src/markdown.c"
      var $147=(($146)|0)!=0; //@line 1235 "src/markdown.c"
      if ($147) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 1235 "src/markdown.c"
    case 38: 
      var $149=$syn_start; //@line 1236 "src/markdown.c"
      var $150=$4; //@line 1236 "src/markdown.c"
      var $151=(($150)|0); //@line 1236 "src/markdown.c"
      HEAP32[(($151)>>2)]=$149; //@line 1236 "src/markdown.c"
      var $152=$syn_len; //@line 1237 "src/markdown.c"
      var $153=$4; //@line 1237 "src/markdown.c"
      var $154=(($153+4)|0); //@line 1237 "src/markdown.c"
      HEAP32[(($154)>>2)]=$152; //@line 1237 "src/markdown.c"
      __label__ = 39; break; //@line 1238 "src/markdown.c"
    case 39: 
      __label__ = 40; break; //@line 1240 "src/markdown.c"
    case 40: 
      var $157=$i; //@line 1240 "src/markdown.c"
      var $158=$3; //@line 1240 "src/markdown.c"
      var $159=(($157)>>>0) < (($158)>>>0); //@line 1240 "src/markdown.c"
      if ($159) { __label__ = 41; break; } else { var $168 = 0;__label__ = 42; break; } //@line 1240 "src/markdown.c"
    case 41: 
      var $161=$i; //@line 1240 "src/markdown.c"
      var $162=$2; //@line 1240 "src/markdown.c"
      var $163=(($162+$161)|0); //@line 1240 "src/markdown.c"
      var $164=HEAPU8[($163)]; //@line 1240 "src/markdown.c"
      var $165=(($164)&255); //@line 1240 "src/markdown.c"
      var $166=(($165)|0)!=10; //@line 1240 "src/markdown.c"
      var $168 = $166;__label__ = 42; break;
    case 42: 
      var $168;
      if ($168) { __label__ = 43; break; } else { __label__ = 46; break; }
    case 43: 
      var $170=$i; //@line 1241 "src/markdown.c"
      var $171=$2; //@line 1241 "src/markdown.c"
      var $172=(($171+$170)|0); //@line 1241 "src/markdown.c"
      var $173=HEAPU8[($172)]; //@line 1241 "src/markdown.c"
      var $174=(($173)&255); //@line 1241 "src/markdown.c"
      var $175=__isspace($174); //@line 1241 "src/markdown.c"
      var $176=(($175)|0)!=0; //@line 1241 "src/markdown.c"
      if ($176) { __label__ = 45; break; } else { __label__ = 44; break; } //@line 1241 "src/markdown.c"
    case 44: 
      $1=0; //@line 1242 "src/markdown.c"
      __label__ = 47; break; //@line 1242 "src/markdown.c"
    case 45: 
      var $179=$i; //@line 1244 "src/markdown.c"
      var $180=((($179)+(1))|0); //@line 1244 "src/markdown.c"
      $i=$180; //@line 1244 "src/markdown.c"
      __label__ = 40; break; //@line 1245 "src/markdown.c"
    case 46: 
      var $182=$i; //@line 1247 "src/markdown.c"
      var $183=((($182)+(1))|0); //@line 1247 "src/markdown.c"
      $1=$183; //@line 1247 "src/markdown.c"
      __label__ = 47; break; //@line 1247 "src/markdown.c"
    case 47: 
      var $185=$1; //@line 1248 "src/markdown.c"
      ;
      return $185; //@line 1248 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_is_codefence["X"]=1;

function _rndr_newbuf($rndr, $type) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $work;
      var $pool;
      $1=$rndr;
      $2=$type;
      $work=0; //@line 129 "src/markdown.c"
      var $3=$2; //@line 130 "src/markdown.c"
      var $4=$1; //@line 130 "src/markdown.c"
      var $5=(($4+396)|0); //@line 130 "src/markdown.c"
      var $6=(($5+($3)*(12))|0); //@line 130 "src/markdown.c"
      $pool=$6; //@line 130 "src/markdown.c"
      var $7=$pool; //@line 132 "src/markdown.c"
      var $8=(($7+4)|0); //@line 132 "src/markdown.c"
      var $9=HEAPU32[(($8)>>2)]; //@line 132 "src/markdown.c"
      var $10=$pool; //@line 132 "src/markdown.c"
      var $11=(($10+8)|0); //@line 132 "src/markdown.c"
      var $12=HEAPU32[(($11)>>2)]; //@line 132 "src/markdown.c"
      var $13=(($9)>>>0) < (($12)>>>0); //@line 132 "src/markdown.c"
      if ($13) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 132 "src/markdown.c"
    case 3: 
      var $15=$pool; //@line 132 "src/markdown.c"
      var $16=(($15+4)|0); //@line 132 "src/markdown.c"
      var $17=HEAP32[(($16)>>2)]; //@line 132 "src/markdown.c"
      var $18=$pool; //@line 132 "src/markdown.c"
      var $19=(($18)|0); //@line 132 "src/markdown.c"
      var $20=HEAP32[(($19)>>2)]; //@line 132 "src/markdown.c"
      var $21=(($20+($17<<2))|0); //@line 132 "src/markdown.c"
      var $22=HEAP32[(($21)>>2)]; //@line 132 "src/markdown.c"
      var $23=(($22)|0)!=0; //@line 132 "src/markdown.c"
      if ($23) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 132 "src/markdown.c"
    case 4: 
      var $25=$pool; //@line 134 "src/markdown.c"
      var $26=(($25+4)|0); //@line 134 "src/markdown.c"
      var $27=HEAP32[(($26)>>2)]; //@line 134 "src/markdown.c"
      var $28=((($27)+(1))|0); //@line 134 "src/markdown.c"
      HEAP32[(($26)>>2)]=$28; //@line 134 "src/markdown.c"
      var $29=$pool; //@line 134 "src/markdown.c"
      var $30=(($29)|0); //@line 134 "src/markdown.c"
      var $31=HEAP32[(($30)>>2)]; //@line 134 "src/markdown.c"
      var $32=(($31+($27<<2))|0); //@line 134 "src/markdown.c"
      var $33=HEAP32[(($32)>>2)]; //@line 134 "src/markdown.c"
      var $34=$33; //@line 134 "src/markdown.c"
      $work=$34; //@line 134 "src/markdown.c"
      var $35=$work; //@line 135 "src/markdown.c"
      var $36=(($35+4)|0); //@line 135 "src/markdown.c"
      HEAP32[(($36)>>2)]=0; //@line 135 "src/markdown.c"
      __label__ = 6; break; //@line 136 "src/markdown.c"
    case 5: 
      var $38=$2; //@line 137 "src/markdown.c"
      var $39=((_rndr_newbuf_buf_size+($38<<2))|0); //@line 137 "src/markdown.c"
      var $40=HEAP32[(($39)>>2)]; //@line 137 "src/markdown.c"
      var $41=_bufnew($40); //@line 137 "src/markdown.c"
      $work=$41; //@line 137 "src/markdown.c"
      var $42=$pool; //@line 138 "src/markdown.c"
      var $43=$work; //@line 138 "src/markdown.c"
      var $44=$43; //@line 138 "src/markdown.c"
      var $45=_stack_push($42, $44); //@line 138 "src/markdown.c"
      __label__ = 6; break;
    case 6: 
      var $47=$work; //@line 141 "src/markdown.c"
      ;
      return $47; //@line 141 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_newbuf["X"]=1;

function _parse_inline($ob, $rndr, $data, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $end;
      var $action;
      var $work=__stackBase__;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $i=0; //@line 355 "src/markdown.c"
      $end=0; //@line 355 "src/markdown.c"
      $action=0; //@line 356 "src/markdown.c"
      var $5=$work; //@line 357 "src/markdown.c"
      HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0; HEAP32[((($5)+(12))>>2)]=0; //@line 357 "src/markdown.c"
      var $6=$2; //@line 359 "src/markdown.c"
      var $7=(($6+396)|0); //@line 359 "src/markdown.c"
      var $8=(($7+12)|0); //@line 359 "src/markdown.c"
      var $9=(($8+4)|0); //@line 359 "src/markdown.c"
      var $10=HEAP32[(($9)>>2)]; //@line 359 "src/markdown.c"
      var $11=$2; //@line 359 "src/markdown.c"
      var $12=(($11+396)|0); //@line 359 "src/markdown.c"
      var $13=(($12)|0); //@line 359 "src/markdown.c"
      var $14=(($13+4)|0); //@line 359 "src/markdown.c"
      var $15=HEAP32[(($14)>>2)]; //@line 359 "src/markdown.c"
      var $16=((($10)+($15))|0); //@line 359 "src/markdown.c"
      var $17=$2; //@line 359 "src/markdown.c"
      var $18=(($17+424)|0); //@line 359 "src/markdown.c"
      var $19=HEAPU32[(($18)>>2)]; //@line 359 "src/markdown.c"
      var $20=(($16)>>>0) > (($19)>>>0); //@line 359 "src/markdown.c"
      if ($20) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 359 "src/markdown.c"
    case 3: 
      __label__ = 20; break; //@line 361 "src/markdown.c"
    case 4: 
      __label__ = 5; break; //@line 363 "src/markdown.c"
    case 5: 
      var $24=$i; //@line 363 "src/markdown.c"
      var $25=$4; //@line 363 "src/markdown.c"
      var $26=(($24)>>>0) < (($25)>>>0); //@line 363 "src/markdown.c"
      if ($26) { __label__ = 6; break; } else { __label__ = 20; break; } //@line 363 "src/markdown.c"
    case 6: 
      __label__ = 7; break; //@line 365 "src/markdown.c"
    case 7: 
      var $29=$end; //@line 365 "src/markdown.c"
      var $30=$4; //@line 365 "src/markdown.c"
      var $31=(($29)>>>0) < (($30)>>>0); //@line 365 "src/markdown.c"
      if ($31) { __label__ = 8; break; } else { var $45 = 0;__label__ = 9; break; } //@line 365 "src/markdown.c"
    case 8: 
      var $33=$end; //@line 365 "src/markdown.c"
      var $34=$3; //@line 365 "src/markdown.c"
      var $35=(($34+$33)|0); //@line 365 "src/markdown.c"
      var $36=HEAPU8[($35)]; //@line 365 "src/markdown.c"
      var $37=(($36)&255); //@line 365 "src/markdown.c"
      var $38=$2; //@line 365 "src/markdown.c"
      var $39=(($38+140)|0); //@line 365 "src/markdown.c"
      var $40=(($39+$37)|0); //@line 365 "src/markdown.c"
      var $41=HEAPU8[($40)]; //@line 365 "src/markdown.c"
      $action=$41; //@line 365 "src/markdown.c"
      var $42=(($41)&255); //@line 365 "src/markdown.c"
      var $43=(($42)|0)==0; //@line 365 "src/markdown.c"
      var $45 = $43;__label__ = 9; break;
    case 9: 
      var $45;
      if ($45) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $47=$end; //@line 366 "src/markdown.c"
      var $48=((($47)+(1))|0); //@line 366 "src/markdown.c"
      $end=$48; //@line 366 "src/markdown.c"
      __label__ = 7; break; //@line 367 "src/markdown.c"
    case 11: 
      var $50=$2; //@line 369 "src/markdown.c"
      var $51=(($50)|0); //@line 369 "src/markdown.c"
      var $52=(($51+92)|0); //@line 369 "src/markdown.c"
      var $53=HEAP32[(($52)>>2)]; //@line 369 "src/markdown.c"
      var $54=(($53)|0)!=0; //@line 369 "src/markdown.c"
      if ($54) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 369 "src/markdown.c"
    case 12: 
      var $56=$3; //@line 370 "src/markdown.c"
      var $57=$i; //@line 370 "src/markdown.c"
      var $58=(($56+$57)|0); //@line 370 "src/markdown.c"
      var $59=(($work)|0); //@line 370 "src/markdown.c"
      HEAP32[(($59)>>2)]=$58; //@line 370 "src/markdown.c"
      var $60=$end; //@line 371 "src/markdown.c"
      var $61=$i; //@line 371 "src/markdown.c"
      var $62=((($60)-($61))|0); //@line 371 "src/markdown.c"
      var $63=(($work+4)|0); //@line 371 "src/markdown.c"
      HEAP32[(($63)>>2)]=$62; //@line 371 "src/markdown.c"
      var $64=$2; //@line 372 "src/markdown.c"
      var $65=(($64)|0); //@line 372 "src/markdown.c"
      var $66=(($65+92)|0); //@line 372 "src/markdown.c"
      var $67=HEAP32[(($66)>>2)]; //@line 372 "src/markdown.c"
      var $68=$1; //@line 372 "src/markdown.c"
      var $69=$2; //@line 372 "src/markdown.c"
      var $70=(($69+104)|0); //@line 372 "src/markdown.c"
      var $71=HEAP32[(($70)>>2)]; //@line 372 "src/markdown.c"
      FUNCTION_TABLE[$67]($68, $work, $71); //@line 372 "src/markdown.c"
      __label__ = 14; break; //@line 373 "src/markdown.c"
    case 13: 
      var $73=$1; //@line 375 "src/markdown.c"
      var $74=$3; //@line 375 "src/markdown.c"
      var $75=$i; //@line 375 "src/markdown.c"
      var $76=(($74+$75)|0); //@line 375 "src/markdown.c"
      var $77=$end; //@line 375 "src/markdown.c"
      var $78=$i; //@line 375 "src/markdown.c"
      var $79=((($77)-($78))|0); //@line 375 "src/markdown.c"
      _bufput($73, $76, $79); //@line 375 "src/markdown.c"
      __label__ = 14; break;
    case 14: 
      var $81=$end; //@line 377 "src/markdown.c"
      var $82=$4; //@line 377 "src/markdown.c"
      var $83=(($81)>>>0) >= (($82)>>>0); //@line 377 "src/markdown.c"
      if ($83) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 377 "src/markdown.c"
    case 15: 
      __label__ = 20; break; //@line 377 "src/markdown.c"
    case 16: 
      var $86=$end; //@line 378 "src/markdown.c"
      $i=$86; //@line 378 "src/markdown.c"
      var $87=$action; //@line 380 "src/markdown.c"
      var $88=(($87)&255); //@line 380 "src/markdown.c"
      var $89=((_markdown_char_ptrs+($88<<2))|0); //@line 380 "src/markdown.c"
      var $90=HEAP32[(($89)>>2)]; //@line 380 "src/markdown.c"
      var $91=$1; //@line 380 "src/markdown.c"
      var $92=$2; //@line 380 "src/markdown.c"
      var $93=$3; //@line 380 "src/markdown.c"
      var $94=$i; //@line 380 "src/markdown.c"
      var $95=(($93+$94)|0); //@line 380 "src/markdown.c"
      var $96=$i; //@line 380 "src/markdown.c"
      var $97=$4; //@line 380 "src/markdown.c"
      var $98=$i; //@line 380 "src/markdown.c"
      var $99=((($97)-($98))|0); //@line 380 "src/markdown.c"
      var $100=FUNCTION_TABLE[$90]($91, $92, $95, $96, $99); //@line 380 "src/markdown.c"
      $end=$100; //@line 380 "src/markdown.c"
      var $101=$end; //@line 381 "src/markdown.c"
      var $102=(($101)|0)!=0; //@line 381 "src/markdown.c"
      if ($102) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 381 "src/markdown.c"
    case 17: 
      var $104=$i; //@line 382 "src/markdown.c"
      var $105=((($104)+(1))|0); //@line 382 "src/markdown.c"
      $end=$105; //@line 382 "src/markdown.c"
      __label__ = 19; break; //@line 382 "src/markdown.c"
    case 18: 
      var $107=$end; //@line 384 "src/markdown.c"
      var $108=$i; //@line 384 "src/markdown.c"
      var $109=((($108)+($107))|0); //@line 384 "src/markdown.c"
      $i=$109; //@line 384 "src/markdown.c"
      var $110=$i; //@line 385 "src/markdown.c"
      $end=$110; //@line 385 "src/markdown.c"
      __label__ = 19; break;
    case 19: 
      __label__ = 5; break; //@line 387 "src/markdown.c"
    case 20: 
      STACKTOP = __stackBase__;
      return; //@line 388 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_inline["X"]=1;

function _char_emphasis($ob, $rndr, $data, $offset, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $c;
      var $ret;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$4; //@line 596 "src/markdown.c"
      var $8=(($7)|0); //@line 596 "src/markdown.c"
      var $9=HEAP8[($8)]; //@line 596 "src/markdown.c"
      $c=$9; //@line 596 "src/markdown.c"
      var $10=$3; //@line 599 "src/markdown.c"
      var $11=(($10+420)|0); //@line 599 "src/markdown.c"
      var $12=HEAP32[(($11)>>2)]; //@line 599 "src/markdown.c"
      var $13=$12 & 1; //@line 599 "src/markdown.c"
      var $14=(($13)|0)!=0; //@line 599 "src/markdown.c"
      if ($14) { __label__ = 3; break; } else { __label__ = 8; break; } //@line 599 "src/markdown.c"
    case 3: 
      var $16=$5; //@line 600 "src/markdown.c"
      var $17=(($16)>>>0) > 0; //@line 600 "src/markdown.c"
      if ($17) { __label__ = 4; break; } else { __label__ = 7; break; } //@line 600 "src/markdown.c"
    case 4: 
      var $19=$4; //@line 600 "src/markdown.c"
      var $20=((($19)-(1))|0); //@line 600 "src/markdown.c"
      var $21=HEAPU8[($20)]; //@line 600 "src/markdown.c"
      var $22=(($21)&255); //@line 600 "src/markdown.c"
      var $23=__isspace($22); //@line 600 "src/markdown.c"
      var $24=(($23)|0)!=0; //@line 600 "src/markdown.c"
      if ($24) { __label__ = 7; break; } else { __label__ = 5; break; } //@line 600 "src/markdown.c"
    case 5: 
      var $26=$4; //@line 600 "src/markdown.c"
      var $27=((($26)-(1))|0); //@line 600 "src/markdown.c"
      var $28=HEAPU8[($27)]; //@line 600 "src/markdown.c"
      var $29=(($28)&255); //@line 600 "src/markdown.c"
      var $30=(($29)|0)!=62; //@line 600 "src/markdown.c"
      if ($30) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 600 "src/markdown.c"
    case 6: 
      $1=0; //@line 601 "src/markdown.c"
      __label__ = 32; break; //@line 601 "src/markdown.c"
    case 7: 
      __label__ = 8; break; //@line 602 "src/markdown.c"
    case 8: 
      var $34=$6; //@line 604 "src/markdown.c"
      var $35=(($34)>>>0) > 2; //@line 604 "src/markdown.c"
      if ($35) { __label__ = 9; break; } else { __label__ = 15; break; } //@line 604 "src/markdown.c"
    case 9: 
      var $37=$4; //@line 604 "src/markdown.c"
      var $38=(($37+1)|0); //@line 604 "src/markdown.c"
      var $39=HEAPU8[($38)]; //@line 604 "src/markdown.c"
      var $40=(($39)&255); //@line 604 "src/markdown.c"
      var $41=$c; //@line 604 "src/markdown.c"
      var $42=(($41)&255); //@line 604 "src/markdown.c"
      var $43=(($40)|0)!=(($42)|0); //@line 604 "src/markdown.c"
      if ($43) { __label__ = 10; break; } else { __label__ = 15; break; } //@line 604 "src/markdown.c"
    case 10: 
      var $45=$c; //@line 607 "src/markdown.c"
      var $46=(($45)&255); //@line 607 "src/markdown.c"
      var $47=(($46)|0)==126; //@line 607 "src/markdown.c"
      if ($47) { __label__ = 13; break; } else { __label__ = 11; break; } //@line 607 "src/markdown.c"
    case 11: 
      var $49=$4; //@line 607 "src/markdown.c"
      var $50=(($49+1)|0); //@line 607 "src/markdown.c"
      var $51=HEAPU8[($50)]; //@line 607 "src/markdown.c"
      var $52=(($51)&255); //@line 607 "src/markdown.c"
      var $53=__isspace($52); //@line 607 "src/markdown.c"
      var $54=(($53)|0)!=0; //@line 607 "src/markdown.c"
      if ($54) { __label__ = 13; break; } else { __label__ = 12; break; } //@line 607 "src/markdown.c"
    case 12: 
      var $56=$2; //@line 607 "src/markdown.c"
      var $57=$3; //@line 607 "src/markdown.c"
      var $58=$4; //@line 607 "src/markdown.c"
      var $59=(($58+1)|0); //@line 607 "src/markdown.c"
      var $60=$6; //@line 607 "src/markdown.c"
      var $61=((($60)-(1))|0); //@line 607 "src/markdown.c"
      var $62=$c; //@line 607 "src/markdown.c"
      var $63=_parse_emph1($56, $57, $59, $61, $62); //@line 607 "src/markdown.c"
      $ret=$63; //@line 607 "src/markdown.c"
      var $64=(($63)|0)==0; //@line 607 "src/markdown.c"
      if ($64) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 607 "src/markdown.c"
    case 13: 
      $1=0; //@line 608 "src/markdown.c"
      __label__ = 32; break; //@line 608 "src/markdown.c"
    case 14: 
      var $67=$ret; //@line 610 "src/markdown.c"
      var $68=((($67)+(1))|0); //@line 610 "src/markdown.c"
      $1=$68; //@line 610 "src/markdown.c"
      __label__ = 32; break; //@line 610 "src/markdown.c"
    case 15: 
      var $70=$6; //@line 613 "src/markdown.c"
      var $71=(($70)>>>0) > 3; //@line 613 "src/markdown.c"
      if ($71) { __label__ = 16; break; } else { __label__ = 22; break; } //@line 613 "src/markdown.c"
    case 16: 
      var $73=$4; //@line 613 "src/markdown.c"
      var $74=(($73+1)|0); //@line 613 "src/markdown.c"
      var $75=HEAPU8[($74)]; //@line 613 "src/markdown.c"
      var $76=(($75)&255); //@line 613 "src/markdown.c"
      var $77=$c; //@line 613 "src/markdown.c"
      var $78=(($77)&255); //@line 613 "src/markdown.c"
      var $79=(($76)|0)==(($78)|0); //@line 613 "src/markdown.c"
      if ($79) { __label__ = 17; break; } else { __label__ = 22; break; } //@line 613 "src/markdown.c"
    case 17: 
      var $81=$4; //@line 613 "src/markdown.c"
      var $82=(($81+2)|0); //@line 613 "src/markdown.c"
      var $83=HEAPU8[($82)]; //@line 613 "src/markdown.c"
      var $84=(($83)&255); //@line 613 "src/markdown.c"
      var $85=$c; //@line 613 "src/markdown.c"
      var $86=(($85)&255); //@line 613 "src/markdown.c"
      var $87=(($84)|0)!=(($86)|0); //@line 613 "src/markdown.c"
      if ($87) { __label__ = 18; break; } else { __label__ = 22; break; } //@line 613 "src/markdown.c"
    case 18: 
      var $89=$4; //@line 614 "src/markdown.c"
      var $90=(($89+2)|0); //@line 614 "src/markdown.c"
      var $91=HEAPU8[($90)]; //@line 614 "src/markdown.c"
      var $92=(($91)&255); //@line 614 "src/markdown.c"
      var $93=__isspace($92); //@line 614 "src/markdown.c"
      var $94=(($93)|0)!=0; //@line 614 "src/markdown.c"
      if ($94) { __label__ = 20; break; } else { __label__ = 19; break; } //@line 614 "src/markdown.c"
    case 19: 
      var $96=$2; //@line 614 "src/markdown.c"
      var $97=$3; //@line 614 "src/markdown.c"
      var $98=$4; //@line 614 "src/markdown.c"
      var $99=(($98+2)|0); //@line 614 "src/markdown.c"
      var $100=$6; //@line 614 "src/markdown.c"
      var $101=((($100)-(2))|0); //@line 614 "src/markdown.c"
      var $102=$c; //@line 614 "src/markdown.c"
      var $103=_parse_emph2($96, $97, $99, $101, $102); //@line 614 "src/markdown.c"
      $ret=$103; //@line 614 "src/markdown.c"
      var $104=(($103)|0)==0; //@line 614 "src/markdown.c"
      if ($104) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 614 "src/markdown.c"
    case 20: 
      $1=0; //@line 615 "src/markdown.c"
      __label__ = 32; break; //@line 615 "src/markdown.c"
    case 21: 
      var $107=$ret; //@line 617 "src/markdown.c"
      var $108=((($107)+(2))|0); //@line 617 "src/markdown.c"
      $1=$108; //@line 617 "src/markdown.c"
      __label__ = 32; break; //@line 617 "src/markdown.c"
    case 22: 
      var $110=$6; //@line 620 "src/markdown.c"
      var $111=(($110)>>>0) > 4; //@line 620 "src/markdown.c"
      if ($111) { __label__ = 23; break; } else { __label__ = 31; break; } //@line 620 "src/markdown.c"
    case 23: 
      var $113=$4; //@line 620 "src/markdown.c"
      var $114=(($113+1)|0); //@line 620 "src/markdown.c"
      var $115=HEAPU8[($114)]; //@line 620 "src/markdown.c"
      var $116=(($115)&255); //@line 620 "src/markdown.c"
      var $117=$c; //@line 620 "src/markdown.c"
      var $118=(($117)&255); //@line 620 "src/markdown.c"
      var $119=(($116)|0)==(($118)|0); //@line 620 "src/markdown.c"
      if ($119) { __label__ = 24; break; } else { __label__ = 31; break; } //@line 620 "src/markdown.c"
    case 24: 
      var $121=$4; //@line 620 "src/markdown.c"
      var $122=(($121+2)|0); //@line 620 "src/markdown.c"
      var $123=HEAPU8[($122)]; //@line 620 "src/markdown.c"
      var $124=(($123)&255); //@line 620 "src/markdown.c"
      var $125=$c; //@line 620 "src/markdown.c"
      var $126=(($125)&255); //@line 620 "src/markdown.c"
      var $127=(($124)|0)==(($126)|0); //@line 620 "src/markdown.c"
      if ($127) { __label__ = 25; break; } else { __label__ = 31; break; } //@line 620 "src/markdown.c"
    case 25: 
      var $129=$4; //@line 620 "src/markdown.c"
      var $130=(($129+3)|0); //@line 620 "src/markdown.c"
      var $131=HEAPU8[($130)]; //@line 620 "src/markdown.c"
      var $132=(($131)&255); //@line 620 "src/markdown.c"
      var $133=$c; //@line 620 "src/markdown.c"
      var $134=(($133)&255); //@line 620 "src/markdown.c"
      var $135=(($132)|0)!=(($134)|0); //@line 620 "src/markdown.c"
      if ($135) { __label__ = 26; break; } else { __label__ = 31; break; } //@line 620 "src/markdown.c"
    case 26: 
      var $137=$c; //@line 621 "src/markdown.c"
      var $138=(($137)&255); //@line 621 "src/markdown.c"
      var $139=(($138)|0)==126; //@line 621 "src/markdown.c"
      if ($139) { __label__ = 29; break; } else { __label__ = 27; break; } //@line 621 "src/markdown.c"
    case 27: 
      var $141=$4; //@line 621 "src/markdown.c"
      var $142=(($141+3)|0); //@line 621 "src/markdown.c"
      var $143=HEAPU8[($142)]; //@line 621 "src/markdown.c"
      var $144=(($143)&255); //@line 621 "src/markdown.c"
      var $145=__isspace($144); //@line 621 "src/markdown.c"
      var $146=(($145)|0)!=0; //@line 621 "src/markdown.c"
      if ($146) { __label__ = 29; break; } else { __label__ = 28; break; } //@line 621 "src/markdown.c"
    case 28: 
      var $148=$2; //@line 621 "src/markdown.c"
      var $149=$3; //@line 621 "src/markdown.c"
      var $150=$4; //@line 621 "src/markdown.c"
      var $151=(($150+3)|0); //@line 621 "src/markdown.c"
      var $152=$6; //@line 621 "src/markdown.c"
      var $153=((($152)-(3))|0); //@line 621 "src/markdown.c"
      var $154=$c; //@line 621 "src/markdown.c"
      var $155=_parse_emph3($148, $149, $151, $153, $154); //@line 621 "src/markdown.c"
      $ret=$155; //@line 621 "src/markdown.c"
      var $156=(($155)|0)==0; //@line 621 "src/markdown.c"
      if ($156) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 621 "src/markdown.c"
    case 29: 
      $1=0; //@line 622 "src/markdown.c"
      __label__ = 32; break; //@line 622 "src/markdown.c"
    case 30: 
      var $159=$ret; //@line 624 "src/markdown.c"
      var $160=((($159)+(3))|0); //@line 624 "src/markdown.c"
      $1=$160; //@line 624 "src/markdown.c"
      __label__ = 32; break; //@line 624 "src/markdown.c"
    case 31: 
      $1=0; //@line 627 "src/markdown.c"
      __label__ = 32; break; //@line 627 "src/markdown.c"
    case 32: 
      var $163=$1; //@line 628 "src/markdown.c"
      ;
      return $163; //@line 628 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_emphasis["X"]=1;

function _char_codespan($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $end;
      var $nb;
      var $i;
      var $f_begin;
      var $f_end;
      var $work=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      $nb=0; //@line 650 "src/markdown.c"
      __label__ = 3; break; //@line 653 "src/markdown.c"
    case 3: 
      var $8=$nb; //@line 653 "src/markdown.c"
      var $9=$6; //@line 653 "src/markdown.c"
      var $10=(($8)>>>0) < (($9)>>>0); //@line 653 "src/markdown.c"
      if ($10) { __label__ = 4; break; } else { var $19 = 0;__label__ = 5; break; } //@line 653 "src/markdown.c"
    case 4: 
      var $12=$nb; //@line 653 "src/markdown.c"
      var $13=$4; //@line 653 "src/markdown.c"
      var $14=(($13+$12)|0); //@line 653 "src/markdown.c"
      var $15=HEAPU8[($14)]; //@line 653 "src/markdown.c"
      var $16=(($15)&255); //@line 653 "src/markdown.c"
      var $17=(($16)|0)==96; //@line 653 "src/markdown.c"
      var $19 = $17;__label__ = 5; break;
    case 5: 
      var $19;
      if ($19) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $21=$nb; //@line 654 "src/markdown.c"
      var $22=((($21)+(1))|0); //@line 654 "src/markdown.c"
      $nb=$22; //@line 654 "src/markdown.c"
      __label__ = 3; break; //@line 654 "src/markdown.c"
    case 7: 
      $i=0; //@line 657 "src/markdown.c"
      var $24=$nb; //@line 658 "src/markdown.c"
      $end=$24; //@line 658 "src/markdown.c"
      __label__ = 8; break; //@line 658 "src/markdown.c"
    case 8: 
      var $26=$end; //@line 658 "src/markdown.c"
      var $27=$6; //@line 658 "src/markdown.c"
      var $28=(($26)>>>0) < (($27)>>>0); //@line 658 "src/markdown.c"
      if ($28) { __label__ = 9; break; } else { var $34 = 0;__label__ = 10; break; } //@line 658 "src/markdown.c"
    case 9: 
      var $30=$i; //@line 658 "src/markdown.c"
      var $31=$nb; //@line 658 "src/markdown.c"
      var $32=(($30)>>>0) < (($31)>>>0); //@line 658 "src/markdown.c"
      var $34 = $32;__label__ = 10; break;
    case 10: 
      var $34;
      if ($34) { __label__ = 11; break; } else { __label__ = 16; break; }
    case 11: 
      var $36=$end; //@line 659 "src/markdown.c"
      var $37=$4; //@line 659 "src/markdown.c"
      var $38=(($37+$36)|0); //@line 659 "src/markdown.c"
      var $39=HEAPU8[($38)]; //@line 659 "src/markdown.c"
      var $40=(($39)&255); //@line 659 "src/markdown.c"
      var $41=(($40)|0)==96; //@line 659 "src/markdown.c"
      if ($41) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 659 "src/markdown.c"
    case 12: 
      var $43=$i; //@line 659 "src/markdown.c"
      var $44=((($43)+(1))|0); //@line 659 "src/markdown.c"
      $i=$44; //@line 659 "src/markdown.c"
      __label__ = 14; break; //@line 659 "src/markdown.c"
    case 13: 
      $i=0; //@line 660 "src/markdown.c"
      __label__ = 14; break;
    case 14: 
      __label__ = 15; break; //@line 661 "src/markdown.c"
    case 15: 
      var $48=$end; //@line 658 "src/markdown.c"
      var $49=((($48)+(1))|0); //@line 658 "src/markdown.c"
      $end=$49; //@line 658 "src/markdown.c"
      __label__ = 8; break; //@line 658 "src/markdown.c"
    case 16: 
      var $51=$i; //@line 663 "src/markdown.c"
      var $52=$nb; //@line 663 "src/markdown.c"
      var $53=(($51)>>>0) < (($52)>>>0); //@line 663 "src/markdown.c"
      if ($53) { __label__ = 17; break; } else { __label__ = 19; break; } //@line 663 "src/markdown.c"
    case 17: 
      var $55=$end; //@line 663 "src/markdown.c"
      var $56=$6; //@line 663 "src/markdown.c"
      var $57=(($55)>>>0) >= (($56)>>>0); //@line 663 "src/markdown.c"
      if ($57) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 663 "src/markdown.c"
    case 18: 
      $1=0; //@line 664 "src/markdown.c"
      __label__ = 37; break; //@line 664 "src/markdown.c"
    case 19: 
      var $60=$nb; //@line 667 "src/markdown.c"
      $f_begin=$60; //@line 667 "src/markdown.c"
      __label__ = 20; break; //@line 668 "src/markdown.c"
    case 20: 
      var $62=$f_begin; //@line 668 "src/markdown.c"
      var $63=$end; //@line 668 "src/markdown.c"
      var $64=(($62)>>>0) < (($63)>>>0); //@line 668 "src/markdown.c"
      if ($64) { __label__ = 21; break; } else { var $73 = 0;__label__ = 22; break; } //@line 668 "src/markdown.c"
    case 21: 
      var $66=$f_begin; //@line 668 "src/markdown.c"
      var $67=$4; //@line 668 "src/markdown.c"
      var $68=(($67+$66)|0); //@line 668 "src/markdown.c"
      var $69=HEAPU8[($68)]; //@line 668 "src/markdown.c"
      var $70=(($69)&255); //@line 668 "src/markdown.c"
      var $71=(($70)|0)==32; //@line 668 "src/markdown.c"
      var $73 = $71;__label__ = 22; break;
    case 22: 
      var $73;
      if ($73) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: 
      var $75=$f_begin; //@line 669 "src/markdown.c"
      var $76=((($75)+(1))|0); //@line 669 "src/markdown.c"
      $f_begin=$76; //@line 669 "src/markdown.c"
      __label__ = 20; break; //@line 669 "src/markdown.c"
    case 24: 
      var $78=$end; //@line 671 "src/markdown.c"
      var $79=$nb; //@line 671 "src/markdown.c"
      var $80=((($78)-($79))|0); //@line 671 "src/markdown.c"
      $f_end=$80; //@line 671 "src/markdown.c"
      __label__ = 25; break; //@line 672 "src/markdown.c"
    case 25: 
      var $82=$f_end; //@line 672 "src/markdown.c"
      var $83=$nb; //@line 672 "src/markdown.c"
      var $84=(($82)>>>0) > (($83)>>>0); //@line 672 "src/markdown.c"
      if ($84) { __label__ = 26; break; } else { var $94 = 0;__label__ = 27; break; } //@line 672 "src/markdown.c"
    case 26: 
      var $86=$f_end; //@line 672 "src/markdown.c"
      var $87=((($86)-(1))|0); //@line 672 "src/markdown.c"
      var $88=$4; //@line 672 "src/markdown.c"
      var $89=(($88+$87)|0); //@line 672 "src/markdown.c"
      var $90=HEAPU8[($89)]; //@line 672 "src/markdown.c"
      var $91=(($90)&255); //@line 672 "src/markdown.c"
      var $92=(($91)|0)==32; //@line 672 "src/markdown.c"
      var $94 = $92;__label__ = 27; break;
    case 27: 
      var $94;
      if ($94) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: 
      var $96=$f_end; //@line 673 "src/markdown.c"
      var $97=((($96)-(1))|0); //@line 673 "src/markdown.c"
      $f_end=$97; //@line 673 "src/markdown.c"
      __label__ = 25; break; //@line 673 "src/markdown.c"
    case 29: 
      var $99=$f_begin; //@line 676 "src/markdown.c"
      var $100=$f_end; //@line 676 "src/markdown.c"
      var $101=(($99)>>>0) < (($100)>>>0); //@line 676 "src/markdown.c"
      if ($101) { __label__ = 30; break; } else { __label__ = 33; break; } //@line 676 "src/markdown.c"
    case 30: 
      var $103=(($work)|0); //@line 677 "src/markdown.c"
      var $104=$4; //@line 677 "src/markdown.c"
      var $105=$f_begin; //@line 677 "src/markdown.c"
      var $106=(($104+$105)|0); //@line 677 "src/markdown.c"
      HEAP32[(($103)>>2)]=$106; //@line 677 "src/markdown.c"
      var $107=(($work+4)|0); //@line 677 "src/markdown.c"
      var $108=$f_end; //@line 677 "src/markdown.c"
      var $109=$f_begin; //@line 677 "src/markdown.c"
      var $110=((($108)-($109))|0); //@line 677 "src/markdown.c"
      HEAP32[(($107)>>2)]=$110; //@line 677 "src/markdown.c"
      var $111=(($work+8)|0); //@line 677 "src/markdown.c"
      HEAP32[(($111)>>2)]=0; //@line 677 "src/markdown.c"
      var $112=(($work+12)|0); //@line 677 "src/markdown.c"
      HEAP32[(($112)>>2)]=0; //@line 677 "src/markdown.c"
      var $113=$3; //@line 678 "src/markdown.c"
      var $114=(($113)|0); //@line 678 "src/markdown.c"
      var $115=(($114+48)|0); //@line 678 "src/markdown.c"
      var $116=HEAP32[(($115)>>2)]; //@line 678 "src/markdown.c"
      var $117=$2; //@line 678 "src/markdown.c"
      var $118=$3; //@line 678 "src/markdown.c"
      var $119=(($118+104)|0); //@line 678 "src/markdown.c"
      var $120=HEAP32[(($119)>>2)]; //@line 678 "src/markdown.c"
      var $121=FUNCTION_TABLE[$116]($117, $work, $120); //@line 678 "src/markdown.c"
      var $122=(($121)|0)!=0; //@line 678 "src/markdown.c"
      if ($122) { __label__ = 32; break; } else { __label__ = 31; break; } //@line 678 "src/markdown.c"
    case 31: 
      $end=0; //@line 679 "src/markdown.c"
      __label__ = 32; break; //@line 679 "src/markdown.c"
    case 32: 
      __label__ = 36; break; //@line 680 "src/markdown.c"
    case 33: 
      var $126=$3; //@line 681 "src/markdown.c"
      var $127=(($126)|0); //@line 681 "src/markdown.c"
      var $128=(($127+48)|0); //@line 681 "src/markdown.c"
      var $129=HEAP32[(($128)>>2)]; //@line 681 "src/markdown.c"
      var $130=$2; //@line 681 "src/markdown.c"
      var $131=$3; //@line 681 "src/markdown.c"
      var $132=(($131+104)|0); //@line 681 "src/markdown.c"
      var $133=HEAP32[(($132)>>2)]; //@line 681 "src/markdown.c"
      var $134=FUNCTION_TABLE[$129]($130, 0, $133); //@line 681 "src/markdown.c"
      var $135=(($134)|0)!=0; //@line 681 "src/markdown.c"
      if ($135) { __label__ = 35; break; } else { __label__ = 34; break; } //@line 681 "src/markdown.c"
    case 34: 
      $end=0; //@line 682 "src/markdown.c"
      __label__ = 35; break; //@line 682 "src/markdown.c"
    case 35: 
      __label__ = 36; break;
    case 36: 
      var $139=$end; //@line 685 "src/markdown.c"
      $1=$139; //@line 685 "src/markdown.c"
      __label__ = 37; break; //@line 685 "src/markdown.c"
    case 37: 
      var $141=$1; //@line 686 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $141; //@line 686 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_codespan["X"]=1;

function _char_linebreak($ob, $rndr, $data, $offset, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$5; //@line 635 "src/markdown.c"
      var $8=(($7)>>>0) < 2; //@line 635 "src/markdown.c"
      if ($8) { __label__ = 5; break; } else { __label__ = 3; break; } //@line 635 "src/markdown.c"
    case 3: 
      var $10=$4; //@line 635 "src/markdown.c"
      var $11=((($10)-(1))|0); //@line 635 "src/markdown.c"
      var $12=HEAPU8[($11)]; //@line 635 "src/markdown.c"
      var $13=(($12)&255); //@line 635 "src/markdown.c"
      var $14=(($13)|0)!=32; //@line 635 "src/markdown.c"
      if ($14) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 635 "src/markdown.c"
    case 4: 
      var $16=$4; //@line 635 "src/markdown.c"
      var $17=((($16)-(2))|0); //@line 635 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 635 "src/markdown.c"
      var $19=(($18)&255); //@line 635 "src/markdown.c"
      var $20=(($19)|0)!=32; //@line 635 "src/markdown.c"
      if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 635 "src/markdown.c"
    case 5: 
      $1=0; //@line 636 "src/markdown.c"
      __label__ = 12; break; //@line 636 "src/markdown.c"
    case 6: 
      __label__ = 7; break; //@line 639 "src/markdown.c"
    case 7: 
      var $24=$2; //@line 639 "src/markdown.c"
      var $25=(($24+4)|0); //@line 639 "src/markdown.c"
      var $26=HEAP32[(($25)>>2)]; //@line 639 "src/markdown.c"
      var $27=(($26)|0)!=0; //@line 639 "src/markdown.c"
      if ($27) { __label__ = 8; break; } else { var $41 = 0;__label__ = 9; break; } //@line 639 "src/markdown.c"
    case 8: 
      var $29=$2; //@line 639 "src/markdown.c"
      var $30=(($29+4)|0); //@line 639 "src/markdown.c"
      var $31=HEAP32[(($30)>>2)]; //@line 639 "src/markdown.c"
      var $32=((($31)-(1))|0); //@line 639 "src/markdown.c"
      var $33=$2; //@line 639 "src/markdown.c"
      var $34=(($33)|0); //@line 639 "src/markdown.c"
      var $35=HEAP32[(($34)>>2)]; //@line 639 "src/markdown.c"
      var $36=(($35+$32)|0); //@line 639 "src/markdown.c"
      var $37=HEAPU8[($36)]; //@line 639 "src/markdown.c"
      var $38=(($37)&255); //@line 639 "src/markdown.c"
      var $39=(($38)|0)==32; //@line 639 "src/markdown.c"
      var $41 = $39;__label__ = 9; break;
    case 9: 
      var $41;
      if ($41) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $43=$2; //@line 640 "src/markdown.c"
      var $44=(($43+4)|0); //@line 640 "src/markdown.c"
      var $45=HEAP32[(($44)>>2)]; //@line 640 "src/markdown.c"
      var $46=((($45)-(1))|0); //@line 640 "src/markdown.c"
      HEAP32[(($44)>>2)]=$46; //@line 640 "src/markdown.c"
      __label__ = 7; break; //@line 640 "src/markdown.c"
    case 11: 
      var $48=$3; //@line 642 "src/markdown.c"
      var $49=(($48)|0); //@line 642 "src/markdown.c"
      var $50=(($49+64)|0); //@line 642 "src/markdown.c"
      var $51=HEAP32[(($50)>>2)]; //@line 642 "src/markdown.c"
      var $52=$2; //@line 642 "src/markdown.c"
      var $53=$3; //@line 642 "src/markdown.c"
      var $54=(($53+104)|0); //@line 642 "src/markdown.c"
      var $55=HEAP32[(($54)>>2)]; //@line 642 "src/markdown.c"
      var $56=FUNCTION_TABLE[$51]($52, $55); //@line 642 "src/markdown.c"
      var $57=(($56)|0)!=0; //@line 642 "src/markdown.c"
      var $58=$57 ? 1 : 0; //@line 642 "src/markdown.c"
      $1=$58; //@line 642 "src/markdown.c"
      __label__ = 12; break; //@line 642 "src/markdown.c"
    case 12: 
      var $60=$1; //@line 643 "src/markdown.c"
      ;
      return $60; //@line 643 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_linebreak["X"]=1;

function _char_link($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 32; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $is_img;
      var $level;
      var $i;
      var $txt_e;
      var $link_b;
      var $link_e;
      var $title_b;
      var $title_e;
      var $content;
      var $link;
      var $title;
      var $u_link;
      var $org_work_size;
      var $text_has_nl;
      var $ret;
      var $in_title;
      var $qtype;
      var $id=__stackBase__;
      var $lr;
      var $b;
      var $j;
      var $id1=(__stackBase__)+(16);
      var $lr2;
      var $b3;
      var $j4;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$offset;
      $5=$size;
      var $6=$4; //@line 844 "src/markdown.c"
      var $7=(($6)|0)!=0; //@line 844 "src/markdown.c"
      if ($7) { __label__ = 3; break; } else { var $15 = 0;__label__ = 4; break; } //@line 844 "src/markdown.c"
    case 3: 
      var $9=$3; //@line 844 "src/markdown.c"
      var $10=((($9)-(1))|0); //@line 844 "src/markdown.c"
      var $11=HEAPU8[($10)]; //@line 844 "src/markdown.c"
      var $12=(($11)&255); //@line 844 "src/markdown.c"
      var $13=(($12)|0)==33; //@line 844 "src/markdown.c"
      var $15 = $13;__label__ = 4; break;
    case 4: 
      var $15;
      var $16=(($15)&1);
      $is_img=$16;
      $i=1; //@line 845 "src/markdown.c"
      $link_b=0; //@line 845 "src/markdown.c"
      $link_e=0; //@line 845 "src/markdown.c"
      $title_b=0; //@line 845 "src/markdown.c"
      $title_e=0; //@line 845 "src/markdown.c"
      $content=0; //@line 846 "src/markdown.c"
      $link=0; //@line 847 "src/markdown.c"
      $title=0; //@line 848 "src/markdown.c"
      $u_link=0; //@line 849 "src/markdown.c"
      var $17=$2; //@line 850 "src/markdown.c"
      var $18=(($17+396)|0); //@line 850 "src/markdown.c"
      var $19=(($18+12)|0); //@line 850 "src/markdown.c"
      var $20=(($19+4)|0); //@line 850 "src/markdown.c"
      var $21=HEAP32[(($20)>>2)]; //@line 850 "src/markdown.c"
      $org_work_size=$21; //@line 850 "src/markdown.c"
      $text_has_nl=0; //@line 851 "src/markdown.c"
      $ret=0; //@line 851 "src/markdown.c"
      $in_title=0; //@line 852 "src/markdown.c"
      $qtype=0; //@line 852 "src/markdown.c"
      var $22=$is_img; //@line 855 "src/markdown.c"
      var $23=(($22)|0)!=0; //@line 855 "src/markdown.c"
      if ($23) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 855 "src/markdown.c"
    case 5: 
      var $25=$2; //@line 855 "src/markdown.c"
      var $26=(($25)|0); //@line 855 "src/markdown.c"
      var $27=(($26+60)|0); //@line 855 "src/markdown.c"
      var $28=HEAP32[(($27)>>2)]; //@line 855 "src/markdown.c"
      var $29=(($28)|0)!=0; //@line 855 "src/markdown.c"
      if ($29) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 855 "src/markdown.c"
    case 6: 
      var $31=$is_img; //@line 855 "src/markdown.c"
      var $32=(($31)|0)!=0; //@line 855 "src/markdown.c"
      if ($32) { __label__ = 9; break; } else { __label__ = 7; break; } //@line 855 "src/markdown.c"
    case 7: 
      var $34=$2; //@line 855 "src/markdown.c"
      var $35=(($34)|0); //@line 855 "src/markdown.c"
      var $36=(($35+68)|0); //@line 855 "src/markdown.c"
      var $37=HEAP32[(($36)>>2)]; //@line 855 "src/markdown.c"
      var $38=(($37)|0)!=0; //@line 855 "src/markdown.c"
      if ($38) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 855 "src/markdown.c"
    case 8: 
      __label__ = 154; break; //@line 856 "src/markdown.c"
    case 9: 
      $level=1; //@line 859 "src/markdown.c"
      __label__ = 10; break; //@line 859 "src/markdown.c"
    case 10: 
      var $42=$i; //@line 859 "src/markdown.c"
      var $43=$5; //@line 859 "src/markdown.c"
      var $44=(($42)>>>0) < (($43)>>>0); //@line 859 "src/markdown.c"
      if ($44) { __label__ = 11; break; } else { __label__ = 26; break; } //@line 859 "src/markdown.c"
    case 11: 
      var $46=$i; //@line 860 "src/markdown.c"
      var $47=$3; //@line 860 "src/markdown.c"
      var $48=(($47+$46)|0); //@line 860 "src/markdown.c"
      var $49=HEAPU8[($48)]; //@line 860 "src/markdown.c"
      var $50=(($49)&255); //@line 860 "src/markdown.c"
      var $51=(($50)|0)==10; //@line 860 "src/markdown.c"
      if ($51) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 860 "src/markdown.c"
    case 12: 
      $text_has_nl=1; //@line 861 "src/markdown.c"
      __label__ = 24; break; //@line 861 "src/markdown.c"
    case 13: 
      var $54=$i; //@line 863 "src/markdown.c"
      var $55=((($54)-(1))|0); //@line 863 "src/markdown.c"
      var $56=$3; //@line 863 "src/markdown.c"
      var $57=(($56+$55)|0); //@line 863 "src/markdown.c"
      var $58=HEAPU8[($57)]; //@line 863 "src/markdown.c"
      var $59=(($58)&255); //@line 863 "src/markdown.c"
      var $60=(($59)|0)==92; //@line 863 "src/markdown.c"
      if ($60) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 863 "src/markdown.c"
    case 14: 
      __label__ = 25; break; //@line 864 "src/markdown.c"
    case 15: 
      var $63=$i; //@line 866 "src/markdown.c"
      var $64=$3; //@line 866 "src/markdown.c"
      var $65=(($64+$63)|0); //@line 866 "src/markdown.c"
      var $66=HEAPU8[($65)]; //@line 866 "src/markdown.c"
      var $67=(($66)&255); //@line 866 "src/markdown.c"
      var $68=(($67)|0)==91; //@line 866 "src/markdown.c"
      if ($68) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 866 "src/markdown.c"
    case 16: 
      var $70=$level; //@line 867 "src/markdown.c"
      var $71=((($70)+(1))|0); //@line 867 "src/markdown.c"
      $level=$71; //@line 867 "src/markdown.c"
      __label__ = 22; break; //@line 867 "src/markdown.c"
    case 17: 
      var $73=$i; //@line 869 "src/markdown.c"
      var $74=$3; //@line 869 "src/markdown.c"
      var $75=(($74+$73)|0); //@line 869 "src/markdown.c"
      var $76=HEAPU8[($75)]; //@line 869 "src/markdown.c"
      var $77=(($76)&255); //@line 869 "src/markdown.c"
      var $78=(($77)|0)==93; //@line 869 "src/markdown.c"
      if ($78) { __label__ = 18; break; } else { __label__ = 21; break; } //@line 869 "src/markdown.c"
    case 18: 
      var $80=$level; //@line 870 "src/markdown.c"
      var $81=((($80)-(1))|0); //@line 870 "src/markdown.c"
      $level=$81; //@line 870 "src/markdown.c"
      var $82=$level; //@line 871 "src/markdown.c"
      var $83=(($82)|0) <= 0; //@line 871 "src/markdown.c"
      if ($83) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 871 "src/markdown.c"
    case 19: 
      __label__ = 26; break; //@line 872 "src/markdown.c"
    case 20: 
      __label__ = 21; break; //@line 873 "src/markdown.c"
    case 21: 
      __label__ = 22; break;
    case 22: 
      __label__ = 23; break;
    case 23: 
      __label__ = 24; break;
    case 24: 
      __label__ = 25; break; //@line 874 "src/markdown.c"
    case 25: 
      var $91=$i; //@line 859 "src/markdown.c"
      var $92=((($91)+(1))|0); //@line 859 "src/markdown.c"
      $i=$92; //@line 859 "src/markdown.c"
      __label__ = 10; break; //@line 859 "src/markdown.c"
    case 26: 
      var $94=$i; //@line 876 "src/markdown.c"
      var $95=$5; //@line 876 "src/markdown.c"
      var $96=(($94)>>>0) >= (($95)>>>0); //@line 876 "src/markdown.c"
      if ($96) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 876 "src/markdown.c"
    case 27: 
      __label__ = 154; break; //@line 877 "src/markdown.c"
    case 28: 
      var $99=$i; //@line 879 "src/markdown.c"
      $txt_e=$99; //@line 879 "src/markdown.c"
      var $100=$i; //@line 880 "src/markdown.c"
      var $101=((($100)+(1))|0); //@line 880 "src/markdown.c"
      $i=$101; //@line 880 "src/markdown.c"
      __label__ = 29; break; //@line 884 "src/markdown.c"
    case 29: 
      var $103=$i; //@line 884 "src/markdown.c"
      var $104=$5; //@line 884 "src/markdown.c"
      var $105=(($103)>>>0) < (($104)>>>0); //@line 884 "src/markdown.c"
      if ($105) { __label__ = 30; break; } else { var $115 = 0;__label__ = 31; break; } //@line 884 "src/markdown.c"
    case 30: 
      var $107=$i; //@line 884 "src/markdown.c"
      var $108=$3; //@line 884 "src/markdown.c"
      var $109=(($108+$107)|0); //@line 884 "src/markdown.c"
      var $110=HEAPU8[($109)]; //@line 884 "src/markdown.c"
      var $111=(($110)&255); //@line 884 "src/markdown.c"
      var $112=__isspace($111); //@line 884 "src/markdown.c"
      var $113=(($112)|0)!=0; //@line 884 "src/markdown.c"
      var $115 = $113;__label__ = 31; break;
    case 31: 
      var $115;
      if ($115) { __label__ = 32; break; } else { __label__ = 33; break; }
    case 32: 
      var $117=$i; //@line 885 "src/markdown.c"
      var $118=((($117)+(1))|0); //@line 885 "src/markdown.c"
      $i=$118; //@line 885 "src/markdown.c"
      __label__ = 29; break; //@line 885 "src/markdown.c"
    case 33: 
      var $120=$i; //@line 888 "src/markdown.c"
      var $121=$5; //@line 888 "src/markdown.c"
      var $122=(($120)>>>0) < (($121)>>>0); //@line 888 "src/markdown.c"
      if ($122) { __label__ = 34; break; } else { __label__ = 97; break; } //@line 888 "src/markdown.c"
    case 34: 
      var $124=$i; //@line 888 "src/markdown.c"
      var $125=$3; //@line 888 "src/markdown.c"
      var $126=(($125+$124)|0); //@line 888 "src/markdown.c"
      var $127=HEAPU8[($126)]; //@line 888 "src/markdown.c"
      var $128=(($127)&255); //@line 888 "src/markdown.c"
      var $129=(($128)|0)==40; //@line 888 "src/markdown.c"
      if ($129) { __label__ = 35; break; } else { __label__ = 97; break; } //@line 888 "src/markdown.c"
    case 35: 
      var $131=$i; //@line 890 "src/markdown.c"
      var $132=((($131)+(1))|0); //@line 890 "src/markdown.c"
      $i=$132; //@line 890 "src/markdown.c"
      __label__ = 36; break; //@line 892 "src/markdown.c"
    case 36: 
      var $134=$i; //@line 892 "src/markdown.c"
      var $135=$5; //@line 892 "src/markdown.c"
      var $136=(($134)>>>0) < (($135)>>>0); //@line 892 "src/markdown.c"
      if ($136) { __label__ = 37; break; } else { var $146 = 0;__label__ = 38; break; } //@line 892 "src/markdown.c"
    case 37: 
      var $138=$i; //@line 892 "src/markdown.c"
      var $139=$3; //@line 892 "src/markdown.c"
      var $140=(($139+$138)|0); //@line 892 "src/markdown.c"
      var $141=HEAPU8[($140)]; //@line 892 "src/markdown.c"
      var $142=(($141)&255); //@line 892 "src/markdown.c"
      var $143=__isspace($142); //@line 892 "src/markdown.c"
      var $144=(($143)|0)!=0; //@line 892 "src/markdown.c"
      var $146 = $144;__label__ = 38; break;
    case 38: 
      var $146;
      if ($146) { __label__ = 39; break; } else { __label__ = 40; break; }
    case 39: 
      var $148=$i; //@line 893 "src/markdown.c"
      var $149=((($148)+(1))|0); //@line 893 "src/markdown.c"
      $i=$149; //@line 893 "src/markdown.c"
      __label__ = 36; break; //@line 893 "src/markdown.c"
    case 40: 
      var $151=$i; //@line 895 "src/markdown.c"
      $link_b=$151; //@line 895 "src/markdown.c"
      __label__ = 41; break; //@line 898 "src/markdown.c"
    case 41: 
      var $153=$i; //@line 898 "src/markdown.c"
      var $154=$5; //@line 898 "src/markdown.c"
      var $155=(($153)>>>0) < (($154)>>>0); //@line 898 "src/markdown.c"
      if ($155) { __label__ = 42; break; } else { __label__ = 55; break; } //@line 898 "src/markdown.c"
    case 42: 
      var $157=$i; //@line 899 "src/markdown.c"
      var $158=$3; //@line 899 "src/markdown.c"
      var $159=(($158+$157)|0); //@line 899 "src/markdown.c"
      var $160=HEAPU8[($159)]; //@line 899 "src/markdown.c"
      var $161=(($160)&255); //@line 899 "src/markdown.c"
      var $162=(($161)|0)==92; //@line 899 "src/markdown.c"
      if ($162) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 899 "src/markdown.c"
    case 43: 
      var $164=$i; //@line 899 "src/markdown.c"
      var $165=((($164)+(2))|0); //@line 899 "src/markdown.c"
      $i=$165; //@line 899 "src/markdown.c"
      __label__ = 54; break; //@line 899 "src/markdown.c"
    case 44: 
      var $167=$i; //@line 900 "src/markdown.c"
      var $168=$3; //@line 900 "src/markdown.c"
      var $169=(($168+$167)|0); //@line 900 "src/markdown.c"
      var $170=HEAPU8[($169)]; //@line 900 "src/markdown.c"
      var $171=(($170)&255); //@line 900 "src/markdown.c"
      var $172=(($171)|0)==41; //@line 900 "src/markdown.c"
      if ($172) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 900 "src/markdown.c"
    case 45: 
      __label__ = 55; break; //@line 900 "src/markdown.c"
    case 46: 
      var $175=$i; //@line 901 "src/markdown.c"
      var $176=(($175)>>>0) >= 1; //@line 901 "src/markdown.c"
      if ($176) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 901 "src/markdown.c"
    case 47: 
      var $178=$i; //@line 901 "src/markdown.c"
      var $179=((($178)-(1))|0); //@line 901 "src/markdown.c"
      var $180=$3; //@line 901 "src/markdown.c"
      var $181=(($180+$179)|0); //@line 901 "src/markdown.c"
      var $182=HEAPU8[($181)]; //@line 901 "src/markdown.c"
      var $183=(($182)&255); //@line 901 "src/markdown.c"
      var $184=__isspace($183); //@line 901 "src/markdown.c"
      var $185=(($184)|0)!=0; //@line 901 "src/markdown.c"
      if ($185) { __label__ = 48; break; } else { __label__ = 51; break; } //@line 901 "src/markdown.c"
    case 48: 
      var $187=$i; //@line 901 "src/markdown.c"
      var $188=$3; //@line 901 "src/markdown.c"
      var $189=(($188+$187)|0); //@line 901 "src/markdown.c"
      var $190=HEAPU8[($189)]; //@line 901 "src/markdown.c"
      var $191=(($190)&255); //@line 901 "src/markdown.c"
      var $192=(($191)|0)==39; //@line 901 "src/markdown.c"
      if ($192) { __label__ = 50; break; } else { __label__ = 49; break; } //@line 901 "src/markdown.c"
    case 49: 
      var $194=$i; //@line 901 "src/markdown.c"
      var $195=$3; //@line 901 "src/markdown.c"
      var $196=(($195+$194)|0); //@line 901 "src/markdown.c"
      var $197=HEAPU8[($196)]; //@line 901 "src/markdown.c"
      var $198=(($197)&255); //@line 901 "src/markdown.c"
      var $199=(($198)|0)==34; //@line 901 "src/markdown.c"
      if ($199) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 901 "src/markdown.c"
    case 50: 
      __label__ = 55; break; //@line 901 "src/markdown.c"
    case 51: 
      var $202=$i; //@line 902 "src/markdown.c"
      var $203=((($202)+(1))|0); //@line 902 "src/markdown.c"
      $i=$203; //@line 902 "src/markdown.c"
      __label__ = 52; break;
    case 52: 
      __label__ = 53; break;
    case 53: 
      __label__ = 54; break;
    case 54: 
      __label__ = 41; break; //@line 903 "src/markdown.c"
    case 55: 
      var $208=$i; //@line 905 "src/markdown.c"
      var $209=$5; //@line 905 "src/markdown.c"
      var $210=(($208)>>>0) >= (($209)>>>0); //@line 905 "src/markdown.c"
      if ($210) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 905 "src/markdown.c"
    case 56: 
      __label__ = 154; break; //@line 905 "src/markdown.c"
    case 57: 
      var $213=$i; //@line 906 "src/markdown.c"
      $link_e=$213; //@line 906 "src/markdown.c"
      var $214=$i; //@line 909 "src/markdown.c"
      var $215=$3; //@line 909 "src/markdown.c"
      var $216=(($215+$214)|0); //@line 909 "src/markdown.c"
      var $217=HEAPU8[($216)]; //@line 909 "src/markdown.c"
      var $218=(($217)&255); //@line 909 "src/markdown.c"
      var $219=(($218)|0)==39; //@line 909 "src/markdown.c"
      if ($219) { __label__ = 59; break; } else { __label__ = 58; break; } //@line 909 "src/markdown.c"
    case 58: 
      var $221=$i; //@line 909 "src/markdown.c"
      var $222=$3; //@line 909 "src/markdown.c"
      var $223=(($222+$221)|0); //@line 909 "src/markdown.c"
      var $224=HEAPU8[($223)]; //@line 909 "src/markdown.c"
      var $225=(($224)&255); //@line 909 "src/markdown.c"
      var $226=(($225)|0)==34; //@line 909 "src/markdown.c"
      if ($226) { __label__ = 59; break; } else { __label__ = 83; break; } //@line 909 "src/markdown.c"
    case 59: 
      var $228=$i; //@line 910 "src/markdown.c"
      var $229=$3; //@line 910 "src/markdown.c"
      var $230=(($229+$228)|0); //@line 910 "src/markdown.c"
      var $231=HEAPU8[($230)]; //@line 910 "src/markdown.c"
      var $232=(($231)&255); //@line 910 "src/markdown.c"
      $qtype=$232; //@line 910 "src/markdown.c"
      $in_title=1; //@line 911 "src/markdown.c"
      var $233=$i; //@line 912 "src/markdown.c"
      var $234=((($233)+(1))|0); //@line 912 "src/markdown.c"
      $i=$234; //@line 912 "src/markdown.c"
      var $235=$i; //@line 913 "src/markdown.c"
      $title_b=$235; //@line 913 "src/markdown.c"
      __label__ = 60; break; //@line 915 "src/markdown.c"
    case 60: 
      var $237=$i; //@line 915 "src/markdown.c"
      var $238=$5; //@line 915 "src/markdown.c"
      var $239=(($237)>>>0) < (($238)>>>0); //@line 915 "src/markdown.c"
      if ($239) { __label__ = 61; break; } else { __label__ = 72; break; } //@line 915 "src/markdown.c"
    case 61: 
      var $241=$i; //@line 916 "src/markdown.c"
      var $242=$3; //@line 916 "src/markdown.c"
      var $243=(($242+$241)|0); //@line 916 "src/markdown.c"
      var $244=HEAPU8[($243)]; //@line 916 "src/markdown.c"
      var $245=(($244)&255); //@line 916 "src/markdown.c"
      var $246=(($245)|0)==92; //@line 916 "src/markdown.c"
      if ($246) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 916 "src/markdown.c"
    case 62: 
      var $248=$i; //@line 916 "src/markdown.c"
      var $249=((($248)+(2))|0); //@line 916 "src/markdown.c"
      $i=$249; //@line 916 "src/markdown.c"
      __label__ = 71; break; //@line 916 "src/markdown.c"
    case 63: 
      var $251=$i; //@line 917 "src/markdown.c"
      var $252=$3; //@line 917 "src/markdown.c"
      var $253=(($252+$251)|0); //@line 917 "src/markdown.c"
      var $254=HEAPU8[($253)]; //@line 917 "src/markdown.c"
      var $255=(($254)&255); //@line 917 "src/markdown.c"
      var $256=$qtype; //@line 917 "src/markdown.c"
      var $257=(($255)|0)==(($256)|0); //@line 917 "src/markdown.c"
      if ($257) { __label__ = 64; break; } else { __label__ = 65; break; } //@line 917 "src/markdown.c"
    case 64: 
      $in_title=0; //@line 917 "src/markdown.c"
      var $259=$i; //@line 917 "src/markdown.c"
      var $260=((($259)+(1))|0); //@line 917 "src/markdown.c"
      $i=$260; //@line 917 "src/markdown.c"
      __label__ = 70; break; //@line 917 "src/markdown.c"
    case 65: 
      var $262=$i; //@line 918 "src/markdown.c"
      var $263=$3; //@line 918 "src/markdown.c"
      var $264=(($263+$262)|0); //@line 918 "src/markdown.c"
      var $265=HEAPU8[($264)]; //@line 918 "src/markdown.c"
      var $266=(($265)&255); //@line 918 "src/markdown.c"
      var $267=(($266)|0)==41; //@line 918 "src/markdown.c"
      if ($267) { __label__ = 66; break; } else { __label__ = 68; break; } //@line 918 "src/markdown.c"
    case 66: 
      var $269=$in_title; //@line 918 "src/markdown.c"
      var $270=(($269)|0)!=0; //@line 918 "src/markdown.c"
      if ($270) { __label__ = 68; break; } else { __label__ = 67; break; } //@line 918 "src/markdown.c"
    case 67: 
      __label__ = 72; break; //@line 918 "src/markdown.c"
    case 68: 
      var $273=$i; //@line 919 "src/markdown.c"
      var $274=((($273)+(1))|0); //@line 919 "src/markdown.c"
      $i=$274; //@line 919 "src/markdown.c"
      __label__ = 69; break;
    case 69: 
      __label__ = 70; break;
    case 70: 
      __label__ = 71; break;
    case 71: 
      __label__ = 60; break; //@line 920 "src/markdown.c"
    case 72: 
      var $279=$i; //@line 922 "src/markdown.c"
      var $280=$5; //@line 922 "src/markdown.c"
      var $281=(($279)>>>0) >= (($280)>>>0); //@line 922 "src/markdown.c"
      if ($281) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 922 "src/markdown.c"
    case 73: 
      __label__ = 154; break; //@line 922 "src/markdown.c"
    case 74: 
      var $284=$i; //@line 925 "src/markdown.c"
      var $285=((($284)-(1))|0); //@line 925 "src/markdown.c"
      $title_e=$285; //@line 925 "src/markdown.c"
      __label__ = 75; break; //@line 926 "src/markdown.c"
    case 75: 
      var $287=$title_e; //@line 926 "src/markdown.c"
      var $288=$title_b; //@line 926 "src/markdown.c"
      var $289=(($287)>>>0) > (($288)>>>0); //@line 926 "src/markdown.c"
      if ($289) { __label__ = 76; break; } else { var $299 = 0;__label__ = 77; break; } //@line 926 "src/markdown.c"
    case 76: 
      var $291=$title_e; //@line 926 "src/markdown.c"
      var $292=$3; //@line 926 "src/markdown.c"
      var $293=(($292+$291)|0); //@line 926 "src/markdown.c"
      var $294=HEAPU8[($293)]; //@line 926 "src/markdown.c"
      var $295=(($294)&255); //@line 926 "src/markdown.c"
      var $296=__isspace($295); //@line 926 "src/markdown.c"
      var $297=(($296)|0)!=0; //@line 926 "src/markdown.c"
      var $299 = $297;__label__ = 77; break;
    case 77: 
      var $299;
      if ($299) { __label__ = 78; break; } else { __label__ = 79; break; }
    case 78: 
      var $301=$title_e; //@line 927 "src/markdown.c"
      var $302=((($301)-(1))|0); //@line 927 "src/markdown.c"
      $title_e=$302; //@line 927 "src/markdown.c"
      __label__ = 75; break; //@line 927 "src/markdown.c"
    case 79: 
      var $304=$title_e; //@line 930 "src/markdown.c"
      var $305=$3; //@line 930 "src/markdown.c"
      var $306=(($305+$304)|0); //@line 930 "src/markdown.c"
      var $307=HEAPU8[($306)]; //@line 930 "src/markdown.c"
      var $308=(($307)&255); //@line 930 "src/markdown.c"
      var $309=(($308)|0)!=39; //@line 930 "src/markdown.c"
      if ($309) { __label__ = 80; break; } else { __label__ = 82; break; } //@line 930 "src/markdown.c"
    case 80: 
      var $311=$title_e; //@line 930 "src/markdown.c"
      var $312=$3; //@line 930 "src/markdown.c"
      var $313=(($312+$311)|0); //@line 930 "src/markdown.c"
      var $314=HEAPU8[($313)]; //@line 930 "src/markdown.c"
      var $315=(($314)&255); //@line 930 "src/markdown.c"
      var $316=(($315)|0)!=34; //@line 930 "src/markdown.c"
      if ($316) { __label__ = 81; break; } else { __label__ = 82; break; } //@line 930 "src/markdown.c"
    case 81: 
      $title_e=0; //@line 931 "src/markdown.c"
      $title_b=0; //@line 931 "src/markdown.c"
      var $318=$i; //@line 932 "src/markdown.c"
      $link_e=$318; //@line 932 "src/markdown.c"
      __label__ = 82; break; //@line 933 "src/markdown.c"
    case 82: 
      __label__ = 83; break; //@line 934 "src/markdown.c"
    case 83: 
      __label__ = 84; break; //@line 937 "src/markdown.c"
    case 84: 
      var $322=$link_e; //@line 937 "src/markdown.c"
      var $323=$link_b; //@line 937 "src/markdown.c"
      var $324=(($322)>>>0) > (($323)>>>0); //@line 937 "src/markdown.c"
      if ($324) { __label__ = 85; break; } else { var $335 = 0;__label__ = 86; break; } //@line 937 "src/markdown.c"
    case 85: 
      var $326=$link_e; //@line 937 "src/markdown.c"
      var $327=((($326)-(1))|0); //@line 937 "src/markdown.c"
      var $328=$3; //@line 937 "src/markdown.c"
      var $329=(($328+$327)|0); //@line 937 "src/markdown.c"
      var $330=HEAPU8[($329)]; //@line 937 "src/markdown.c"
      var $331=(($330)&255); //@line 937 "src/markdown.c"
      var $332=__isspace($331); //@line 937 "src/markdown.c"
      var $333=(($332)|0)!=0; //@line 937 "src/markdown.c"
      var $335 = $333;__label__ = 86; break;
    case 86: 
      var $335;
      if ($335) { __label__ = 87; break; } else { __label__ = 88; break; }
    case 87: 
      var $337=$link_e; //@line 938 "src/markdown.c"
      var $338=((($337)-(1))|0); //@line 938 "src/markdown.c"
      $link_e=$338; //@line 938 "src/markdown.c"
      __label__ = 84; break; //@line 938 "src/markdown.c"
    case 88: 
      var $340=$link_b; //@line 941 "src/markdown.c"
      var $341=$3; //@line 941 "src/markdown.c"
      var $342=(($341+$340)|0); //@line 941 "src/markdown.c"
      var $343=HEAPU8[($342)]; //@line 941 "src/markdown.c"
      var $344=(($343)&255); //@line 941 "src/markdown.c"
      var $345=(($344)|0)==60; //@line 941 "src/markdown.c"
      if ($345) { __label__ = 89; break; } else { __label__ = 90; break; } //@line 941 "src/markdown.c"
    case 89: 
      var $347=$link_b; //@line 941 "src/markdown.c"
      var $348=((($347)+(1))|0); //@line 941 "src/markdown.c"
      $link_b=$348; //@line 941 "src/markdown.c"
      __label__ = 90; break; //@line 941 "src/markdown.c"
    case 90: 
      var $350=$link_e; //@line 942 "src/markdown.c"
      var $351=((($350)-(1))|0); //@line 942 "src/markdown.c"
      var $352=$3; //@line 942 "src/markdown.c"
      var $353=(($352+$351)|0); //@line 942 "src/markdown.c"
      var $354=HEAPU8[($353)]; //@line 942 "src/markdown.c"
      var $355=(($354)&255); //@line 942 "src/markdown.c"
      var $356=(($355)|0)==62; //@line 942 "src/markdown.c"
      if ($356) { __label__ = 91; break; } else { __label__ = 92; break; } //@line 942 "src/markdown.c"
    case 91: 
      var $358=$link_e; //@line 942 "src/markdown.c"
      var $359=((($358)-(1))|0); //@line 942 "src/markdown.c"
      $link_e=$359; //@line 942 "src/markdown.c"
      __label__ = 92; break; //@line 942 "src/markdown.c"
    case 92: 
      var $361=$link_e; //@line 945 "src/markdown.c"
      var $362=$link_b; //@line 945 "src/markdown.c"
      var $363=(($361)>>>0) > (($362)>>>0); //@line 945 "src/markdown.c"
      if ($363) { __label__ = 93; break; } else { __label__ = 94; break; } //@line 945 "src/markdown.c"
    case 93: 
      var $365=$2; //@line 946 "src/markdown.c"
      var $366=_rndr_newbuf($365, 1); //@line 946 "src/markdown.c"
      $link=$366; //@line 946 "src/markdown.c"
      var $367=$link; //@line 947 "src/markdown.c"
      var $368=$3; //@line 947 "src/markdown.c"
      var $369=$link_b; //@line 947 "src/markdown.c"
      var $370=(($368+$369)|0); //@line 947 "src/markdown.c"
      var $371=$link_e; //@line 947 "src/markdown.c"
      var $372=$link_b; //@line 947 "src/markdown.c"
      var $373=((($371)-($372))|0); //@line 947 "src/markdown.c"
      _bufput($367, $370, $373); //@line 947 "src/markdown.c"
      __label__ = 94; break; //@line 948 "src/markdown.c"
    case 94: 
      var $375=$title_e; //@line 950 "src/markdown.c"
      var $376=$title_b; //@line 950 "src/markdown.c"
      var $377=(($375)>>>0) > (($376)>>>0); //@line 950 "src/markdown.c"
      if ($377) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 950 "src/markdown.c"
    case 95: 
      var $379=$2; //@line 951 "src/markdown.c"
      var $380=_rndr_newbuf($379, 1); //@line 951 "src/markdown.c"
      $title=$380; //@line 951 "src/markdown.c"
      var $381=$title; //@line 952 "src/markdown.c"
      var $382=$3; //@line 952 "src/markdown.c"
      var $383=$title_b; //@line 952 "src/markdown.c"
      var $384=(($382+$383)|0); //@line 952 "src/markdown.c"
      var $385=$title_e; //@line 952 "src/markdown.c"
      var $386=$title_b; //@line 952 "src/markdown.c"
      var $387=((($385)-($386))|0); //@line 952 "src/markdown.c"
      _bufput($381, $384, $387); //@line 952 "src/markdown.c"
      __label__ = 96; break; //@line 953 "src/markdown.c"
    case 96: 
      var $389=$i; //@line 955 "src/markdown.c"
      var $390=((($389)+(1))|0); //@line 955 "src/markdown.c"
      $i=$390; //@line 955 "src/markdown.c"
      __label__ = 140; break; //@line 956 "src/markdown.c"
    case 97: 
      var $392=$i; //@line 959 "src/markdown.c"
      var $393=$5; //@line 959 "src/markdown.c"
      var $394=(($392)>>>0) < (($393)>>>0); //@line 959 "src/markdown.c"
      if ($394) { __label__ = 98; break; } else { __label__ = 124; break; } //@line 959 "src/markdown.c"
    case 98: 
      var $396=$i; //@line 959 "src/markdown.c"
      var $397=$3; //@line 959 "src/markdown.c"
      var $398=(($397+$396)|0); //@line 959 "src/markdown.c"
      var $399=HEAPU8[($398)]; //@line 959 "src/markdown.c"
      var $400=(($399)&255); //@line 959 "src/markdown.c"
      var $401=(($400)|0)==91; //@line 959 "src/markdown.c"
      if ($401) { __label__ = 99; break; } else { __label__ = 124; break; } //@line 959 "src/markdown.c"
    case 99: 
      var $403=$id; //@line 960 "src/markdown.c"
      HEAP32[(($403)>>2)]=0; HEAP32[((($403)+(4))>>2)]=0; HEAP32[((($403)+(8))>>2)]=0; HEAP32[((($403)+(12))>>2)]=0; //@line 960 "src/markdown.c"
      var $404=$i; //@line 964 "src/markdown.c"
      var $405=((($404)+(1))|0); //@line 964 "src/markdown.c"
      $i=$405; //@line 964 "src/markdown.c"
      var $406=$i; //@line 965 "src/markdown.c"
      $link_b=$406; //@line 965 "src/markdown.c"
      __label__ = 100; break; //@line 966 "src/markdown.c"
    case 100: 
      var $408=$i; //@line 966 "src/markdown.c"
      var $409=$5; //@line 966 "src/markdown.c"
      var $410=(($408)>>>0) < (($409)>>>0); //@line 966 "src/markdown.c"
      if ($410) { __label__ = 101; break; } else { var $419 = 0;__label__ = 102; break; } //@line 966 "src/markdown.c"
    case 101: 
      var $412=$i; //@line 966 "src/markdown.c"
      var $413=$3; //@line 966 "src/markdown.c"
      var $414=(($413+$412)|0); //@line 966 "src/markdown.c"
      var $415=HEAPU8[($414)]; //@line 966 "src/markdown.c"
      var $416=(($415)&255); //@line 966 "src/markdown.c"
      var $417=(($416)|0)!=93; //@line 966 "src/markdown.c"
      var $419 = $417;__label__ = 102; break;
    case 102: 
      var $419;
      if ($419) { __label__ = 103; break; } else { __label__ = 104; break; }
    case 103: 
      var $421=$i; //@line 966 "src/markdown.c"
      var $422=((($421)+(1))|0); //@line 966 "src/markdown.c"
      $i=$422; //@line 966 "src/markdown.c"
      __label__ = 100; break; //@line 966 "src/markdown.c"
    case 104: 
      var $424=$i; //@line 967 "src/markdown.c"
      var $425=$5; //@line 967 "src/markdown.c"
      var $426=(($424)>>>0) >= (($425)>>>0); //@line 967 "src/markdown.c"
      if ($426) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 967 "src/markdown.c"
    case 105: 
      __label__ = 154; break; //@line 967 "src/markdown.c"
    case 106: 
      var $429=$i; //@line 968 "src/markdown.c"
      $link_e=$429; //@line 968 "src/markdown.c"
      var $430=$link_b; //@line 971 "src/markdown.c"
      var $431=$link_e; //@line 971 "src/markdown.c"
      var $432=(($430)|0)==(($431)|0); //@line 971 "src/markdown.c"
      if ($432) { __label__ = 107; break; } else { __label__ = 120; break; } //@line 971 "src/markdown.c"
    case 107: 
      var $434=$text_has_nl; //@line 972 "src/markdown.c"
      var $435=(($434)|0)!=0; //@line 972 "src/markdown.c"
      if ($435) { __label__ = 108; break; } else { __label__ = 118; break; } //@line 972 "src/markdown.c"
    case 108: 
      var $437=$2; //@line 973 "src/markdown.c"
      var $438=_rndr_newbuf($437, 1); //@line 973 "src/markdown.c"
      $b=$438; //@line 973 "src/markdown.c"
      $j=1; //@line 976 "src/markdown.c"
      __label__ = 109; break; //@line 976 "src/markdown.c"
    case 109: 
      var $440=$j; //@line 976 "src/markdown.c"
      var $441=$txt_e; //@line 976 "src/markdown.c"
      var $442=(($440)>>>0) < (($441)>>>0); //@line 976 "src/markdown.c"
      if ($442) { __label__ = 110; break; } else { __label__ = 117; break; } //@line 976 "src/markdown.c"
    case 110: 
      var $444=$j; //@line 977 "src/markdown.c"
      var $445=$3; //@line 977 "src/markdown.c"
      var $446=(($445+$444)|0); //@line 977 "src/markdown.c"
      var $447=HEAPU8[($446)]; //@line 977 "src/markdown.c"
      var $448=(($447)&255); //@line 977 "src/markdown.c"
      var $449=(($448)|0)!=10; //@line 977 "src/markdown.c"
      if ($449) { __label__ = 111; break; } else { __label__ = 112; break; } //@line 977 "src/markdown.c"
    case 111: 
      var $451=$b; //@line 978 "src/markdown.c"
      var $452=$j; //@line 978 "src/markdown.c"
      var $453=$3; //@line 978 "src/markdown.c"
      var $454=(($453+$452)|0); //@line 978 "src/markdown.c"
      var $455=HEAPU8[($454)]; //@line 978 "src/markdown.c"
      var $456=(($455)&255); //@line 978 "src/markdown.c"
      _bufputc($451, $456); //@line 978 "src/markdown.c"
      __label__ = 115; break; //@line 978 "src/markdown.c"
    case 112: 
      var $458=$j; //@line 979 "src/markdown.c"
      var $459=((($458)-(1))|0); //@line 979 "src/markdown.c"
      var $460=$3; //@line 979 "src/markdown.c"
      var $461=(($460+$459)|0); //@line 979 "src/markdown.c"
      var $462=HEAPU8[($461)]; //@line 979 "src/markdown.c"
      var $463=(($462)&255); //@line 979 "src/markdown.c"
      var $464=(($463)|0)!=32; //@line 979 "src/markdown.c"
      if ($464) { __label__ = 113; break; } else { __label__ = 114; break; } //@line 979 "src/markdown.c"
    case 113: 
      var $466=$b; //@line 980 "src/markdown.c"
      _bufputc($466, 32); //@line 980 "src/markdown.c"
      __label__ = 114; break; //@line 980 "src/markdown.c"
    case 114: 
      __label__ = 115; break;
    case 115: 
      __label__ = 116; break; //@line 981 "src/markdown.c"
    case 116: 
      var $470=$j; //@line 976 "src/markdown.c"
      var $471=((($470)+(1))|0); //@line 976 "src/markdown.c"
      $j=$471; //@line 976 "src/markdown.c"
      __label__ = 109; break; //@line 976 "src/markdown.c"
    case 117: 
      var $473=$b; //@line 983 "src/markdown.c"
      var $474=(($473)|0); //@line 983 "src/markdown.c"
      var $475=HEAP32[(($474)>>2)]; //@line 983 "src/markdown.c"
      var $476=(($id)|0); //@line 983 "src/markdown.c"
      HEAP32[(($476)>>2)]=$475; //@line 983 "src/markdown.c"
      var $477=$b; //@line 984 "src/markdown.c"
      var $478=(($477+4)|0); //@line 984 "src/markdown.c"
      var $479=HEAP32[(($478)>>2)]; //@line 984 "src/markdown.c"
      var $480=(($id+4)|0); //@line 984 "src/markdown.c"
      HEAP32[(($480)>>2)]=$479; //@line 984 "src/markdown.c"
      __label__ = 119; break; //@line 985 "src/markdown.c"
    case 118: 
      var $482=$3; //@line 986 "src/markdown.c"
      var $483=(($482+1)|0); //@line 986 "src/markdown.c"
      var $484=(($id)|0); //@line 986 "src/markdown.c"
      HEAP32[(($484)>>2)]=$483; //@line 986 "src/markdown.c"
      var $485=$txt_e; //@line 987 "src/markdown.c"
      var $486=((($485)-(1))|0); //@line 987 "src/markdown.c"
      var $487=(($id+4)|0); //@line 987 "src/markdown.c"
      HEAP32[(($487)>>2)]=$486; //@line 987 "src/markdown.c"
      __label__ = 119; break;
    case 119: 
      __label__ = 121; break; //@line 989 "src/markdown.c"
    case 120: 
      var $490=$3; //@line 990 "src/markdown.c"
      var $491=$link_b; //@line 990 "src/markdown.c"
      var $492=(($490+$491)|0); //@line 990 "src/markdown.c"
      var $493=(($id)|0); //@line 990 "src/markdown.c"
      HEAP32[(($493)>>2)]=$492; //@line 990 "src/markdown.c"
      var $494=$link_e; //@line 991 "src/markdown.c"
      var $495=$link_b; //@line 991 "src/markdown.c"
      var $496=((($494)-($495))|0); //@line 991 "src/markdown.c"
      var $497=(($id+4)|0); //@line 991 "src/markdown.c"
      HEAP32[(($497)>>2)]=$496; //@line 991 "src/markdown.c"
      __label__ = 121; break;
    case 121: 
      var $499=$2; //@line 994 "src/markdown.c"
      var $500=(($499+108)|0); //@line 994 "src/markdown.c"
      var $501=(($500)|0); //@line 994 "src/markdown.c"
      var $502=(($id)|0); //@line 994 "src/markdown.c"
      var $503=HEAP32[(($502)>>2)]; //@line 994 "src/markdown.c"
      var $504=(($id+4)|0); //@line 994 "src/markdown.c"
      var $505=HEAP32[(($504)>>2)]; //@line 994 "src/markdown.c"
      var $506=_find_link_ref($501, $503, $505); //@line 994 "src/markdown.c"
      $lr=$506; //@line 994 "src/markdown.c"
      var $507=$lr; //@line 995 "src/markdown.c"
      var $508=(($507)|0)!=0; //@line 995 "src/markdown.c"
      if ($508) { __label__ = 123; break; } else { __label__ = 122; break; } //@line 995 "src/markdown.c"
    case 122: 
      __label__ = 154; break; //@line 996 "src/markdown.c"
    case 123: 
      var $511=$lr; //@line 999 "src/markdown.c"
      var $512=(($511+4)|0); //@line 999 "src/markdown.c"
      var $513=HEAP32[(($512)>>2)]; //@line 999 "src/markdown.c"
      $link=$513; //@line 999 "src/markdown.c"
      var $514=$lr; //@line 1000 "src/markdown.c"
      var $515=(($514+8)|0); //@line 1000 "src/markdown.c"
      var $516=HEAP32[(($515)>>2)]; //@line 1000 "src/markdown.c"
      $title=$516; //@line 1000 "src/markdown.c"
      var $517=$i; //@line 1001 "src/markdown.c"
      var $518=((($517)+(1))|0); //@line 1001 "src/markdown.c"
      $i=$518; //@line 1001 "src/markdown.c"
      __label__ = 139; break; //@line 1002 "src/markdown.c"
    case 124: 
      var $520=$id1; //@line 1006 "src/markdown.c"
      HEAP32[(($520)>>2)]=0; HEAP32[((($520)+(4))>>2)]=0; HEAP32[((($520)+(8))>>2)]=0; HEAP32[((($520)+(12))>>2)]=0; //@line 1006 "src/markdown.c"
      var $521=$text_has_nl; //@line 1010 "src/markdown.c"
      var $522=(($521)|0)!=0; //@line 1010 "src/markdown.c"
      if ($522) { __label__ = 125; break; } else { __label__ = 135; break; } //@line 1010 "src/markdown.c"
    case 125: 
      var $524=$2; //@line 1011 "src/markdown.c"
      var $525=_rndr_newbuf($524, 1); //@line 1011 "src/markdown.c"
      $b3=$525; //@line 1011 "src/markdown.c"
      $j4=1; //@line 1014 "src/markdown.c"
      __label__ = 126; break; //@line 1014 "src/markdown.c"
    case 126: 
      var $527=$j4; //@line 1014 "src/markdown.c"
      var $528=$txt_e; //@line 1014 "src/markdown.c"
      var $529=(($527)>>>0) < (($528)>>>0); //@line 1014 "src/markdown.c"
      if ($529) { __label__ = 127; break; } else { __label__ = 134; break; } //@line 1014 "src/markdown.c"
    case 127: 
      var $531=$j4; //@line 1015 "src/markdown.c"
      var $532=$3; //@line 1015 "src/markdown.c"
      var $533=(($532+$531)|0); //@line 1015 "src/markdown.c"
      var $534=HEAPU8[($533)]; //@line 1015 "src/markdown.c"
      var $535=(($534)&255); //@line 1015 "src/markdown.c"
      var $536=(($535)|0)!=10; //@line 1015 "src/markdown.c"
      if ($536) { __label__ = 128; break; } else { __label__ = 129; break; } //@line 1015 "src/markdown.c"
    case 128: 
      var $538=$b3; //@line 1016 "src/markdown.c"
      var $539=$j4; //@line 1016 "src/markdown.c"
      var $540=$3; //@line 1016 "src/markdown.c"
      var $541=(($540+$539)|0); //@line 1016 "src/markdown.c"
      var $542=HEAPU8[($541)]; //@line 1016 "src/markdown.c"
      var $543=(($542)&255); //@line 1016 "src/markdown.c"
      _bufputc($538, $543); //@line 1016 "src/markdown.c"
      __label__ = 132; break; //@line 1016 "src/markdown.c"
    case 129: 
      var $545=$j4; //@line 1017 "src/markdown.c"
      var $546=((($545)-(1))|0); //@line 1017 "src/markdown.c"
      var $547=$3; //@line 1017 "src/markdown.c"
      var $548=(($547+$546)|0); //@line 1017 "src/markdown.c"
      var $549=HEAPU8[($548)]; //@line 1017 "src/markdown.c"
      var $550=(($549)&255); //@line 1017 "src/markdown.c"
      var $551=(($550)|0)!=32; //@line 1017 "src/markdown.c"
      if ($551) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 1017 "src/markdown.c"
    case 130: 
      var $553=$b3; //@line 1018 "src/markdown.c"
      _bufputc($553, 32); //@line 1018 "src/markdown.c"
      __label__ = 131; break; //@line 1018 "src/markdown.c"
    case 131: 
      __label__ = 132; break;
    case 132: 
      __label__ = 133; break; //@line 1019 "src/markdown.c"
    case 133: 
      var $557=$j4; //@line 1014 "src/markdown.c"
      var $558=((($557)+(1))|0); //@line 1014 "src/markdown.c"
      $j4=$558; //@line 1014 "src/markdown.c"
      __label__ = 126; break; //@line 1014 "src/markdown.c"
    case 134: 
      var $560=$b3; //@line 1021 "src/markdown.c"
      var $561=(($560)|0); //@line 1021 "src/markdown.c"
      var $562=HEAP32[(($561)>>2)]; //@line 1021 "src/markdown.c"
      var $563=(($id1)|0); //@line 1021 "src/markdown.c"
      HEAP32[(($563)>>2)]=$562; //@line 1021 "src/markdown.c"
      var $564=$b3; //@line 1022 "src/markdown.c"
      var $565=(($564+4)|0); //@line 1022 "src/markdown.c"
      var $566=HEAP32[(($565)>>2)]; //@line 1022 "src/markdown.c"
      var $567=(($id1+4)|0); //@line 1022 "src/markdown.c"
      HEAP32[(($567)>>2)]=$566; //@line 1022 "src/markdown.c"
      __label__ = 136; break; //@line 1023 "src/markdown.c"
    case 135: 
      var $569=$3; //@line 1024 "src/markdown.c"
      var $570=(($569+1)|0); //@line 1024 "src/markdown.c"
      var $571=(($id1)|0); //@line 1024 "src/markdown.c"
      HEAP32[(($571)>>2)]=$570; //@line 1024 "src/markdown.c"
      var $572=$txt_e; //@line 1025 "src/markdown.c"
      var $573=((($572)-(1))|0); //@line 1025 "src/markdown.c"
      var $574=(($id1+4)|0); //@line 1025 "src/markdown.c"
      HEAP32[(($574)>>2)]=$573; //@line 1025 "src/markdown.c"
      __label__ = 136; break;
    case 136: 
      var $576=$2; //@line 1029 "src/markdown.c"
      var $577=(($576+108)|0); //@line 1029 "src/markdown.c"
      var $578=(($577)|0); //@line 1029 "src/markdown.c"
      var $579=(($id1)|0); //@line 1029 "src/markdown.c"
      var $580=HEAP32[(($579)>>2)]; //@line 1029 "src/markdown.c"
      var $581=(($id1+4)|0); //@line 1029 "src/markdown.c"
      var $582=HEAP32[(($581)>>2)]; //@line 1029 "src/markdown.c"
      var $583=_find_link_ref($578, $580, $582); //@line 1029 "src/markdown.c"
      $lr2=$583; //@line 1029 "src/markdown.c"
      var $584=$lr2; //@line 1030 "src/markdown.c"
      var $585=(($584)|0)!=0; //@line 1030 "src/markdown.c"
      if ($585) { __label__ = 138; break; } else { __label__ = 137; break; } //@line 1030 "src/markdown.c"
    case 137: 
      __label__ = 154; break; //@line 1031 "src/markdown.c"
    case 138: 
      var $588=$lr2; //@line 1034 "src/markdown.c"
      var $589=(($588+4)|0); //@line 1034 "src/markdown.c"
      var $590=HEAP32[(($589)>>2)]; //@line 1034 "src/markdown.c"
      $link=$590; //@line 1034 "src/markdown.c"
      var $591=$lr2; //@line 1035 "src/markdown.c"
      var $592=(($591+8)|0); //@line 1035 "src/markdown.c"
      var $593=HEAP32[(($592)>>2)]; //@line 1035 "src/markdown.c"
      $title=$593; //@line 1035 "src/markdown.c"
      var $594=$txt_e; //@line 1038 "src/markdown.c"
      var $595=((($594)+(1))|0); //@line 1038 "src/markdown.c"
      $i=$595; //@line 1038 "src/markdown.c"
      __label__ = 139; break;
    case 139: 
      __label__ = 140; break;
    case 140: 
      var $598=$txt_e; //@line 1042 "src/markdown.c"
      var $599=(($598)>>>0) > 1; //@line 1042 "src/markdown.c"
      if ($599) { __label__ = 141; break; } else { __label__ = 145; break; } //@line 1042 "src/markdown.c"
    case 141: 
      var $601=$2; //@line 1043 "src/markdown.c"
      var $602=_rndr_newbuf($601, 1); //@line 1043 "src/markdown.c"
      $content=$602; //@line 1043 "src/markdown.c"
      var $603=$is_img; //@line 1044 "src/markdown.c"
      var $604=(($603)|0)!=0; //@line 1044 "src/markdown.c"
      if ($604) { __label__ = 142; break; } else { __label__ = 143; break; } //@line 1044 "src/markdown.c"
    case 142: 
      var $606=$content; //@line 1045 "src/markdown.c"
      var $607=$3; //@line 1045 "src/markdown.c"
      var $608=(($607+1)|0); //@line 1045 "src/markdown.c"
      var $609=$txt_e; //@line 1045 "src/markdown.c"
      var $610=((($609)-(1))|0); //@line 1045 "src/markdown.c"
      _bufput($606, $608, $610); //@line 1045 "src/markdown.c"
      __label__ = 144; break; //@line 1046 "src/markdown.c"
    case 143: 
      var $612=$2; //@line 1049 "src/markdown.c"
      var $613=(($612+428)|0); //@line 1049 "src/markdown.c"
      HEAP32[(($613)>>2)]=1; //@line 1049 "src/markdown.c"
      var $614=$content; //@line 1050 "src/markdown.c"
      var $615=$2; //@line 1050 "src/markdown.c"
      var $616=$3; //@line 1050 "src/markdown.c"
      var $617=(($616+1)|0); //@line 1050 "src/markdown.c"
      var $618=$txt_e; //@line 1050 "src/markdown.c"
      var $619=((($618)-(1))|0); //@line 1050 "src/markdown.c"
      _parse_inline($614, $615, $617, $619); //@line 1050 "src/markdown.c"
      var $620=$2; //@line 1051 "src/markdown.c"
      var $621=(($620+428)|0); //@line 1051 "src/markdown.c"
      HEAP32[(($621)>>2)]=0; //@line 1051 "src/markdown.c"
      __label__ = 144; break;
    case 144: 
      __label__ = 145; break; //@line 1053 "src/markdown.c"
    case 145: 
      var $624=$link; //@line 1055 "src/markdown.c"
      var $625=(($624)|0)!=0; //@line 1055 "src/markdown.c"
      if ($625) { __label__ = 146; break; } else { __label__ = 147; break; } //@line 1055 "src/markdown.c"
    case 146: 
      var $627=$2; //@line 1056 "src/markdown.c"
      var $628=_rndr_newbuf($627, 1); //@line 1056 "src/markdown.c"
      $u_link=$628; //@line 1056 "src/markdown.c"
      var $629=$u_link; //@line 1057 "src/markdown.c"
      var $630=$link; //@line 1057 "src/markdown.c"
      _unscape_text($629, $630); //@line 1057 "src/markdown.c"
      __label__ = 147; break; //@line 1058 "src/markdown.c"
    case 147: 
      var $632=$is_img; //@line 1061 "src/markdown.c"
      var $633=(($632)|0)!=0; //@line 1061 "src/markdown.c"
      if ($633) { __label__ = 148; break; } else { __label__ = 152; break; } //@line 1061 "src/markdown.c"
    case 148: 
      var $635=$1; //@line 1062 "src/markdown.c"
      var $636=(($635+4)|0); //@line 1062 "src/markdown.c"
      var $637=HEAP32[(($636)>>2)]; //@line 1062 "src/markdown.c"
      var $638=(($637)|0)!=0; //@line 1062 "src/markdown.c"
      if ($638) { __label__ = 149; break; } else { __label__ = 151; break; } //@line 1062 "src/markdown.c"
    case 149: 
      var $640=$1; //@line 1062 "src/markdown.c"
      var $641=(($640+4)|0); //@line 1062 "src/markdown.c"
      var $642=HEAP32[(($641)>>2)]; //@line 1062 "src/markdown.c"
      var $643=((($642)-(1))|0); //@line 1062 "src/markdown.c"
      var $644=$1; //@line 1062 "src/markdown.c"
      var $645=(($644)|0); //@line 1062 "src/markdown.c"
      var $646=HEAP32[(($645)>>2)]; //@line 1062 "src/markdown.c"
      var $647=(($646+$643)|0); //@line 1062 "src/markdown.c"
      var $648=HEAPU8[($647)]; //@line 1062 "src/markdown.c"
      var $649=(($648)&255); //@line 1062 "src/markdown.c"
      var $650=(($649)|0)==33; //@line 1062 "src/markdown.c"
      if ($650) { __label__ = 150; break; } else { __label__ = 151; break; } //@line 1062 "src/markdown.c"
    case 150: 
      var $652=$1; //@line 1063 "src/markdown.c"
      var $653=(($652+4)|0); //@line 1063 "src/markdown.c"
      var $654=HEAP32[(($653)>>2)]; //@line 1063 "src/markdown.c"
      var $655=((($654)-(1))|0); //@line 1063 "src/markdown.c"
      HEAP32[(($653)>>2)]=$655; //@line 1063 "src/markdown.c"
      __label__ = 151; break; //@line 1063 "src/markdown.c"
    case 151: 
      var $657=$2; //@line 1065 "src/markdown.c"
      var $658=(($657)|0); //@line 1065 "src/markdown.c"
      var $659=(($658+60)|0); //@line 1065 "src/markdown.c"
      var $660=HEAP32[(($659)>>2)]; //@line 1065 "src/markdown.c"
      var $661=$1; //@line 1065 "src/markdown.c"
      var $662=$u_link; //@line 1065 "src/markdown.c"
      var $663=$title; //@line 1065 "src/markdown.c"
      var $664=$content; //@line 1065 "src/markdown.c"
      var $665=$2; //@line 1065 "src/markdown.c"
      var $666=(($665+104)|0); //@line 1065 "src/markdown.c"
      var $667=HEAP32[(($666)>>2)]; //@line 1065 "src/markdown.c"
      var $668=FUNCTION_TABLE[$660]($661, $662, $663, $664, $667); //@line 1065 "src/markdown.c"
      $ret=$668; //@line 1065 "src/markdown.c"
      __label__ = 153; break; //@line 1066 "src/markdown.c"
    case 152: 
      var $670=$2; //@line 1067 "src/markdown.c"
      var $671=(($670)|0); //@line 1067 "src/markdown.c"
      var $672=(($671+68)|0); //@line 1067 "src/markdown.c"
      var $673=HEAP32[(($672)>>2)]; //@line 1067 "src/markdown.c"
      var $674=$1; //@line 1067 "src/markdown.c"
      var $675=$u_link; //@line 1067 "src/markdown.c"
      var $676=$title; //@line 1067 "src/markdown.c"
      var $677=$content; //@line 1067 "src/markdown.c"
      var $678=$2; //@line 1067 "src/markdown.c"
      var $679=(($678+104)|0); //@line 1067 "src/markdown.c"
      var $680=HEAP32[(($679)>>2)]; //@line 1067 "src/markdown.c"
      var $681=FUNCTION_TABLE[$673]($674, $675, $676, $677, $680); //@line 1067 "src/markdown.c"
      $ret=$681; //@line 1067 "src/markdown.c"
      __label__ = 153; break;
    case 153: 
      __label__ = 154; break;
    case 154: 
      var $684=$org_work_size; //@line 1072 "src/markdown.c"
      var $685=$2; //@line 1072 "src/markdown.c"
      var $686=(($685+396)|0); //@line 1072 "src/markdown.c"
      var $687=(($686+12)|0); //@line 1072 "src/markdown.c"
      var $688=(($687+4)|0); //@line 1072 "src/markdown.c"
      HEAP32[(($688)>>2)]=$684; //@line 1072 "src/markdown.c"
      var $689=$ret; //@line 1073 "src/markdown.c"
      var $690=(($689)|0)!=0; //@line 1073 "src/markdown.c"
      if ($690) { __label__ = 155; break; } else { __label__ = 156; break; } //@line 1073 "src/markdown.c"
    case 155: 
      var $692=$i; //@line 1073 "src/markdown.c"
      var $695 = $692;__label__ = 157; break; //@line 1073 "src/markdown.c"
    case 156: 
      var $695 = 0;__label__ = 157; break; //@line 1073 "src/markdown.c"
    case 157: 
      var $695; //@line 1073 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $695; //@line 1073 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_link["X"]=1;

function __isspace($c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$c;
      var $2=$1; //@line 250 "src/markdown.c"
      var $3=(($2)|0)==32; //@line 250 "src/markdown.c"
      if ($3) { var $8 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 250 "src/markdown.c"
    case 3: 
      var $5=$1; //@line 250 "src/markdown.c"
      var $6=(($5)|0)==10; //@line 250 "src/markdown.c"
      var $8 = $6;__label__ = 4; break; //@line 250 "src/markdown.c"
    case 4: 
      var $8;
      var $9=(($8)&1); //@line 250 "src/markdown.c"
      ;
      return $9; //@line 250 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _char_langle_tag($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 20; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $altype=__stackBase__;
      var $end;
      var $work=(__stackBase__)+(4);
      var $ret;
      var $u_link;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      HEAP32[(($altype)>>2)]=0; //@line 746 "src/markdown.c"
      var $7=$4; //@line 747 "src/markdown.c"
      var $8=$6; //@line 747 "src/markdown.c"
      var $9=_tag_length($7, $8, $altype); //@line 747 "src/markdown.c"
      $end=$9; //@line 747 "src/markdown.c"
      var $10=(($work)|0); //@line 748 "src/markdown.c"
      var $11=$4; //@line 748 "src/markdown.c"
      HEAP32[(($10)>>2)]=$11; //@line 748 "src/markdown.c"
      var $12=(($work+4)|0); //@line 748 "src/markdown.c"
      var $13=$end; //@line 748 "src/markdown.c"
      HEAP32[(($12)>>2)]=$13; //@line 748 "src/markdown.c"
      var $14=(($work+8)|0); //@line 748 "src/markdown.c"
      HEAP32[(($14)>>2)]=0; //@line 748 "src/markdown.c"
      var $15=(($work+12)|0); //@line 748 "src/markdown.c"
      HEAP32[(($15)>>2)]=0; //@line 748 "src/markdown.c"
      $ret=0; //@line 749 "src/markdown.c"
      var $16=$end; //@line 751 "src/markdown.c"
      var $17=(($16)>>>0) > 2; //@line 751 "src/markdown.c"
      if ($17) { __label__ = 3; break; } else { __label__ = 10; break; } //@line 751 "src/markdown.c"
    case 3: 
      var $19=$3; //@line 752 "src/markdown.c"
      var $20=(($19)|0); //@line 752 "src/markdown.c"
      var $21=(($20+44)|0); //@line 752 "src/markdown.c"
      var $22=HEAP32[(($21)>>2)]; //@line 752 "src/markdown.c"
      var $23=(($22)|0)!=0; //@line 752 "src/markdown.c"
      if ($23) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 752 "src/markdown.c"
    case 4: 
      var $25=HEAP32[(($altype)>>2)]; //@line 752 "src/markdown.c"
      var $26=(($25)|0)!=0; //@line 752 "src/markdown.c"
      if ($26) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 752 "src/markdown.c"
    case 5: 
      var $28=$3; //@line 753 "src/markdown.c"
      var $29=_rndr_newbuf($28, 1); //@line 753 "src/markdown.c"
      $u_link=$29; //@line 753 "src/markdown.c"
      var $30=$4; //@line 754 "src/markdown.c"
      var $31=(($30+1)|0); //@line 754 "src/markdown.c"
      var $32=(($work)|0); //@line 754 "src/markdown.c"
      HEAP32[(($32)>>2)]=$31; //@line 754 "src/markdown.c"
      var $33=$end; //@line 755 "src/markdown.c"
      var $34=((($33)-(2))|0); //@line 755 "src/markdown.c"
      var $35=(($work+4)|0); //@line 755 "src/markdown.c"
      HEAP32[(($35)>>2)]=$34; //@line 755 "src/markdown.c"
      var $36=$u_link; //@line 756 "src/markdown.c"
      _unscape_text($36, $work); //@line 756 "src/markdown.c"
      var $37=$3; //@line 757 "src/markdown.c"
      var $38=(($37)|0); //@line 757 "src/markdown.c"
      var $39=(($38+44)|0); //@line 757 "src/markdown.c"
      var $40=HEAP32[(($39)>>2)]; //@line 757 "src/markdown.c"
      var $41=$2; //@line 757 "src/markdown.c"
      var $42=$u_link; //@line 757 "src/markdown.c"
      var $43=HEAP32[(($altype)>>2)]; //@line 757 "src/markdown.c"
      var $44=$3; //@line 757 "src/markdown.c"
      var $45=(($44+104)|0); //@line 757 "src/markdown.c"
      var $46=HEAP32[(($45)>>2)]; //@line 757 "src/markdown.c"
      var $47=FUNCTION_TABLE[$40]($41, $42, $43, $46); //@line 757 "src/markdown.c"
      $ret=$47; //@line 757 "src/markdown.c"
      var $48=$3; //@line 758 "src/markdown.c"
      _rndr_popbuf($48, 1); //@line 758 "src/markdown.c"
      __label__ = 9; break; //@line 759 "src/markdown.c"
    case 6: 
      var $50=$3; //@line 760 "src/markdown.c"
      var $51=(($50)|0); //@line 760 "src/markdown.c"
      var $52=(($51+72)|0); //@line 760 "src/markdown.c"
      var $53=HEAP32[(($52)>>2)]; //@line 760 "src/markdown.c"
      var $54=(($53)|0)!=0; //@line 760 "src/markdown.c"
      if ($54) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 760 "src/markdown.c"
    case 7: 
      var $56=$3; //@line 761 "src/markdown.c"
      var $57=(($56)|0); //@line 761 "src/markdown.c"
      var $58=(($57+72)|0); //@line 761 "src/markdown.c"
      var $59=HEAP32[(($58)>>2)]; //@line 761 "src/markdown.c"
      var $60=$2; //@line 761 "src/markdown.c"
      var $61=$3; //@line 761 "src/markdown.c"
      var $62=(($61+104)|0); //@line 761 "src/markdown.c"
      var $63=HEAP32[(($62)>>2)]; //@line 761 "src/markdown.c"
      var $64=FUNCTION_TABLE[$59]($60, $work, $63); //@line 761 "src/markdown.c"
      $ret=$64; //@line 761 "src/markdown.c"
      __label__ = 8; break; //@line 761 "src/markdown.c"
    case 8: 
      __label__ = 9; break;
    case 9: 
      __label__ = 10; break; //@line 762 "src/markdown.c"
    case 10: 
      var $68=$ret; //@line 764 "src/markdown.c"
      var $69=(($68)|0)!=0; //@line 764 "src/markdown.c"
      if ($69) { __label__ = 12; break; } else { __label__ = 11; break; } //@line 764 "src/markdown.c"
    case 11: 
      $1=0; //@line 764 "src/markdown.c"
      __label__ = 13; break; //@line 764 "src/markdown.c"
    case 12: 
      var $72=$end; //@line 765 "src/markdown.c"
      $1=$72; //@line 765 "src/markdown.c"
      __label__ = 13; break; //@line 765 "src/markdown.c"
    case 13: 
      var $74=$1; //@line 766 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $74; //@line 766 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_langle_tag["X"]=1;

function _char_escape($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $work=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$work; //@line 694 "src/markdown.c"
      HEAP32[(($7)>>2)]=0; HEAP32[((($7)+(4))>>2)]=0; HEAP32[((($7)+(8))>>2)]=0; HEAP32[((($7)+(12))>>2)]=0; //@line 694 "src/markdown.c"
      var $8=$6; //@line 696 "src/markdown.c"
      var $9=(($8)>>>0) > 1; //@line 696 "src/markdown.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 9; break; } //@line 696 "src/markdown.c"
    case 3: 
      var $11=HEAP32[((_char_escape_escape_chars)>>2)]; //@line 697 "src/markdown.c"
      var $12=$4; //@line 697 "src/markdown.c"
      var $13=(($12+1)|0); //@line 697 "src/markdown.c"
      var $14=HEAPU8[($13)]; //@line 697 "src/markdown.c"
      var $15=(($14)&255); //@line 697 "src/markdown.c"
      var $16=_strchr($11, $15); //@line 697 "src/markdown.c"
      var $17=(($16)|0)==0; //@line 697 "src/markdown.c"
      if ($17) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 697 "src/markdown.c"
    case 4: 
      $1=0; //@line 698 "src/markdown.c"
      __label__ = 13; break; //@line 698 "src/markdown.c"
    case 5: 
      var $20=$3; //@line 700 "src/markdown.c"
      var $21=(($20)|0); //@line 700 "src/markdown.c"
      var $22=(($21+92)|0); //@line 700 "src/markdown.c"
      var $23=HEAP32[(($22)>>2)]; //@line 700 "src/markdown.c"
      var $24=(($23)|0)!=0; //@line 700 "src/markdown.c"
      if ($24) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 700 "src/markdown.c"
    case 6: 
      var $26=$4; //@line 701 "src/markdown.c"
      var $27=(($26+1)|0); //@line 701 "src/markdown.c"
      var $28=(($work)|0); //@line 701 "src/markdown.c"
      HEAP32[(($28)>>2)]=$27; //@line 701 "src/markdown.c"
      var $29=(($work+4)|0); //@line 702 "src/markdown.c"
      HEAP32[(($29)>>2)]=1; //@line 702 "src/markdown.c"
      var $30=$3; //@line 703 "src/markdown.c"
      var $31=(($30)|0); //@line 703 "src/markdown.c"
      var $32=(($31+92)|0); //@line 703 "src/markdown.c"
      var $33=HEAP32[(($32)>>2)]; //@line 703 "src/markdown.c"
      var $34=$2; //@line 703 "src/markdown.c"
      var $35=$3; //@line 703 "src/markdown.c"
      var $36=(($35+104)|0); //@line 703 "src/markdown.c"
      var $37=HEAP32[(($36)>>2)]; //@line 703 "src/markdown.c"
      FUNCTION_TABLE[$33]($34, $work, $37); //@line 703 "src/markdown.c"
      __label__ = 8; break; //@line 704 "src/markdown.c"
    case 7: 
      var $39=$2; //@line 705 "src/markdown.c"
      var $40=$4; //@line 705 "src/markdown.c"
      var $41=(($40+1)|0); //@line 705 "src/markdown.c"
      var $42=HEAPU8[($41)]; //@line 705 "src/markdown.c"
      var $43=(($42)&255); //@line 705 "src/markdown.c"
      _bufputc($39, $43); //@line 705 "src/markdown.c"
      __label__ = 8; break;
    case 8: 
      __label__ = 12; break; //@line 706 "src/markdown.c"
    case 9: 
      var $46=$6; //@line 706 "src/markdown.c"
      var $47=(($46)|0)==1; //@line 706 "src/markdown.c"
      if ($47) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 706 "src/markdown.c"
    case 10: 
      var $49=$2; //@line 707 "src/markdown.c"
      var $50=$4; //@line 707 "src/markdown.c"
      var $51=(($50)|0); //@line 707 "src/markdown.c"
      var $52=HEAPU8[($51)]; //@line 707 "src/markdown.c"
      var $53=(($52)&255); //@line 707 "src/markdown.c"
      _bufputc($49, $53); //@line 707 "src/markdown.c"
      __label__ = 11; break; //@line 708 "src/markdown.c"
    case 11: 
      __label__ = 12; break;
    case 12: 
      $1=2; //@line 710 "src/markdown.c"
      __label__ = 13; break; //@line 710 "src/markdown.c"
    case 13: 
      var $57=$1; //@line 711 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $57; //@line 711 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_escape["X"]=1;

function _char_entity($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $end;
      var $work=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      $end=1; //@line 718 "src/markdown.c"
      var $7=$work; //@line 719 "src/markdown.c"
      HEAP32[(($7)>>2)]=0; HEAP32[((($7)+(4))>>2)]=0; HEAP32[((($7)+(8))>>2)]=0; HEAP32[((($7)+(12))>>2)]=0; //@line 719 "src/markdown.c"
      var $8=$end; //@line 721 "src/markdown.c"
      var $9=$6; //@line 721 "src/markdown.c"
      var $10=(($8)>>>0) < (($9)>>>0); //@line 721 "src/markdown.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 721 "src/markdown.c"
    case 3: 
      var $12=$end; //@line 721 "src/markdown.c"
      var $13=$4; //@line 721 "src/markdown.c"
      var $14=(($13+$12)|0); //@line 721 "src/markdown.c"
      var $15=HEAPU8[($14)]; //@line 721 "src/markdown.c"
      var $16=(($15)&255); //@line 721 "src/markdown.c"
      var $17=(($16)|0)==35; //@line 721 "src/markdown.c"
      if ($17) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 721 "src/markdown.c"
    case 4: 
      var $19=$end; //@line 722 "src/markdown.c"
      var $20=((($19)+(1))|0); //@line 722 "src/markdown.c"
      $end=$20; //@line 722 "src/markdown.c"
      __label__ = 5; break; //@line 722 "src/markdown.c"
    case 5: 
      __label__ = 6; break; //@line 724 "src/markdown.c"
    case 6: 
      var $23=$end; //@line 724 "src/markdown.c"
      var $24=$6; //@line 724 "src/markdown.c"
      var $25=(($23)>>>0) < (($24)>>>0); //@line 724 "src/markdown.c"
      if ($25) { __label__ = 7; break; } else { var $35 = 0;__label__ = 8; break; } //@line 724 "src/markdown.c"
    case 7: 
      var $27=$end; //@line 724 "src/markdown.c"
      var $28=$4; //@line 724 "src/markdown.c"
      var $29=(($28+$27)|0); //@line 724 "src/markdown.c"
      var $30=HEAPU8[($29)]; //@line 724 "src/markdown.c"
      var $31=(($30)&255); //@line 724 "src/markdown.c"
      var $32=_isalnum($31); //@line 724 "src/markdown.c"
      var $33=(($32)|0)!=0; //@line 724 "src/markdown.c"
      var $35 = $33;__label__ = 8; break;
    case 8: 
      var $35;
      if ($35) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $37=$end; //@line 725 "src/markdown.c"
      var $38=((($37)+(1))|0); //@line 725 "src/markdown.c"
      $end=$38; //@line 725 "src/markdown.c"
      __label__ = 6; break; //@line 725 "src/markdown.c"
    case 10: 
      var $40=$end; //@line 727 "src/markdown.c"
      var $41=$6; //@line 727 "src/markdown.c"
      var $42=(($40)>>>0) < (($41)>>>0); //@line 727 "src/markdown.c"
      if ($42) { __label__ = 11; break; } else { __label__ = 13; break; } //@line 727 "src/markdown.c"
    case 11: 
      var $44=$end; //@line 727 "src/markdown.c"
      var $45=$4; //@line 727 "src/markdown.c"
      var $46=(($45+$44)|0); //@line 727 "src/markdown.c"
      var $47=HEAPU8[($46)]; //@line 727 "src/markdown.c"
      var $48=(($47)&255); //@line 727 "src/markdown.c"
      var $49=(($48)|0)==59; //@line 727 "src/markdown.c"
      if ($49) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 727 "src/markdown.c"
    case 12: 
      var $51=$end; //@line 728 "src/markdown.c"
      var $52=((($51)+(1))|0); //@line 728 "src/markdown.c"
      $end=$52; //@line 728 "src/markdown.c"
      __label__ = 14; break; //@line 728 "src/markdown.c"
    case 13: 
      $1=0; //@line 730 "src/markdown.c"
      __label__ = 18; break; //@line 730 "src/markdown.c"
    case 14: 
      var $55=$3; //@line 732 "src/markdown.c"
      var $56=(($55)|0); //@line 732 "src/markdown.c"
      var $57=(($56+88)|0); //@line 732 "src/markdown.c"
      var $58=HEAP32[(($57)>>2)]; //@line 732 "src/markdown.c"
      var $59=(($58)|0)!=0; //@line 732 "src/markdown.c"
      if ($59) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 732 "src/markdown.c"
    case 15: 
      var $61=$4; //@line 733 "src/markdown.c"
      var $62=(($work)|0); //@line 733 "src/markdown.c"
      HEAP32[(($62)>>2)]=$61; //@line 733 "src/markdown.c"
      var $63=$end; //@line 734 "src/markdown.c"
      var $64=(($work+4)|0); //@line 734 "src/markdown.c"
      HEAP32[(($64)>>2)]=$63; //@line 734 "src/markdown.c"
      var $65=$3; //@line 735 "src/markdown.c"
      var $66=(($65)|0); //@line 735 "src/markdown.c"
      var $67=(($66+88)|0); //@line 735 "src/markdown.c"
      var $68=HEAP32[(($67)>>2)]; //@line 735 "src/markdown.c"
      var $69=$2; //@line 735 "src/markdown.c"
      var $70=$3; //@line 735 "src/markdown.c"
      var $71=(($70+104)|0); //@line 735 "src/markdown.c"
      var $72=HEAP32[(($71)>>2)]; //@line 735 "src/markdown.c"
      FUNCTION_TABLE[$68]($69, $work, $72); //@line 735 "src/markdown.c"
      __label__ = 17; break; //@line 736 "src/markdown.c"
    case 16: 
      var $74=$2; //@line 737 "src/markdown.c"
      var $75=$4; //@line 737 "src/markdown.c"
      var $76=$end; //@line 737 "src/markdown.c"
      _bufput($74, $75, $76); //@line 737 "src/markdown.c"
      __label__ = 17; break;
    case 17: 
      var $78=$end; //@line 739 "src/markdown.c"
      $1=$78; //@line 739 "src/markdown.c"
      __label__ = 18; break; //@line 739 "src/markdown.c"
    case 18: 
      var $80=$1; //@line 740 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $80; //@line 740 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_entity["X"]=1;

function _char_autolink_url($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $link;
      var $link_len;
      var $rewind=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$3; //@line 826 "src/markdown.c"
      var $8=(($7)|0); //@line 826 "src/markdown.c"
      var $9=(($8+44)|0); //@line 826 "src/markdown.c"
      var $10=HEAP32[(($9)>>2)]; //@line 826 "src/markdown.c"
      var $11=(($10)|0)!=0; //@line 826 "src/markdown.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 826 "src/markdown.c"
    case 3: 
      var $13=$3; //@line 826 "src/markdown.c"
      var $14=(($13+428)|0); //@line 826 "src/markdown.c"
      var $15=HEAP32[(($14)>>2)]; //@line 826 "src/markdown.c"
      var $16=(($15)|0)!=0; //@line 826 "src/markdown.c"
      if ($16) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 826 "src/markdown.c"
    case 4: 
      $1=0; //@line 827 "src/markdown.c"
      __label__ = 8; break; //@line 827 "src/markdown.c"
    case 5: 
      var $19=$3; //@line 829 "src/markdown.c"
      var $20=_rndr_newbuf($19, 1); //@line 829 "src/markdown.c"
      $link=$20; //@line 829 "src/markdown.c"
      var $21=$link; //@line 831 "src/markdown.c"
      var $22=$4; //@line 831 "src/markdown.c"
      var $23=$5; //@line 831 "src/markdown.c"
      var $24=$6; //@line 831 "src/markdown.c"
      var $25=_sd_autolink__url($rewind, $21, $22, $23, $24, 0); //@line 831 "src/markdown.c"
      $link_len=$25; //@line 831 "src/markdown.c"
      var $26=(($25)>>>0) > 0; //@line 831 "src/markdown.c"
      if ($26) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 831 "src/markdown.c"
    case 6: 
      var $28=HEAP32[(($rewind)>>2)]; //@line 832 "src/markdown.c"
      var $29=$2; //@line 832 "src/markdown.c"
      var $30=(($29+4)|0); //@line 832 "src/markdown.c"
      var $31=HEAP32[(($30)>>2)]; //@line 832 "src/markdown.c"
      var $32=((($31)-($28))|0); //@line 832 "src/markdown.c"
      HEAP32[(($30)>>2)]=$32; //@line 832 "src/markdown.c"
      var $33=$3; //@line 833 "src/markdown.c"
      var $34=(($33)|0); //@line 833 "src/markdown.c"
      var $35=(($34+44)|0); //@line 833 "src/markdown.c"
      var $36=HEAP32[(($35)>>2)]; //@line 833 "src/markdown.c"
      var $37=$2; //@line 833 "src/markdown.c"
      var $38=$link; //@line 833 "src/markdown.c"
      var $39=$3; //@line 833 "src/markdown.c"
      var $40=(($39+104)|0); //@line 833 "src/markdown.c"
      var $41=HEAP32[(($40)>>2)]; //@line 833 "src/markdown.c"
      var $42=FUNCTION_TABLE[$36]($37, $38, 1, $41); //@line 833 "src/markdown.c"
      __label__ = 7; break; //@line 834 "src/markdown.c"
    case 7: 
      var $44=$3; //@line 836 "src/markdown.c"
      _rndr_popbuf($44, 1); //@line 836 "src/markdown.c"
      var $45=$link_len; //@line 837 "src/markdown.c"
      $1=$45; //@line 837 "src/markdown.c"
      __label__ = 8; break; //@line 837 "src/markdown.c"
    case 8: 
      var $47=$1; //@line 838 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $47; //@line 838 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_autolink_url["X"]=1;

function _char_autolink_email($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $link;
      var $link_len;
      var $rewind=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$3; //@line 806 "src/markdown.c"
      var $8=(($7)|0); //@line 806 "src/markdown.c"
      var $9=(($8+44)|0); //@line 806 "src/markdown.c"
      var $10=HEAP32[(($9)>>2)]; //@line 806 "src/markdown.c"
      var $11=(($10)|0)!=0; //@line 806 "src/markdown.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 806 "src/markdown.c"
    case 3: 
      var $13=$3; //@line 806 "src/markdown.c"
      var $14=(($13+428)|0); //@line 806 "src/markdown.c"
      var $15=HEAP32[(($14)>>2)]; //@line 806 "src/markdown.c"
      var $16=(($15)|0)!=0; //@line 806 "src/markdown.c"
      if ($16) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 806 "src/markdown.c"
    case 4: 
      $1=0; //@line 807 "src/markdown.c"
      __label__ = 8; break; //@line 807 "src/markdown.c"
    case 5: 
      var $19=$3; //@line 809 "src/markdown.c"
      var $20=_rndr_newbuf($19, 1); //@line 809 "src/markdown.c"
      $link=$20; //@line 809 "src/markdown.c"
      var $21=$link; //@line 811 "src/markdown.c"
      var $22=$4; //@line 811 "src/markdown.c"
      var $23=$5; //@line 811 "src/markdown.c"
      var $24=$6; //@line 811 "src/markdown.c"
      var $25=_sd_autolink__email($rewind, $21, $22, $23, $24, 0); //@line 811 "src/markdown.c"
      $link_len=$25; //@line 811 "src/markdown.c"
      var $26=(($25)>>>0) > 0; //@line 811 "src/markdown.c"
      if ($26) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 811 "src/markdown.c"
    case 6: 
      var $28=HEAP32[(($rewind)>>2)]; //@line 812 "src/markdown.c"
      var $29=$2; //@line 812 "src/markdown.c"
      var $30=(($29+4)|0); //@line 812 "src/markdown.c"
      var $31=HEAP32[(($30)>>2)]; //@line 812 "src/markdown.c"
      var $32=((($31)-($28))|0); //@line 812 "src/markdown.c"
      HEAP32[(($30)>>2)]=$32; //@line 812 "src/markdown.c"
      var $33=$3; //@line 813 "src/markdown.c"
      var $34=(($33)|0); //@line 813 "src/markdown.c"
      var $35=(($34+44)|0); //@line 813 "src/markdown.c"
      var $36=HEAP32[(($35)>>2)]; //@line 813 "src/markdown.c"
      var $37=$2; //@line 813 "src/markdown.c"
      var $38=$link; //@line 813 "src/markdown.c"
      var $39=$3; //@line 813 "src/markdown.c"
      var $40=(($39+104)|0); //@line 813 "src/markdown.c"
      var $41=HEAP32[(($40)>>2)]; //@line 813 "src/markdown.c"
      var $42=FUNCTION_TABLE[$36]($37, $38, 2, $41); //@line 813 "src/markdown.c"
      __label__ = 7; break; //@line 814 "src/markdown.c"
    case 7: 
      var $44=$3; //@line 816 "src/markdown.c"
      _rndr_popbuf($44, 1); //@line 816 "src/markdown.c"
      var $45=$link_len; //@line 817 "src/markdown.c"
      $1=$45; //@line 817 "src/markdown.c"
      __label__ = 8; break; //@line 817 "src/markdown.c"
    case 8: 
      var $47=$1; //@line 818 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $47; //@line 818 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_autolink_email["X"]=1;

function _char_autolink_www($ob, $rndr, $data, $offset, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $link;
      var $link_url;
      var $link_text;
      var $link_len;
      var $rewind=__stackBase__;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$3; //@line 774 "src/markdown.c"
      var $8=(($7)|0); //@line 774 "src/markdown.c"
      var $9=(($8+68)|0); //@line 774 "src/markdown.c"
      var $10=HEAP32[(($9)>>2)]; //@line 774 "src/markdown.c"
      var $11=(($10)|0)!=0; //@line 774 "src/markdown.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 774 "src/markdown.c"
    case 3: 
      var $13=$3; //@line 774 "src/markdown.c"
      var $14=(($13+428)|0); //@line 774 "src/markdown.c"
      var $15=HEAP32[(($14)>>2)]; //@line 774 "src/markdown.c"
      var $16=(($15)|0)!=0; //@line 774 "src/markdown.c"
      if ($16) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 774 "src/markdown.c"
    case 4: 
      $1=0; //@line 775 "src/markdown.c"
      __label__ = 11; break; //@line 775 "src/markdown.c"
    case 5: 
      var $19=$3; //@line 777 "src/markdown.c"
      var $20=_rndr_newbuf($19, 1); //@line 777 "src/markdown.c"
      $link=$20; //@line 777 "src/markdown.c"
      var $21=$link; //@line 779 "src/markdown.c"
      var $22=$4; //@line 779 "src/markdown.c"
      var $23=$5; //@line 779 "src/markdown.c"
      var $24=$6; //@line 779 "src/markdown.c"
      var $25=_sd_autolink__www($rewind, $21, $22, $23, $24, 0); //@line 779 "src/markdown.c"
      $link_len=$25; //@line 779 "src/markdown.c"
      var $26=(($25)>>>0) > 0; //@line 779 "src/markdown.c"
      if ($26) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 779 "src/markdown.c"
    case 6: 
      var $28=$3; //@line 780 "src/markdown.c"
      var $29=_rndr_newbuf($28, 1); //@line 780 "src/markdown.c"
      $link_url=$29; //@line 780 "src/markdown.c"
      var $30=$link_url; //@line 781 "src/markdown.c"
      _bufput($30, ((STRING_TABLE.__str29)|0), 7); //@line 781 "src/markdown.c"
      var $31=$link_url; //@line 782 "src/markdown.c"
      var $32=$link; //@line 782 "src/markdown.c"
      var $33=(($32)|0); //@line 782 "src/markdown.c"
      var $34=HEAP32[(($33)>>2)]; //@line 782 "src/markdown.c"
      var $35=$link; //@line 782 "src/markdown.c"
      var $36=(($35+4)|0); //@line 782 "src/markdown.c"
      var $37=HEAP32[(($36)>>2)]; //@line 782 "src/markdown.c"
      _bufput($31, $34, $37); //@line 782 "src/markdown.c"
      var $38=HEAP32[(($rewind)>>2)]; //@line 784 "src/markdown.c"
      var $39=$2; //@line 784 "src/markdown.c"
      var $40=(($39+4)|0); //@line 784 "src/markdown.c"
      var $41=HEAP32[(($40)>>2)]; //@line 784 "src/markdown.c"
      var $42=((($41)-($38))|0); //@line 784 "src/markdown.c"
      HEAP32[(($40)>>2)]=$42; //@line 784 "src/markdown.c"
      var $43=$3; //@line 785 "src/markdown.c"
      var $44=(($43)|0); //@line 785 "src/markdown.c"
      var $45=(($44+92)|0); //@line 785 "src/markdown.c"
      var $46=HEAP32[(($45)>>2)]; //@line 785 "src/markdown.c"
      var $47=(($46)|0)!=0; //@line 785 "src/markdown.c"
      if ($47) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 785 "src/markdown.c"
    case 7: 
      var $49=$3; //@line 786 "src/markdown.c"
      var $50=_rndr_newbuf($49, 1); //@line 786 "src/markdown.c"
      $link_text=$50; //@line 786 "src/markdown.c"
      var $51=$3; //@line 787 "src/markdown.c"
      var $52=(($51)|0); //@line 787 "src/markdown.c"
      var $53=(($52+92)|0); //@line 787 "src/markdown.c"
      var $54=HEAP32[(($53)>>2)]; //@line 787 "src/markdown.c"
      var $55=$link_text; //@line 787 "src/markdown.c"
      var $56=$link; //@line 787 "src/markdown.c"
      var $57=$3; //@line 787 "src/markdown.c"
      var $58=(($57+104)|0); //@line 787 "src/markdown.c"
      var $59=HEAP32[(($58)>>2)]; //@line 787 "src/markdown.c"
      FUNCTION_TABLE[$54]($55, $56, $59); //@line 787 "src/markdown.c"
      var $60=$3; //@line 788 "src/markdown.c"
      var $61=(($60)|0); //@line 788 "src/markdown.c"
      var $62=(($61+68)|0); //@line 788 "src/markdown.c"
      var $63=HEAP32[(($62)>>2)]; //@line 788 "src/markdown.c"
      var $64=$2; //@line 788 "src/markdown.c"
      var $65=$link_url; //@line 788 "src/markdown.c"
      var $66=$link_text; //@line 788 "src/markdown.c"
      var $67=$3; //@line 788 "src/markdown.c"
      var $68=(($67+104)|0); //@line 788 "src/markdown.c"
      var $69=HEAP32[(($68)>>2)]; //@line 788 "src/markdown.c"
      var $70=FUNCTION_TABLE[$63]($64, $65, 0, $66, $69); //@line 788 "src/markdown.c"
      var $71=$3; //@line 789 "src/markdown.c"
      _rndr_popbuf($71, 1); //@line 789 "src/markdown.c"
      __label__ = 9; break; //@line 790 "src/markdown.c"
    case 8: 
      var $73=$3; //@line 791 "src/markdown.c"
      var $74=(($73)|0); //@line 791 "src/markdown.c"
      var $75=(($74+68)|0); //@line 791 "src/markdown.c"
      var $76=HEAP32[(($75)>>2)]; //@line 791 "src/markdown.c"
      var $77=$2; //@line 791 "src/markdown.c"
      var $78=$link_url; //@line 791 "src/markdown.c"
      var $79=$link; //@line 791 "src/markdown.c"
      var $80=$3; //@line 791 "src/markdown.c"
      var $81=(($80+104)|0); //@line 791 "src/markdown.c"
      var $82=HEAP32[(($81)>>2)]; //@line 791 "src/markdown.c"
      var $83=FUNCTION_TABLE[$76]($77, $78, 0, $79, $82); //@line 791 "src/markdown.c"
      __label__ = 9; break;
    case 9: 
      var $85=$3; //@line 793 "src/markdown.c"
      _rndr_popbuf($85, 1); //@line 793 "src/markdown.c"
      __label__ = 10; break; //@line 794 "src/markdown.c"
    case 10: 
      var $87=$3; //@line 796 "src/markdown.c"
      _rndr_popbuf($87, 1); //@line 796 "src/markdown.c"
      var $88=$link_len; //@line 797 "src/markdown.c"
      $1=$88; //@line 797 "src/markdown.c"
      __label__ = 11; break; //@line 797 "src/markdown.c"
    case 11: 
      var $90=$1; //@line 798 "src/markdown.c"
      STACKTOP = __stackBase__;
      return $90; //@line 798 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_autolink_www["X"]=1;

function _char_superscript($ob, $rndr, $data, $offset, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $sup_start;
      var $sup_len;
      var $sup;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$offset;
      $6=$size;
      var $7=$3; //@line 1082 "src/markdown.c"
      var $8=(($7)|0); //@line 1082 "src/markdown.c"
      var $9=(($8+84)|0); //@line 1082 "src/markdown.c"
      var $10=HEAP32[(($9)>>2)]; //@line 1082 "src/markdown.c"
      var $11=(($10)|0)!=0; //@line 1082 "src/markdown.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 1082 "src/markdown.c"
    case 3: 
      $1=0; //@line 1083 "src/markdown.c"
      __label__ = 28; break; //@line 1083 "src/markdown.c"
    case 4: 
      var $14=$6; //@line 1085 "src/markdown.c"
      var $15=(($14)>>>0) < 2; //@line 1085 "src/markdown.c"
      if ($15) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1085 "src/markdown.c"
    case 5: 
      $1=0; //@line 1086 "src/markdown.c"
      __label__ = 28; break; //@line 1086 "src/markdown.c"
    case 6: 
      var $18=$4; //@line 1088 "src/markdown.c"
      var $19=(($18+1)|0); //@line 1088 "src/markdown.c"
      var $20=HEAPU8[($19)]; //@line 1088 "src/markdown.c"
      var $21=(($20)&255); //@line 1088 "src/markdown.c"
      var $22=(($21)|0)==40; //@line 1088 "src/markdown.c"
      if ($22) { __label__ = 7; break; } else { __label__ = 16; break; } //@line 1088 "src/markdown.c"
    case 7: 
      $sup_len=2; //@line 1089 "src/markdown.c"
      $sup_start=2; //@line 1089 "src/markdown.c"
      __label__ = 8; break; //@line 1091 "src/markdown.c"
    case 8: 
      var $25=$sup_len; //@line 1091 "src/markdown.c"
      var $26=$6; //@line 1091 "src/markdown.c"
      var $27=(($25)>>>0) < (($26)>>>0); //@line 1091 "src/markdown.c"
      if ($27) { __label__ = 9; break; } else { var $44 = 0;__label__ = 11; break; } //@line 1091 "src/markdown.c"
    case 9: 
      var $29=$sup_len; //@line 1091 "src/markdown.c"
      var $30=$4; //@line 1091 "src/markdown.c"
      var $31=(($30+$29)|0); //@line 1091 "src/markdown.c"
      var $32=HEAPU8[($31)]; //@line 1091 "src/markdown.c"
      var $33=(($32)&255); //@line 1091 "src/markdown.c"
      var $34=(($33)|0)!=41; //@line 1091 "src/markdown.c"
      if ($34) { __label__ = 10; break; } else { var $44 = 0;__label__ = 11; break; } //@line 1091 "src/markdown.c"
    case 10: 
      var $36=$sup_len; //@line 1091 "src/markdown.c"
      var $37=((($36)-(1))|0); //@line 1091 "src/markdown.c"
      var $38=$4; //@line 1091 "src/markdown.c"
      var $39=(($38+$37)|0); //@line 1091 "src/markdown.c"
      var $40=HEAPU8[($39)]; //@line 1091 "src/markdown.c"
      var $41=(($40)&255); //@line 1091 "src/markdown.c"
      var $42=(($41)|0)!=92; //@line 1091 "src/markdown.c"
      var $44 = $42;__label__ = 11; break;
    case 11: 
      var $44;
      if ($44) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $46=$sup_len; //@line 1092 "src/markdown.c"
      var $47=((($46)+(1))|0); //@line 1092 "src/markdown.c"
      $sup_len=$47; //@line 1092 "src/markdown.c"
      __label__ = 8; break; //@line 1092 "src/markdown.c"
    case 13: 
      var $49=$sup_len; //@line 1094 "src/markdown.c"
      var $50=$6; //@line 1094 "src/markdown.c"
      var $51=(($49)|0)==(($50)|0); //@line 1094 "src/markdown.c"
      if ($51) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1094 "src/markdown.c"
    case 14: 
      $1=0; //@line 1095 "src/markdown.c"
      __label__ = 28; break; //@line 1095 "src/markdown.c"
    case 15: 
      __label__ = 22; break; //@line 1096 "src/markdown.c"
    case 16: 
      $sup_len=1; //@line 1097 "src/markdown.c"
      $sup_start=1; //@line 1097 "src/markdown.c"
      __label__ = 17; break; //@line 1099 "src/markdown.c"
    case 17: 
      var $56=$sup_len; //@line 1099 "src/markdown.c"
      var $57=$6; //@line 1099 "src/markdown.c"
      var $58=(($56)>>>0) < (($57)>>>0); //@line 1099 "src/markdown.c"
      if ($58) { __label__ = 18; break; } else { var $69 = 0;__label__ = 19; break; } //@line 1099 "src/markdown.c"
    case 18: 
      var $60=$sup_len; //@line 1099 "src/markdown.c"
      var $61=$4; //@line 1099 "src/markdown.c"
      var $62=(($61+$60)|0); //@line 1099 "src/markdown.c"
      var $63=HEAPU8[($62)]; //@line 1099 "src/markdown.c"
      var $64=(($63)&255); //@line 1099 "src/markdown.c"
      var $65=__isspace($64); //@line 1099 "src/markdown.c"
      var $66=(($65)|0)!=0; //@line 1099 "src/markdown.c"
      var $67=$66 ^ 1; //@line 1099 "src/markdown.c"
      var $69 = $67;__label__ = 19; break;
    case 19: 
      var $69;
      if ($69) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      var $71=$sup_len; //@line 1100 "src/markdown.c"
      var $72=((($71)+(1))|0); //@line 1100 "src/markdown.c"
      $sup_len=$72; //@line 1100 "src/markdown.c"
      __label__ = 17; break; //@line 1100 "src/markdown.c"
    case 21: 
      __label__ = 22; break;
    case 22: 
      var $75=$sup_len; //@line 1103 "src/markdown.c"
      var $76=$sup_start; //@line 1103 "src/markdown.c"
      var $77=((($75)-($76))|0); //@line 1103 "src/markdown.c"
      var $78=(($77)|0)==0; //@line 1103 "src/markdown.c"
      if ($78) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1103 "src/markdown.c"
    case 23: 
      var $80=$sup_start; //@line 1104 "src/markdown.c"
      var $81=(($80)|0)==2; //@line 1104 "src/markdown.c"
      var $82=$81 ? 3 : 0; //@line 1104 "src/markdown.c"
      $1=$82; //@line 1104 "src/markdown.c"
      __label__ = 28; break; //@line 1104 "src/markdown.c"
    case 24: 
      var $84=$3; //@line 1106 "src/markdown.c"
      var $85=_rndr_newbuf($84, 1); //@line 1106 "src/markdown.c"
      $sup=$85; //@line 1106 "src/markdown.c"
      var $86=$sup; //@line 1107 "src/markdown.c"
      var $87=$3; //@line 1107 "src/markdown.c"
      var $88=$4; //@line 1107 "src/markdown.c"
      var $89=$sup_start; //@line 1107 "src/markdown.c"
      var $90=(($88+$89)|0); //@line 1107 "src/markdown.c"
      var $91=$sup_len; //@line 1107 "src/markdown.c"
      var $92=$sup_start; //@line 1107 "src/markdown.c"
      var $93=((($91)-($92))|0); //@line 1107 "src/markdown.c"
      _parse_inline($86, $87, $90, $93); //@line 1107 "src/markdown.c"
      var $94=$3; //@line 1108 "src/markdown.c"
      var $95=(($94)|0); //@line 1108 "src/markdown.c"
      var $96=(($95+84)|0); //@line 1108 "src/markdown.c"
      var $97=HEAP32[(($96)>>2)]; //@line 1108 "src/markdown.c"
      var $98=$2; //@line 1108 "src/markdown.c"
      var $99=$sup; //@line 1108 "src/markdown.c"
      var $100=$3; //@line 1108 "src/markdown.c"
      var $101=(($100+104)|0); //@line 1108 "src/markdown.c"
      var $102=HEAP32[(($101)>>2)]; //@line 1108 "src/markdown.c"
      var $103=FUNCTION_TABLE[$97]($98, $99, $102); //@line 1108 "src/markdown.c"
      var $104=$3; //@line 1109 "src/markdown.c"
      _rndr_popbuf($104, 1); //@line 1109 "src/markdown.c"
      var $105=$sup_start; //@line 1111 "src/markdown.c"
      var $106=(($105)|0)==2; //@line 1111 "src/markdown.c"
      if ($106) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1111 "src/markdown.c"
    case 25: 
      var $108=$sup_len; //@line 1111 "src/markdown.c"
      var $109=((($108)+(1))|0); //@line 1111 "src/markdown.c"
      var $113 = $109;__label__ = 27; break; //@line 1111 "src/markdown.c"
    case 26: 
      var $111=$sup_len; //@line 1111 "src/markdown.c"
      var $113 = $111;__label__ = 27; break; //@line 1111 "src/markdown.c"
    case 27: 
      var $113; //@line 1111 "src/markdown.c"
      $1=$113; //@line 1111 "src/markdown.c"
      __label__ = 28; break; //@line 1111 "src/markdown.c"
    case 28: 
      var $115=$1; //@line 1112 "src/markdown.c"
      ;
      return $115; //@line 1112 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_char_superscript["X"]=1;

function _tag_length($data, $size, $autolink) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $j;
      $2=$data;
      $3=$size;
      $4=$autolink;
      var $5=$3; //@line 296 "src/markdown.c"
      var $6=(($5)>>>0) < 3; //@line 296 "src/markdown.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 296 "src/markdown.c"
    case 3: 
      $1=0; //@line 296 "src/markdown.c"
      __label__ = 56; break; //@line 296 "src/markdown.c"
    case 4: 
      var $9=$2; //@line 299 "src/markdown.c"
      var $10=(($9)|0); //@line 299 "src/markdown.c"
      var $11=HEAPU8[($10)]; //@line 299 "src/markdown.c"
      var $12=(($11)&255); //@line 299 "src/markdown.c"
      var $13=(($12)|0)!=60; //@line 299 "src/markdown.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 299 "src/markdown.c"
    case 5: 
      $1=0; //@line 299 "src/markdown.c"
      __label__ = 56; break; //@line 299 "src/markdown.c"
    case 6: 
      var $16=$2; //@line 300 "src/markdown.c"
      var $17=(($16+1)|0); //@line 300 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 300 "src/markdown.c"
      var $19=(($18)&255); //@line 300 "src/markdown.c"
      var $20=(($19)|0)==47; //@line 300 "src/markdown.c"
      var $21=$20 ? 2 : 1; //@line 300 "src/markdown.c"
      $i=$21; //@line 300 "src/markdown.c"
      var $22=$i; //@line 302 "src/markdown.c"
      var $23=$2; //@line 302 "src/markdown.c"
      var $24=(($23+$22)|0); //@line 302 "src/markdown.c"
      var $25=HEAPU8[($24)]; //@line 302 "src/markdown.c"
      var $26=(($25)&255); //@line 302 "src/markdown.c"
      var $27=_isalnum($26); //@line 302 "src/markdown.c"
      var $28=(($27)|0)!=0; //@line 302 "src/markdown.c"
      if ($28) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 302 "src/markdown.c"
    case 7: 
      $1=0; //@line 303 "src/markdown.c"
      __label__ = 56; break; //@line 303 "src/markdown.c"
    case 8: 
      var $31=$4; //@line 306 "src/markdown.c"
      HEAP32[(($31)>>2)]=0; //@line 306 "src/markdown.c"
      __label__ = 9; break; //@line 309 "src/markdown.c"
    case 9: 
      var $33=$i; //@line 309 "src/markdown.c"
      var $34=$3; //@line 309 "src/markdown.c"
      var $35=(($33)>>>0) < (($34)>>>0); //@line 309 "src/markdown.c"
      if ($35) { __label__ = 10; break; } else { var $68 = 0;__label__ = 15; break; } //@line 309 "src/markdown.c"
    case 10: 
      var $37=$i; //@line 309 "src/markdown.c"
      var $38=$2; //@line 309 "src/markdown.c"
      var $39=(($38+$37)|0); //@line 309 "src/markdown.c"
      var $40=HEAPU8[($39)]; //@line 309 "src/markdown.c"
      var $41=(($40)&255); //@line 309 "src/markdown.c"
      var $42=_isalnum($41); //@line 309 "src/markdown.c"
      var $43=(($42)|0)!=0; //@line 309 "src/markdown.c"
      if ($43) { var $66 = 1;__label__ = 14; break; } else { __label__ = 11; break; } //@line 309 "src/markdown.c"
    case 11: 
      var $45=$i; //@line 309 "src/markdown.c"
      var $46=$2; //@line 309 "src/markdown.c"
      var $47=(($46+$45)|0); //@line 309 "src/markdown.c"
      var $48=HEAPU8[($47)]; //@line 309 "src/markdown.c"
      var $49=(($48)&255); //@line 309 "src/markdown.c"
      var $50=(($49)|0)==46; //@line 309 "src/markdown.c"
      if ($50) { var $66 = 1;__label__ = 14; break; } else { __label__ = 12; break; } //@line 309 "src/markdown.c"
    case 12: 
      var $52=$i; //@line 309 "src/markdown.c"
      var $53=$2; //@line 309 "src/markdown.c"
      var $54=(($53+$52)|0); //@line 309 "src/markdown.c"
      var $55=HEAPU8[($54)]; //@line 309 "src/markdown.c"
      var $56=(($55)&255); //@line 309 "src/markdown.c"
      var $57=(($56)|0)==43; //@line 309 "src/markdown.c"
      if ($57) { var $66 = 1;__label__ = 14; break; } else { __label__ = 13; break; } //@line 309 "src/markdown.c"
    case 13: 
      var $59=$i; //@line 309 "src/markdown.c"
      var $60=$2; //@line 309 "src/markdown.c"
      var $61=(($60+$59)|0); //@line 309 "src/markdown.c"
      var $62=HEAPU8[($61)]; //@line 309 "src/markdown.c"
      var $63=(($62)&255); //@line 309 "src/markdown.c"
      var $64=(($63)|0)==45; //@line 309 "src/markdown.c"
      var $66 = $64;__label__ = 14; break; //@line 309 "src/markdown.c"
    case 14: 
      var $66;
      var $68 = $66;__label__ = 15; break;
    case 15: 
      var $68;
      if ($68) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $70=$i; //@line 310 "src/markdown.c"
      var $71=((($70)+(1))|0); //@line 310 "src/markdown.c"
      $i=$71; //@line 310 "src/markdown.c"
      __label__ = 9; break; //@line 310 "src/markdown.c"
    case 17: 
      var $73=$i; //@line 312 "src/markdown.c"
      var $74=(($73)>>>0) > 1; //@line 312 "src/markdown.c"
      if ($74) { __label__ = 18; break; } else { __label__ = 22; break; } //@line 312 "src/markdown.c"
    case 18: 
      var $76=$i; //@line 312 "src/markdown.c"
      var $77=$2; //@line 312 "src/markdown.c"
      var $78=(($77+$76)|0); //@line 312 "src/markdown.c"
      var $79=HEAPU8[($78)]; //@line 312 "src/markdown.c"
      var $80=(($79)&255); //@line 312 "src/markdown.c"
      var $81=(($80)|0)==64; //@line 312 "src/markdown.c"
      if ($81) { __label__ = 19; break; } else { __label__ = 22; break; } //@line 312 "src/markdown.c"
    case 19: 
      var $83=$2; //@line 313 "src/markdown.c"
      var $84=$i; //@line 313 "src/markdown.c"
      var $85=(($83+$84)|0); //@line 313 "src/markdown.c"
      var $86=$3; //@line 313 "src/markdown.c"
      var $87=$i; //@line 313 "src/markdown.c"
      var $88=((($86)-($87))|0); //@line 313 "src/markdown.c"
      var $89=_is_mail_autolink($85, $88); //@line 313 "src/markdown.c"
      $j=$89; //@line 313 "src/markdown.c"
      var $90=(($89)|0)!=0; //@line 313 "src/markdown.c"
      if ($90) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 313 "src/markdown.c"
    case 20: 
      var $92=$4; //@line 314 "src/markdown.c"
      HEAP32[(($92)>>2)]=2; //@line 314 "src/markdown.c"
      var $93=$i; //@line 315 "src/markdown.c"
      var $94=$j; //@line 315 "src/markdown.c"
      var $95=((($93)+($94))|0); //@line 315 "src/markdown.c"
      $1=$95; //@line 315 "src/markdown.c"
      __label__ = 56; break; //@line 315 "src/markdown.c"
    case 21: 
      __label__ = 22; break; //@line 317 "src/markdown.c"
    case 22: 
      var $98=$i; //@line 319 "src/markdown.c"
      var $99=(($98)>>>0) > 2; //@line 319 "src/markdown.c"
      if ($99) { __label__ = 23; break; } else { __label__ = 25; break; } //@line 319 "src/markdown.c"
    case 23: 
      var $101=$i; //@line 319 "src/markdown.c"
      var $102=$2; //@line 319 "src/markdown.c"
      var $103=(($102+$101)|0); //@line 319 "src/markdown.c"
      var $104=HEAPU8[($103)]; //@line 319 "src/markdown.c"
      var $105=(($104)&255); //@line 319 "src/markdown.c"
      var $106=(($105)|0)==58; //@line 319 "src/markdown.c"
      if ($106) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 319 "src/markdown.c"
    case 24: 
      var $108=$4; //@line 320 "src/markdown.c"
      HEAP32[(($108)>>2)]=1; //@line 320 "src/markdown.c"
      var $109=$i; //@line 321 "src/markdown.c"
      var $110=((($109)+(1))|0); //@line 321 "src/markdown.c"
      $i=$110; //@line 321 "src/markdown.c"
      __label__ = 25; break; //@line 322 "src/markdown.c"
    case 25: 
      var $112=$i; //@line 325 "src/markdown.c"
      var $113=$3; //@line 325 "src/markdown.c"
      var $114=(($112)>>>0) >= (($113)>>>0); //@line 325 "src/markdown.c"
      if ($114) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 325 "src/markdown.c"
    case 26: 
      var $116=$4; //@line 326 "src/markdown.c"
      HEAP32[(($116)>>2)]=0; //@line 326 "src/markdown.c"
      __label__ = 48; break; //@line 326 "src/markdown.c"
    case 27: 
      var $118=$4; //@line 328 "src/markdown.c"
      var $119=HEAP32[(($118)>>2)]; //@line 328 "src/markdown.c"
      var $120=(($119)|0)!=0; //@line 328 "src/markdown.c"
      if ($120) { __label__ = 28; break; } else { __label__ = 47; break; } //@line 328 "src/markdown.c"
    case 28: 
      var $122=$i; //@line 329 "src/markdown.c"
      $j=$122; //@line 329 "src/markdown.c"
      __label__ = 29; break; //@line 331 "src/markdown.c"
    case 29: 
      var $124=$i; //@line 331 "src/markdown.c"
      var $125=$3; //@line 331 "src/markdown.c"
      var $126=(($124)>>>0) < (($125)>>>0); //@line 331 "src/markdown.c"
      if ($126) { __label__ = 30; break; } else { __label__ = 41; break; } //@line 331 "src/markdown.c"
    case 30: 
      var $128=$i; //@line 332 "src/markdown.c"
      var $129=$2; //@line 332 "src/markdown.c"
      var $130=(($129+$128)|0); //@line 332 "src/markdown.c"
      var $131=HEAPU8[($130)]; //@line 332 "src/markdown.c"
      var $132=(($131)&255); //@line 332 "src/markdown.c"
      var $133=(($132)|0)==92; //@line 332 "src/markdown.c"
      if ($133) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 332 "src/markdown.c"
    case 31: 
      var $135=$i; //@line 332 "src/markdown.c"
      var $136=((($135)+(2))|0); //@line 332 "src/markdown.c"
      $i=$136; //@line 332 "src/markdown.c"
      __label__ = 40; break; //@line 332 "src/markdown.c"
    case 32: 
      var $138=$i; //@line 333 "src/markdown.c"
      var $139=$2; //@line 333 "src/markdown.c"
      var $140=(($139+$138)|0); //@line 333 "src/markdown.c"
      var $141=HEAPU8[($140)]; //@line 333 "src/markdown.c"
      var $142=(($141)&255); //@line 333 "src/markdown.c"
      var $143=(($142)|0)==62; //@line 333 "src/markdown.c"
      if ($143) { __label__ = 37; break; } else { __label__ = 33; break; } //@line 333 "src/markdown.c"
    case 33: 
      var $145=$i; //@line 333 "src/markdown.c"
      var $146=$2; //@line 333 "src/markdown.c"
      var $147=(($146+$145)|0); //@line 333 "src/markdown.c"
      var $148=HEAPU8[($147)]; //@line 333 "src/markdown.c"
      var $149=(($148)&255); //@line 333 "src/markdown.c"
      var $150=(($149)|0)==39; //@line 333 "src/markdown.c"
      if ($150) { __label__ = 37; break; } else { __label__ = 34; break; } //@line 333 "src/markdown.c"
    case 34: 
      var $152=$i; //@line 333 "src/markdown.c"
      var $153=$2; //@line 333 "src/markdown.c"
      var $154=(($153+$152)|0); //@line 333 "src/markdown.c"
      var $155=HEAPU8[($154)]; //@line 333 "src/markdown.c"
      var $156=(($155)&255); //@line 333 "src/markdown.c"
      var $157=(($156)|0)==34; //@line 333 "src/markdown.c"
      if ($157) { __label__ = 37; break; } else { __label__ = 35; break; } //@line 333 "src/markdown.c"
    case 35: 
      var $159=$i; //@line 333 "src/markdown.c"
      var $160=$2; //@line 333 "src/markdown.c"
      var $161=(($160+$159)|0); //@line 333 "src/markdown.c"
      var $162=HEAPU8[($161)]; //@line 333 "src/markdown.c"
      var $163=(($162)&255); //@line 333 "src/markdown.c"
      var $164=(($163)|0)==32; //@line 333 "src/markdown.c"
      if ($164) { __label__ = 37; break; } else { __label__ = 36; break; } //@line 333 "src/markdown.c"
    case 36: 
      var $166=$i; //@line 333 "src/markdown.c"
      var $167=$2; //@line 333 "src/markdown.c"
      var $168=(($167+$166)|0); //@line 333 "src/markdown.c"
      var $169=HEAPU8[($168)]; //@line 333 "src/markdown.c"
      var $170=(($169)&255); //@line 333 "src/markdown.c"
      var $171=(($170)|0)==10; //@line 333 "src/markdown.c"
      if ($171) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 333 "src/markdown.c"
    case 37: 
      __label__ = 41; break; //@line 335 "src/markdown.c"
    case 38: 
      var $174=$i; //@line 336 "src/markdown.c"
      var $175=((($174)+(1))|0); //@line 336 "src/markdown.c"
      $i=$175; //@line 336 "src/markdown.c"
      __label__ = 39; break;
    case 39: 
      __label__ = 40; break;
    case 40: 
      __label__ = 29; break; //@line 337 "src/markdown.c"
    case 41: 
      var $179=$i; //@line 339 "src/markdown.c"
      var $180=$3; //@line 339 "src/markdown.c"
      var $181=(($179)>>>0) >= (($180)>>>0); //@line 339 "src/markdown.c"
      if ($181) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 339 "src/markdown.c"
    case 42: 
      $1=0; //@line 339 "src/markdown.c"
      __label__ = 56; break; //@line 339 "src/markdown.c"
    case 43: 
      var $184=$i; //@line 340 "src/markdown.c"
      var $185=$j; //@line 340 "src/markdown.c"
      var $186=(($184)>>>0) > (($185)>>>0); //@line 340 "src/markdown.c"
      if ($186) { __label__ = 44; break; } else { __label__ = 46; break; } //@line 340 "src/markdown.c"
    case 44: 
      var $188=$i; //@line 340 "src/markdown.c"
      var $189=$2; //@line 340 "src/markdown.c"
      var $190=(($189+$188)|0); //@line 340 "src/markdown.c"
      var $191=HEAPU8[($190)]; //@line 340 "src/markdown.c"
      var $192=(($191)&255); //@line 340 "src/markdown.c"
      var $193=(($192)|0)==62; //@line 340 "src/markdown.c"
      if ($193) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 340 "src/markdown.c"
    case 45: 
      var $195=$i; //@line 340 "src/markdown.c"
      var $196=((($195)+(1))|0); //@line 340 "src/markdown.c"
      $1=$196; //@line 340 "src/markdown.c"
      __label__ = 56; break; //@line 340 "src/markdown.c"
    case 46: 
      var $198=$4; //@line 342 "src/markdown.c"
      HEAP32[(($198)>>2)]=0; //@line 342 "src/markdown.c"
      __label__ = 47; break; //@line 343 "src/markdown.c"
    case 47: 
      __label__ = 48; break;
    case 48: 
      __label__ = 49; break; //@line 346 "src/markdown.c"
    case 49: 
      var $202=$i; //@line 346 "src/markdown.c"
      var $203=$3; //@line 346 "src/markdown.c"
      var $204=(($202)>>>0) < (($203)>>>0); //@line 346 "src/markdown.c"
      if ($204) { __label__ = 50; break; } else { var $213 = 0;__label__ = 51; break; } //@line 346 "src/markdown.c"
    case 50: 
      var $206=$i; //@line 346 "src/markdown.c"
      var $207=$2; //@line 346 "src/markdown.c"
      var $208=(($207+$206)|0); //@line 346 "src/markdown.c"
      var $209=HEAPU8[($208)]; //@line 346 "src/markdown.c"
      var $210=(($209)&255); //@line 346 "src/markdown.c"
      var $211=(($210)|0)!=62; //@line 346 "src/markdown.c"
      var $213 = $211;__label__ = 51; break;
    case 51: 
      var $213;
      if ($213) { __label__ = 52; break; } else { __label__ = 53; break; }
    case 52: 
      var $215=$i; //@line 346 "src/markdown.c"
      var $216=((($215)+(1))|0); //@line 346 "src/markdown.c"
      $i=$216; //@line 346 "src/markdown.c"
      __label__ = 49; break; //@line 346 "src/markdown.c"
    case 53: 
      var $218=$i; //@line 347 "src/markdown.c"
      var $219=$3; //@line 347 "src/markdown.c"
      var $220=(($218)>>>0) >= (($219)>>>0); //@line 347 "src/markdown.c"
      if ($220) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 347 "src/markdown.c"
    case 54: 
      $1=0; //@line 347 "src/markdown.c"
      __label__ = 56; break; //@line 347 "src/markdown.c"
    case 55: 
      var $223=$i; //@line 348 "src/markdown.c"
      var $224=((($223)+(1))|0); //@line 348 "src/markdown.c"
      $1=$224; //@line 348 "src/markdown.c"
      __label__ = 56; break; //@line 348 "src/markdown.c"
    case 56: 
      var $226=$1; //@line 349 "src/markdown.c"
      ;
      return $226; //@line 349 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tag_length["X"]=1;

function _unscape_text($ob, $src) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $i;
      var $org;
      $1=$ob;
      $2=$src;
      $i=0; //@line 153 "src/markdown.c"
      __label__ = 3; break; //@line 154 "src/markdown.c"
    case 3: 
      var $4=$i; //@line 154 "src/markdown.c"
      var $5=$2; //@line 154 "src/markdown.c"
      var $6=(($5+4)|0); //@line 154 "src/markdown.c"
      var $7=HEAPU32[(($6)>>2)]; //@line 154 "src/markdown.c"
      var $8=(($4)>>>0) < (($7)>>>0); //@line 154 "src/markdown.c"
      if ($8) { __label__ = 4; break; } else { __label__ = 14; break; } //@line 154 "src/markdown.c"
    case 4: 
      var $10=$i; //@line 155 "src/markdown.c"
      $org=$10; //@line 155 "src/markdown.c"
      __label__ = 5; break; //@line 156 "src/markdown.c"
    case 5: 
      var $12=$i; //@line 156 "src/markdown.c"
      var $13=$2; //@line 156 "src/markdown.c"
      var $14=(($13+4)|0); //@line 156 "src/markdown.c"
      var $15=HEAPU32[(($14)>>2)]; //@line 156 "src/markdown.c"
      var $16=(($12)>>>0) < (($15)>>>0); //@line 156 "src/markdown.c"
      if ($16) { __label__ = 6; break; } else { var $27 = 0;__label__ = 7; break; } //@line 156 "src/markdown.c"
    case 6: 
      var $18=$i; //@line 156 "src/markdown.c"
      var $19=$2; //@line 156 "src/markdown.c"
      var $20=(($19)|0); //@line 156 "src/markdown.c"
      var $21=HEAP32[(($20)>>2)]; //@line 156 "src/markdown.c"
      var $22=(($21+$18)|0); //@line 156 "src/markdown.c"
      var $23=HEAPU8[($22)]; //@line 156 "src/markdown.c"
      var $24=(($23)&255); //@line 156 "src/markdown.c"
      var $25=(($24)|0)!=92; //@line 156 "src/markdown.c"
      var $27 = $25;__label__ = 7; break;
    case 7: 
      var $27;
      if ($27) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $29=$i; //@line 157 "src/markdown.c"
      var $30=((($29)+(1))|0); //@line 157 "src/markdown.c"
      $i=$30; //@line 157 "src/markdown.c"
      __label__ = 5; break; //@line 157 "src/markdown.c"
    case 9: 
      var $32=$i; //@line 159 "src/markdown.c"
      var $33=$org; //@line 159 "src/markdown.c"
      var $34=(($32)>>>0) > (($33)>>>0); //@line 159 "src/markdown.c"
      if ($34) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 159 "src/markdown.c"
    case 10: 
      var $36=$1; //@line 160 "src/markdown.c"
      var $37=$2; //@line 160 "src/markdown.c"
      var $38=(($37)|0); //@line 160 "src/markdown.c"
      var $39=HEAP32[(($38)>>2)]; //@line 160 "src/markdown.c"
      var $40=$org; //@line 160 "src/markdown.c"
      var $41=(($39+$40)|0); //@line 160 "src/markdown.c"
      var $42=$i; //@line 160 "src/markdown.c"
      var $43=$org; //@line 160 "src/markdown.c"
      var $44=((($42)-($43))|0); //@line 160 "src/markdown.c"
      _bufput($36, $41, $44); //@line 160 "src/markdown.c"
      __label__ = 11; break; //@line 160 "src/markdown.c"
    case 11: 
      var $46=$i; //@line 162 "src/markdown.c"
      var $47=((($46)+(1))|0); //@line 162 "src/markdown.c"
      var $48=$2; //@line 162 "src/markdown.c"
      var $49=(($48+4)|0); //@line 162 "src/markdown.c"
      var $50=HEAPU32[(($49)>>2)]; //@line 162 "src/markdown.c"
      var $51=(($47)>>>0) >= (($50)>>>0); //@line 162 "src/markdown.c"
      if ($51) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 162 "src/markdown.c"
    case 12: 
      __label__ = 14; break; //@line 163 "src/markdown.c"
    case 13: 
      var $54=$1; //@line 165 "src/markdown.c"
      var $55=$i; //@line 165 "src/markdown.c"
      var $56=((($55)+(1))|0); //@line 165 "src/markdown.c"
      var $57=$2; //@line 165 "src/markdown.c"
      var $58=(($57)|0); //@line 165 "src/markdown.c"
      var $59=HEAP32[(($58)>>2)]; //@line 165 "src/markdown.c"
      var $60=(($59+$56)|0); //@line 165 "src/markdown.c"
      var $61=HEAPU8[($60)]; //@line 165 "src/markdown.c"
      var $62=(($61)&255); //@line 165 "src/markdown.c"
      _bufputc($54, $62); //@line 165 "src/markdown.c"
      var $63=$i; //@line 166 "src/markdown.c"
      var $64=((($63)+(2))|0); //@line 166 "src/markdown.c"
      $i=$64; //@line 166 "src/markdown.c"
      __label__ = 3; break; //@line 167 "src/markdown.c"
    case 14: 
      ;
      return; //@line 168 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_unscape_text["X"]=1;

function _is_mail_autolink($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $nb;
      $2=$data;
      $3=$size;
      $i=0; //@line 262 "src/markdown.c"
      $nb=0; //@line 262 "src/markdown.c"
      $i=0; //@line 265 "src/markdown.c"
      __label__ = 3; break; //@line 265 "src/markdown.c"
    case 3: 
      var $5=$i; //@line 265 "src/markdown.c"
      var $6=$3; //@line 265 "src/markdown.c"
      var $7=(($5)>>>0) < (($6)>>>0); //@line 265 "src/markdown.c"
      if ($7) { __label__ = 4; break; } else { __label__ = 16; break; } //@line 265 "src/markdown.c"
    case 4: 
      var $9=$i; //@line 266 "src/markdown.c"
      var $10=$2; //@line 266 "src/markdown.c"
      var $11=(($10+$9)|0); //@line 266 "src/markdown.c"
      var $12=HEAPU8[($11)]; //@line 266 "src/markdown.c"
      var $13=(($12)&255); //@line 266 "src/markdown.c"
      var $14=_isalnum($13); //@line 266 "src/markdown.c"
      var $15=(($14)|0)!=0; //@line 266 "src/markdown.c"
      if ($15) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 266 "src/markdown.c"
    case 5: 
      __label__ = 15; break; //@line 267 "src/markdown.c"
    case 6: 
      var $18=$i; //@line 269 "src/markdown.c"
      var $19=$2; //@line 269 "src/markdown.c"
      var $20=(($19+$18)|0); //@line 269 "src/markdown.c"
      var $21=HEAPU8[($20)]; //@line 269 "src/markdown.c"
      var $22=(($21)&255); //@line 269 "src/markdown.c"
      if ((($22)|0) == 64) {
        __label__ = 7; break;
      }
      else if ((($22)|0) == 45 || (($22)|0) == 46 || (($22)|0) == 95) {
        __label__ = 8; break;
      }
      else if ((($22)|0) == 62) {
        __label__ = 9; break;
      }
      else {
      __label__ = 13; break;
      }
      
    case 7: 
      var $24=$nb; //@line 271 "src/markdown.c"
      var $25=((($24)+(1))|0); //@line 271 "src/markdown.c"
      $nb=$25; //@line 271 "src/markdown.c"
      __label__ = 8; break; //@line 271 "src/markdown.c"
    case 8: 
      __label__ = 14; break; //@line 276 "src/markdown.c"
    case 9: 
      var $28=$nb; //@line 279 "src/markdown.c"
      var $29=(($28)|0)==1; //@line 279 "src/markdown.c"
      if ($29) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 279 "src/markdown.c"
    case 10: 
      var $31=$i; //@line 279 "src/markdown.c"
      var $32=((($31)+(1))|0); //@line 279 "src/markdown.c"
      var $35 = $32;__label__ = 12; break; //@line 279 "src/markdown.c"
    case 11: 
      var $35 = 0;__label__ = 12; break; //@line 279 "src/markdown.c"
    case 12: 
      var $35; //@line 279 "src/markdown.c"
      $1=$35; //@line 279 "src/markdown.c"
      __label__ = 17; break; //@line 279 "src/markdown.c"
    case 13: 
      $1=0; //@line 282 "src/markdown.c"
      __label__ = 17; break; //@line 282 "src/markdown.c"
    case 14: 
      __label__ = 15; break; //@line 284 "src/markdown.c"
    case 15: 
      var $39=$i; //@line 265 "src/markdown.c"
      var $40=((($39)+(1))|0); //@line 265 "src/markdown.c"
      $i=$40; //@line 265 "src/markdown.c"
      __label__ = 3; break; //@line 265 "src/markdown.c"
    case 16: 
      $1=0; //@line 286 "src/markdown.c"
      __label__ = 17; break; //@line 286 "src/markdown.c"
    case 17: 
      var $43=$1; //@line 287 "src/markdown.c"
      ;
      return $43; //@line 287 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_is_mail_autolink["X"]=1;

function _find_link_ref($references, $name, $length) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $hash;
      var $ref;
      $2=$references;
      $3=$name;
      $4=$length;
      var $5=$3; //@line 202 "src/markdown.c"
      var $6=$4; //@line 202 "src/markdown.c"
      var $7=_hash_link_ref($5, $6); //@line 202 "src/markdown.c"
      $hash=$7; //@line 202 "src/markdown.c"
      $ref=0; //@line 203 "src/markdown.c"
      var $8=$hash; //@line 205 "src/markdown.c"
      var $9=((($8)>>>0))%(8); //@line 205 "src/markdown.c"
      var $10=$2; //@line 205 "src/markdown.c"
      var $11=(($10+($9<<2))|0); //@line 205 "src/markdown.c"
      var $12=HEAP32[(($11)>>2)]; //@line 205 "src/markdown.c"
      $ref=$12; //@line 205 "src/markdown.c"
      __label__ = 3; break; //@line 207 "src/markdown.c"
    case 3: 
      var $14=$ref; //@line 207 "src/markdown.c"
      var $15=(($14)|0)!=0; //@line 207 "src/markdown.c"
      if ($15) { __label__ = 4; break; } else { __label__ = 7; break; } //@line 207 "src/markdown.c"
    case 4: 
      var $17=$ref; //@line 208 "src/markdown.c"
      var $18=(($17)|0); //@line 208 "src/markdown.c"
      var $19=HEAP32[(($18)>>2)]; //@line 208 "src/markdown.c"
      var $20=$hash; //@line 208 "src/markdown.c"
      var $21=(($19)|0)==(($20)|0); //@line 208 "src/markdown.c"
      if ($21) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 208 "src/markdown.c"
    case 5: 
      var $23=$ref; //@line 209 "src/markdown.c"
      $1=$23; //@line 209 "src/markdown.c"
      __label__ = 8; break; //@line 209 "src/markdown.c"
    case 6: 
      var $25=$ref; //@line 211 "src/markdown.c"
      var $26=(($25+12)|0); //@line 211 "src/markdown.c"
      var $27=HEAP32[(($26)>>2)]; //@line 211 "src/markdown.c"
      $ref=$27; //@line 211 "src/markdown.c"
      __label__ = 3; break; //@line 212 "src/markdown.c"
    case 7: 
      $1=0; //@line 214 "src/markdown.c"
      __label__ = 8; break; //@line 214 "src/markdown.c"
    case 8: 
      var $30=$1; //@line 215 "src/markdown.c"
      ;
      return $30; //@line 215 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _hash_link_ref($link_ref, $length) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $i;
      var $hash;
      $1=$link_ref;
      $2=$length;
      $hash=0; //@line 174 "src/markdown.c"
      $i=0; //@line 176 "src/markdown.c"
      __label__ = 3; break; //@line 176 "src/markdown.c"
    case 3: 
      var $4=$i; //@line 176 "src/markdown.c"
      var $5=$2; //@line 176 "src/markdown.c"
      var $6=(($4)>>>0) < (($5)>>>0); //@line 176 "src/markdown.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 176 "src/markdown.c"
    case 4: 
      var $8=$i; //@line 177 "src/markdown.c"
      var $9=$1; //@line 177 "src/markdown.c"
      var $10=(($9+$8)|0); //@line 177 "src/markdown.c"
      var $11=HEAPU8[($10)]; //@line 177 "src/markdown.c"
      var $12=(($11)&255); //@line 177 "src/markdown.c"
      var $13=_tolower($12); //@line 177 "src/markdown.c"
      var $14=$hash; //@line 177 "src/markdown.c"
      var $15=$14 << 6; //@line 177 "src/markdown.c"
      var $16=((($13)+($15))|0); //@line 177 "src/markdown.c"
      var $17=$hash; //@line 177 "src/markdown.c"
      var $18=$17 << 16; //@line 177 "src/markdown.c"
      var $19=((($16)+($18))|0); //@line 177 "src/markdown.c"
      var $20=$hash; //@line 177 "src/markdown.c"
      var $21=((($19)-($20))|0); //@line 177 "src/markdown.c"
      $hash=$21; //@line 177 "src/markdown.c"
      __label__ = 5; break; //@line 177 "src/markdown.c"
    case 5: 
      var $23=$i; //@line 176 "src/markdown.c"
      var $24=((($23)+(1))|0); //@line 176 "src/markdown.c"
      $i=$24; //@line 176 "src/markdown.c"
      __label__ = 3; break; //@line 176 "src/markdown.c"
    case 6: 
      var $26=$hash; //@line 179 "src/markdown.c"
      ;
      return $26; //@line 179 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _parse_emph1($ob, $rndr, $data, $size, $c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $i;
      var $len;
      var $work;
      var $r;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$c;
      $i=0; //@line 486 "src/markdown.c"
      $work=0; //@line 487 "src/markdown.c"
      var $7=$3; //@line 490 "src/markdown.c"
      var $8=(($7)|0); //@line 490 "src/markdown.c"
      var $9=(($8+56)|0); //@line 490 "src/markdown.c"
      var $10=HEAP32[(($9)>>2)]; //@line 490 "src/markdown.c"
      var $11=(($10)|0)!=0; //@line 490 "src/markdown.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 490 "src/markdown.c"
    case 3: 
      $1=0; //@line 490 "src/markdown.c"
      __label__ = 27; break; //@line 490 "src/markdown.c"
    case 4: 
      var $14=$5; //@line 493 "src/markdown.c"
      var $15=(($14)>>>0) > 1; //@line 493 "src/markdown.c"
      if ($15) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 493 "src/markdown.c"
    case 5: 
      var $17=$4; //@line 493 "src/markdown.c"
      var $18=(($17)|0); //@line 493 "src/markdown.c"
      var $19=HEAPU8[($18)]; //@line 493 "src/markdown.c"
      var $20=(($19)&255); //@line 493 "src/markdown.c"
      var $21=$6; //@line 493 "src/markdown.c"
      var $22=(($21)&255); //@line 493 "src/markdown.c"
      var $23=(($20)|0)==(($22)|0); //@line 493 "src/markdown.c"
      if ($23) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 493 "src/markdown.c"
    case 6: 
      var $25=$4; //@line 493 "src/markdown.c"
      var $26=(($25+1)|0); //@line 493 "src/markdown.c"
      var $27=HEAPU8[($26)]; //@line 493 "src/markdown.c"
      var $28=(($27)&255); //@line 493 "src/markdown.c"
      var $29=$6; //@line 493 "src/markdown.c"
      var $30=(($29)&255); //@line 493 "src/markdown.c"
      var $31=(($28)|0)==(($30)|0); //@line 493 "src/markdown.c"
      if ($31) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 493 "src/markdown.c"
    case 7: 
      $i=1; //@line 493 "src/markdown.c"
      __label__ = 8; break; //@line 493 "src/markdown.c"
    case 8: 
      __label__ = 9; break; //@line 495 "src/markdown.c"
    case 9: 
      var $35=$i; //@line 495 "src/markdown.c"
      var $36=$5; //@line 495 "src/markdown.c"
      var $37=(($35)>>>0) < (($36)>>>0); //@line 495 "src/markdown.c"
      if ($37) { __label__ = 10; break; } else { __label__ = 26; break; } //@line 495 "src/markdown.c"
    case 10: 
      var $39=$4; //@line 496 "src/markdown.c"
      var $40=$i; //@line 496 "src/markdown.c"
      var $41=(($39+$40)|0); //@line 496 "src/markdown.c"
      var $42=$5; //@line 496 "src/markdown.c"
      var $43=$i; //@line 496 "src/markdown.c"
      var $44=((($42)-($43))|0); //@line 496 "src/markdown.c"
      var $45=$6; //@line 496 "src/markdown.c"
      var $46=_find_emph_char($41, $44, $45); //@line 496 "src/markdown.c"
      $len=$46; //@line 496 "src/markdown.c"
      var $47=$len; //@line 497 "src/markdown.c"
      var $48=(($47)|0)!=0; //@line 497 "src/markdown.c"
      if ($48) { __label__ = 12; break; } else { __label__ = 11; break; } //@line 497 "src/markdown.c"
    case 11: 
      $1=0; //@line 497 "src/markdown.c"
      __label__ = 27; break; //@line 497 "src/markdown.c"
    case 12: 
      var $51=$len; //@line 498 "src/markdown.c"
      var $52=$i; //@line 498 "src/markdown.c"
      var $53=((($52)+($51))|0); //@line 498 "src/markdown.c"
      $i=$53; //@line 498 "src/markdown.c"
      var $54=$i; //@line 499 "src/markdown.c"
      var $55=$5; //@line 499 "src/markdown.c"
      var $56=(($54)>>>0) >= (($55)>>>0); //@line 499 "src/markdown.c"
      if ($56) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 499 "src/markdown.c"
    case 13: 
      $1=0; //@line 499 "src/markdown.c"
      __label__ = 27; break; //@line 499 "src/markdown.c"
    case 14: 
      var $59=$i; //@line 501 "src/markdown.c"
      var $60=$4; //@line 501 "src/markdown.c"
      var $61=(($60+$59)|0); //@line 501 "src/markdown.c"
      var $62=HEAPU8[($61)]; //@line 501 "src/markdown.c"
      var $63=(($62)&255); //@line 501 "src/markdown.c"
      var $64=$6; //@line 501 "src/markdown.c"
      var $65=(($64)&255); //@line 501 "src/markdown.c"
      var $66=(($63)|0)==(($65)|0); //@line 501 "src/markdown.c"
      if ($66) { __label__ = 15; break; } else { __label__ = 25; break; } //@line 501 "src/markdown.c"
    case 15: 
      var $68=$i; //@line 501 "src/markdown.c"
      var $69=((($68)-(1))|0); //@line 501 "src/markdown.c"
      var $70=$4; //@line 501 "src/markdown.c"
      var $71=(($70+$69)|0); //@line 501 "src/markdown.c"
      var $72=HEAPU8[($71)]; //@line 501 "src/markdown.c"
      var $73=(($72)&255); //@line 501 "src/markdown.c"
      var $74=__isspace($73); //@line 501 "src/markdown.c"
      var $75=(($74)|0)!=0; //@line 501 "src/markdown.c"
      if ($75) { __label__ = 25; break; } else { __label__ = 16; break; } //@line 501 "src/markdown.c"
    case 16: 
      var $77=$3; //@line 503 "src/markdown.c"
      var $78=(($77+420)|0); //@line 503 "src/markdown.c"
      var $79=HEAP32[(($78)>>2)]; //@line 503 "src/markdown.c"
      var $80=$79 & 1; //@line 503 "src/markdown.c"
      var $81=(($80)|0)!=0; //@line 503 "src/markdown.c"
      if ($81) { __label__ = 17; break; } else { __label__ = 21; break; } //@line 503 "src/markdown.c"
    case 17: 
      var $83=$i; //@line 504 "src/markdown.c"
      var $84=$i; //@line 504 "src/markdown.c"
      var $85=((($83)+($84))|0); //@line 504 "src/markdown.c"
      var $86=$5; //@line 504 "src/markdown.c"
      var $87=(($85)>>>0) < (($86)>>>0); //@line 504 "src/markdown.c"
      if ($87) { __label__ = 18; break; } else { __label__ = 20; break; } //@line 504 "src/markdown.c"
    case 18: 
      var $89=$i; //@line 504 "src/markdown.c"
      var $90=((($89)+(1))|0); //@line 504 "src/markdown.c"
      var $91=$4; //@line 504 "src/markdown.c"
      var $92=(($91+$90)|0); //@line 504 "src/markdown.c"
      var $93=HEAPU8[($92)]; //@line 504 "src/markdown.c"
      var $94=(($93)&255); //@line 504 "src/markdown.c"
      var $95=_isalnum($94); //@line 504 "src/markdown.c"
      var $96=(($95)|0)!=0; //@line 504 "src/markdown.c"
      if ($96) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 504 "src/markdown.c"
    case 19: 
      __label__ = 9; break; //@line 505 "src/markdown.c"
    case 20: 
      __label__ = 21; break; //@line 506 "src/markdown.c"
    case 21: 
      var $100=$3; //@line 508 "src/markdown.c"
      var $101=_rndr_newbuf($100, 1); //@line 508 "src/markdown.c"
      $work=$101; //@line 508 "src/markdown.c"
      var $102=$work; //@line 509 "src/markdown.c"
      var $103=$3; //@line 509 "src/markdown.c"
      var $104=$4; //@line 509 "src/markdown.c"
      var $105=$i; //@line 509 "src/markdown.c"
      _parse_inline($102, $103, $104, $105); //@line 509 "src/markdown.c"
      var $106=$3; //@line 510 "src/markdown.c"
      var $107=(($106)|0); //@line 510 "src/markdown.c"
      var $108=(($107+56)|0); //@line 510 "src/markdown.c"
      var $109=HEAP32[(($108)>>2)]; //@line 510 "src/markdown.c"
      var $110=$2; //@line 510 "src/markdown.c"
      var $111=$work; //@line 510 "src/markdown.c"
      var $112=$3; //@line 510 "src/markdown.c"
      var $113=(($112+104)|0); //@line 510 "src/markdown.c"
      var $114=HEAP32[(($113)>>2)]; //@line 510 "src/markdown.c"
      var $115=FUNCTION_TABLE[$109]($110, $111, $114); //@line 510 "src/markdown.c"
      $r=$115; //@line 510 "src/markdown.c"
      var $116=$3; //@line 511 "src/markdown.c"
      _rndr_popbuf($116, 1); //@line 511 "src/markdown.c"
      var $117=$r; //@line 512 "src/markdown.c"
      var $118=(($117)|0)!=0; //@line 512 "src/markdown.c"
      if ($118) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 512 "src/markdown.c"
    case 22: 
      var $120=$i; //@line 512 "src/markdown.c"
      var $121=((($120)+(1))|0); //@line 512 "src/markdown.c"
      var $124 = $121;__label__ = 24; break; //@line 512 "src/markdown.c"
    case 23: 
      var $124 = 0;__label__ = 24; break; //@line 512 "src/markdown.c"
    case 24: 
      var $124; //@line 512 "src/markdown.c"
      $1=$124; //@line 512 "src/markdown.c"
      __label__ = 27; break; //@line 512 "src/markdown.c"
    case 25: 
      __label__ = 9; break; //@line 514 "src/markdown.c"
    case 26: 
      $1=0; //@line 516 "src/markdown.c"
      __label__ = 27; break; //@line 516 "src/markdown.c"
    case 27: 
      var $128=$1; //@line 517 "src/markdown.c"
      ;
      return $128; //@line 517 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_emph1["X"]=1;

function _find_emph_char($data, $size, $c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $span_nb;
      var $bt;
      var $tmp_i;
      var $tmp_i1;
      var $cc;
      $2=$data;
      $3=$size;
      $4=$c;
      $i=1; //@line 394 "src/markdown.c"
      __label__ = 3; break; //@line 396 "src/markdown.c"
    case 3: 
      var $6=$i; //@line 396 "src/markdown.c"
      var $7=$3; //@line 396 "src/markdown.c"
      var $8=(($6)>>>0) < (($7)>>>0); //@line 396 "src/markdown.c"
      if ($8) { __label__ = 4; break; } else { __label__ = 77; break; } //@line 396 "src/markdown.c"
    case 4: 
      __label__ = 5; break; //@line 397 "src/markdown.c"
    case 5: 
      var $11=$i; //@line 397 "src/markdown.c"
      var $12=$3; //@line 397 "src/markdown.c"
      var $13=(($11)>>>0) < (($12)>>>0); //@line 397 "src/markdown.c"
      if ($13) { __label__ = 6; break; } else { var $38 = 0;__label__ = 9; break; } //@line 397 "src/markdown.c"
    case 6: 
      var $15=$i; //@line 397 "src/markdown.c"
      var $16=$2; //@line 397 "src/markdown.c"
      var $17=(($16+$15)|0); //@line 397 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 397 "src/markdown.c"
      var $19=(($18)&255); //@line 397 "src/markdown.c"
      var $20=$4; //@line 397 "src/markdown.c"
      var $21=(($20)&255); //@line 397 "src/markdown.c"
      var $22=(($19)|0)!=(($21)|0); //@line 397 "src/markdown.c"
      if ($22) { __label__ = 7; break; } else { var $38 = 0;__label__ = 9; break; } //@line 397 "src/markdown.c"
    case 7: 
      var $24=$i; //@line 397 "src/markdown.c"
      var $25=$2; //@line 397 "src/markdown.c"
      var $26=(($25+$24)|0); //@line 397 "src/markdown.c"
      var $27=HEAPU8[($26)]; //@line 397 "src/markdown.c"
      var $28=(($27)&255); //@line 397 "src/markdown.c"
      var $29=(($28)|0)!=96; //@line 397 "src/markdown.c"
      if ($29) { __label__ = 8; break; } else { var $38 = 0;__label__ = 9; break; } //@line 397 "src/markdown.c"
    case 8: 
      var $31=$i; //@line 397 "src/markdown.c"
      var $32=$2; //@line 397 "src/markdown.c"
      var $33=(($32+$31)|0); //@line 397 "src/markdown.c"
      var $34=HEAPU8[($33)]; //@line 397 "src/markdown.c"
      var $35=(($34)&255); //@line 397 "src/markdown.c"
      var $36=(($35)|0)!=91; //@line 397 "src/markdown.c"
      var $38 = $36;__label__ = 9; break;
    case 9: 
      var $38;
      if ($38) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $40=$i; //@line 398 "src/markdown.c"
      var $41=((($40)+(1))|0); //@line 398 "src/markdown.c"
      $i=$41; //@line 398 "src/markdown.c"
      __label__ = 5; break; //@line 398 "src/markdown.c"
    case 11: 
      var $43=$i; //@line 400 "src/markdown.c"
      var $44=$3; //@line 400 "src/markdown.c"
      var $45=(($43)|0)==(($44)|0); //@line 400 "src/markdown.c"
      if ($45) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 400 "src/markdown.c"
    case 12: 
      $1=0; //@line 401 "src/markdown.c"
      __label__ = 78; break; //@line 401 "src/markdown.c"
    case 13: 
      var $48=$i; //@line 403 "src/markdown.c"
      var $49=$2; //@line 403 "src/markdown.c"
      var $50=(($49+$48)|0); //@line 403 "src/markdown.c"
      var $51=HEAPU8[($50)]; //@line 403 "src/markdown.c"
      var $52=(($51)&255); //@line 403 "src/markdown.c"
      var $53=$4; //@line 403 "src/markdown.c"
      var $54=(($53)&255); //@line 403 "src/markdown.c"
      var $55=(($52)|0)==(($54)|0); //@line 403 "src/markdown.c"
      if ($55) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 403 "src/markdown.c"
    case 14: 
      var $57=$i; //@line 404 "src/markdown.c"
      $1=$57; //@line 404 "src/markdown.c"
      __label__ = 78; break; //@line 404 "src/markdown.c"
    case 15: 
      var $59=$i; //@line 407 "src/markdown.c"
      var $60=(($59)|0)!=0; //@line 407 "src/markdown.c"
      if ($60) { __label__ = 16; break; } else { __label__ = 18; break; } //@line 407 "src/markdown.c"
    case 16: 
      var $62=$i; //@line 407 "src/markdown.c"
      var $63=((($62)-(1))|0); //@line 407 "src/markdown.c"
      var $64=$2; //@line 407 "src/markdown.c"
      var $65=(($64+$63)|0); //@line 407 "src/markdown.c"
      var $66=HEAPU8[($65)]; //@line 407 "src/markdown.c"
      var $67=(($66)&255); //@line 407 "src/markdown.c"
      var $68=(($67)|0)==92; //@line 407 "src/markdown.c"
      if ($68) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 407 "src/markdown.c"
    case 17: 
      var $70=$i; //@line 408 "src/markdown.c"
      var $71=((($70)+(1))|0); //@line 408 "src/markdown.c"
      $i=$71; //@line 408 "src/markdown.c"
      __label__ = 3; break; //@line 408 "src/markdown.c"
    case 18: 
      var $73=$i; //@line 411 "src/markdown.c"
      var $74=$2; //@line 411 "src/markdown.c"
      var $75=(($74+$73)|0); //@line 411 "src/markdown.c"
      var $76=HEAPU8[($75)]; //@line 411 "src/markdown.c"
      var $77=(($76)&255); //@line 411 "src/markdown.c"
      var $78=(($77)|0)==96; //@line 411 "src/markdown.c"
      if ($78) { __label__ = 19; break; } else { __label__ = 40; break; } //@line 411 "src/markdown.c"
    case 19: 
      $span_nb=0; //@line 412 "src/markdown.c"
      $tmp_i=0; //@line 413 "src/markdown.c"
      __label__ = 20; break; //@line 416 "src/markdown.c"
    case 20: 
      var $81=$i; //@line 416 "src/markdown.c"
      var $82=$3; //@line 416 "src/markdown.c"
      var $83=(($81)>>>0) < (($82)>>>0); //@line 416 "src/markdown.c"
      if ($83) { __label__ = 21; break; } else { var $92 = 0;__label__ = 22; break; } //@line 416 "src/markdown.c"
    case 21: 
      var $85=$i; //@line 416 "src/markdown.c"
      var $86=$2; //@line 416 "src/markdown.c"
      var $87=(($86+$85)|0); //@line 416 "src/markdown.c"
      var $88=HEAPU8[($87)]; //@line 416 "src/markdown.c"
      var $89=(($88)&255); //@line 416 "src/markdown.c"
      var $90=(($89)|0)==96; //@line 416 "src/markdown.c"
      var $92 = $90;__label__ = 22; break;
    case 22: 
      var $92;
      if ($92) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: 
      var $94=$i; //@line 417 "src/markdown.c"
      var $95=((($94)+(1))|0); //@line 417 "src/markdown.c"
      $i=$95; //@line 417 "src/markdown.c"
      var $96=$span_nb; //@line 417 "src/markdown.c"
      var $97=((($96)+(1))|0); //@line 417 "src/markdown.c"
      $span_nb=$97; //@line 417 "src/markdown.c"
      __label__ = 20; break; //@line 418 "src/markdown.c"
    case 24: 
      var $99=$i; //@line 420 "src/markdown.c"
      var $100=$3; //@line 420 "src/markdown.c"
      var $101=(($99)>>>0) >= (($100)>>>0); //@line 420 "src/markdown.c"
      if ($101) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 420 "src/markdown.c"
    case 25: 
      $1=0; //@line 420 "src/markdown.c"
      __label__ = 78; break; //@line 420 "src/markdown.c"
    case 26: 
      $bt=0; //@line 423 "src/markdown.c"
      __label__ = 27; break; //@line 424 "src/markdown.c"
    case 27: 
      var $105=$i; //@line 424 "src/markdown.c"
      var $106=$3; //@line 424 "src/markdown.c"
      var $107=(($105)>>>0) < (($106)>>>0); //@line 424 "src/markdown.c"
      if ($107) { __label__ = 28; break; } else { var $113 = 0;__label__ = 29; break; } //@line 424 "src/markdown.c"
    case 28: 
      var $109=$bt; //@line 424 "src/markdown.c"
      var $110=$span_nb; //@line 424 "src/markdown.c"
      var $111=(($109)>>>0) < (($110)>>>0); //@line 424 "src/markdown.c"
      var $113 = $111;__label__ = 29; break;
    case 29: 
      var $113;
      if ($113) { __label__ = 30; break; } else { __label__ = 37; break; }
    case 30: 
      var $115=$tmp_i; //@line 425 "src/markdown.c"
      var $116=(($115)|0)!=0; //@line 425 "src/markdown.c"
      if ($116) { __label__ = 33; break; } else { __label__ = 31; break; } //@line 425 "src/markdown.c"
    case 31: 
      var $118=$i; //@line 425 "src/markdown.c"
      var $119=$2; //@line 425 "src/markdown.c"
      var $120=(($119+$118)|0); //@line 425 "src/markdown.c"
      var $121=HEAPU8[($120)]; //@line 425 "src/markdown.c"
      var $122=(($121)&255); //@line 425 "src/markdown.c"
      var $123=$4; //@line 425 "src/markdown.c"
      var $124=(($123)&255); //@line 425 "src/markdown.c"
      var $125=(($122)|0)==(($124)|0); //@line 425 "src/markdown.c"
      if ($125) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 425 "src/markdown.c"
    case 32: 
      var $127=$i; //@line 425 "src/markdown.c"
      $tmp_i=$127; //@line 425 "src/markdown.c"
      __label__ = 33; break; //@line 425 "src/markdown.c"
    case 33: 
      var $129=$i; //@line 426 "src/markdown.c"
      var $130=$2; //@line 426 "src/markdown.c"
      var $131=(($130+$129)|0); //@line 426 "src/markdown.c"
      var $132=HEAPU8[($131)]; //@line 426 "src/markdown.c"
      var $133=(($132)&255); //@line 426 "src/markdown.c"
      var $134=(($133)|0)==96; //@line 426 "src/markdown.c"
      if ($134) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 426 "src/markdown.c"
    case 34: 
      var $136=$bt; //@line 426 "src/markdown.c"
      var $137=((($136)+(1))|0); //@line 426 "src/markdown.c"
      $bt=$137; //@line 426 "src/markdown.c"
      __label__ = 36; break; //@line 426 "src/markdown.c"
    case 35: 
      $bt=0; //@line 427 "src/markdown.c"
      __label__ = 36; break;
    case 36: 
      var $140=$i; //@line 428 "src/markdown.c"
      var $141=((($140)+(1))|0); //@line 428 "src/markdown.c"
      $i=$141; //@line 428 "src/markdown.c"
      __label__ = 27; break; //@line 429 "src/markdown.c"
    case 37: 
      var $143=$i; //@line 431 "src/markdown.c"
      var $144=$3; //@line 431 "src/markdown.c"
      var $145=(($143)>>>0) >= (($144)>>>0); //@line 431 "src/markdown.c"
      if ($145) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 431 "src/markdown.c"
    case 38: 
      var $147=$tmp_i; //@line 431 "src/markdown.c"
      $1=$147; //@line 431 "src/markdown.c"
      __label__ = 78; break; //@line 431 "src/markdown.c"
    case 39: 
      __label__ = 76; break; //@line 432 "src/markdown.c"
    case 40: 
      var $150=$i; //@line 434 "src/markdown.c"
      var $151=$2; //@line 434 "src/markdown.c"
      var $152=(($151+$150)|0); //@line 434 "src/markdown.c"
      var $153=HEAPU8[($152)]; //@line 434 "src/markdown.c"
      var $154=(($153)&255); //@line 434 "src/markdown.c"
      var $155=(($154)|0)==91; //@line 434 "src/markdown.c"
      if ($155) { __label__ = 41; break; } else { __label__ = 75; break; } //@line 434 "src/markdown.c"
    case 41: 
      $tmp_i1=0; //@line 435 "src/markdown.c"
      var $157=$i; //@line 438 "src/markdown.c"
      var $158=((($157)+(1))|0); //@line 438 "src/markdown.c"
      $i=$158; //@line 438 "src/markdown.c"
      __label__ = 42; break; //@line 439 "src/markdown.c"
    case 42: 
      var $160=$i; //@line 439 "src/markdown.c"
      var $161=$3; //@line 439 "src/markdown.c"
      var $162=(($160)>>>0) < (($161)>>>0); //@line 439 "src/markdown.c"
      if ($162) { __label__ = 43; break; } else { var $171 = 0;__label__ = 44; break; } //@line 439 "src/markdown.c"
    case 43: 
      var $164=$i; //@line 439 "src/markdown.c"
      var $165=$2; //@line 439 "src/markdown.c"
      var $166=(($165+$164)|0); //@line 439 "src/markdown.c"
      var $167=HEAPU8[($166)]; //@line 439 "src/markdown.c"
      var $168=(($167)&255); //@line 439 "src/markdown.c"
      var $169=(($168)|0)!=93; //@line 439 "src/markdown.c"
      var $171 = $169;__label__ = 44; break;
    case 44: 
      var $171;
      if ($171) { __label__ = 45; break; } else { __label__ = 49; break; }
    case 45: 
      var $173=$tmp_i1; //@line 440 "src/markdown.c"
      var $174=(($173)|0)!=0; //@line 440 "src/markdown.c"
      if ($174) { __label__ = 48; break; } else { __label__ = 46; break; } //@line 440 "src/markdown.c"
    case 46: 
      var $176=$i; //@line 440 "src/markdown.c"
      var $177=$2; //@line 440 "src/markdown.c"
      var $178=(($177+$176)|0); //@line 440 "src/markdown.c"
      var $179=HEAPU8[($178)]; //@line 440 "src/markdown.c"
      var $180=(($179)&255); //@line 440 "src/markdown.c"
      var $181=$4; //@line 440 "src/markdown.c"
      var $182=(($181)&255); //@line 440 "src/markdown.c"
      var $183=(($180)|0)==(($182)|0); //@line 440 "src/markdown.c"
      if ($183) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 440 "src/markdown.c"
    case 47: 
      var $185=$i; //@line 440 "src/markdown.c"
      $tmp_i1=$185; //@line 440 "src/markdown.c"
      __label__ = 48; break; //@line 440 "src/markdown.c"
    case 48: 
      var $187=$i; //@line 441 "src/markdown.c"
      var $188=((($187)+(1))|0); //@line 441 "src/markdown.c"
      $i=$188; //@line 441 "src/markdown.c"
      __label__ = 42; break; //@line 442 "src/markdown.c"
    case 49: 
      var $190=$i; //@line 444 "src/markdown.c"
      var $191=((($190)+(1))|0); //@line 444 "src/markdown.c"
      $i=$191; //@line 444 "src/markdown.c"
      __label__ = 50; break; //@line 445 "src/markdown.c"
    case 50: 
      var $193=$i; //@line 445 "src/markdown.c"
      var $194=$3; //@line 445 "src/markdown.c"
      var $195=(($193)>>>0) < (($194)>>>0); //@line 445 "src/markdown.c"
      if ($195) { __label__ = 51; break; } else { var $213 = 0;__label__ = 54; break; } //@line 445 "src/markdown.c"
    case 51: 
      var $197=$i; //@line 445 "src/markdown.c"
      var $198=$2; //@line 445 "src/markdown.c"
      var $199=(($198+$197)|0); //@line 445 "src/markdown.c"
      var $200=HEAPU8[($199)]; //@line 445 "src/markdown.c"
      var $201=(($200)&255); //@line 445 "src/markdown.c"
      var $202=(($201)|0)==32; //@line 445 "src/markdown.c"
      if ($202) { var $211 = 1;__label__ = 53; break; } else { __label__ = 52; break; } //@line 445 "src/markdown.c"
    case 52: 
      var $204=$i; //@line 445 "src/markdown.c"
      var $205=$2; //@line 445 "src/markdown.c"
      var $206=(($205+$204)|0); //@line 445 "src/markdown.c"
      var $207=HEAPU8[($206)]; //@line 445 "src/markdown.c"
      var $208=(($207)&255); //@line 445 "src/markdown.c"
      var $209=(($208)|0)==10; //@line 445 "src/markdown.c"
      var $211 = $209;__label__ = 53; break; //@line 445 "src/markdown.c"
    case 53: 
      var $211;
      var $213 = $211;__label__ = 54; break;
    case 54: 
      var $213;
      if ($213) { __label__ = 55; break; } else { __label__ = 56; break; }
    case 55: 
      var $215=$i; //@line 446 "src/markdown.c"
      var $216=((($215)+(1))|0); //@line 446 "src/markdown.c"
      $i=$216; //@line 446 "src/markdown.c"
      __label__ = 50; break; //@line 446 "src/markdown.c"
    case 56: 
      var $218=$i; //@line 448 "src/markdown.c"
      var $219=$3; //@line 448 "src/markdown.c"
      var $220=(($218)>>>0) >= (($219)>>>0); //@line 448 "src/markdown.c"
      if ($220) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 448 "src/markdown.c"
    case 57: 
      var $222=$tmp_i1; //@line 449 "src/markdown.c"
      $1=$222; //@line 449 "src/markdown.c"
      __label__ = 78; break; //@line 449 "src/markdown.c"
    case 58: 
      var $224=$i; //@line 451 "src/markdown.c"
      var $225=$2; //@line 451 "src/markdown.c"
      var $226=(($225+$224)|0); //@line 451 "src/markdown.c"
      var $227=HEAPU8[($226)]; //@line 451 "src/markdown.c"
      var $228=(($227)&255); //@line 451 "src/markdown.c"
      if ((($228)|0) == 91) {
        __label__ = 59; break;
      }
      else if ((($228)|0) == 40) {
        __label__ = 60; break;
      }
      else {
      __label__ = 61; break;
      }
      
    case 59: 
      $cc=93; //@line 453 "src/markdown.c"
      __label__ = 64; break; //@line 453 "src/markdown.c"
    case 60: 
      $cc=41; //@line 456 "src/markdown.c"
      __label__ = 64; break; //@line 456 "src/markdown.c"
    case 61: 
      var $232=$tmp_i1; //@line 459 "src/markdown.c"
      var $233=(($232)|0)!=0; //@line 459 "src/markdown.c"
      if ($233) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 459 "src/markdown.c"
    case 62: 
      var $235=$tmp_i1; //@line 460 "src/markdown.c"
      $1=$235; //@line 460 "src/markdown.c"
      __label__ = 78; break; //@line 460 "src/markdown.c"
    case 63: 
      __label__ = 3; break; //@line 462 "src/markdown.c"
    case 64: 
      var $238=$i; //@line 465 "src/markdown.c"
      var $239=((($238)+(1))|0); //@line 465 "src/markdown.c"
      $i=$239; //@line 465 "src/markdown.c"
      __label__ = 65; break; //@line 466 "src/markdown.c"
    case 65: 
      var $241=$i; //@line 466 "src/markdown.c"
      var $242=$3; //@line 466 "src/markdown.c"
      var $243=(($241)>>>0) < (($242)>>>0); //@line 466 "src/markdown.c"
      if ($243) { __label__ = 66; break; } else { var $254 = 0;__label__ = 67; break; } //@line 466 "src/markdown.c"
    case 66: 
      var $245=$i; //@line 466 "src/markdown.c"
      var $246=$2; //@line 466 "src/markdown.c"
      var $247=(($246+$245)|0); //@line 466 "src/markdown.c"
      var $248=HEAPU8[($247)]; //@line 466 "src/markdown.c"
      var $249=(($248)&255); //@line 466 "src/markdown.c"
      var $250=$cc; //@line 466 "src/markdown.c"
      var $251=(($250)&255); //@line 466 "src/markdown.c"
      var $252=(($249)|0)!=(($251)|0); //@line 466 "src/markdown.c"
      var $254 = $252;__label__ = 67; break;
    case 67: 
      var $254;
      if ($254) { __label__ = 68; break; } else { __label__ = 72; break; }
    case 68: 
      var $256=$tmp_i1; //@line 467 "src/markdown.c"
      var $257=(($256)|0)!=0; //@line 467 "src/markdown.c"
      if ($257) { __label__ = 71; break; } else { __label__ = 69; break; } //@line 467 "src/markdown.c"
    case 69: 
      var $259=$i; //@line 467 "src/markdown.c"
      var $260=$2; //@line 467 "src/markdown.c"
      var $261=(($260+$259)|0); //@line 467 "src/markdown.c"
      var $262=HEAPU8[($261)]; //@line 467 "src/markdown.c"
      var $263=(($262)&255); //@line 467 "src/markdown.c"
      var $264=$4; //@line 467 "src/markdown.c"
      var $265=(($264)&255); //@line 467 "src/markdown.c"
      var $266=(($263)|0)==(($265)|0); //@line 467 "src/markdown.c"
      if ($266) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 467 "src/markdown.c"
    case 70: 
      var $268=$i; //@line 467 "src/markdown.c"
      $tmp_i1=$268; //@line 467 "src/markdown.c"
      __label__ = 71; break; //@line 467 "src/markdown.c"
    case 71: 
      var $270=$i; //@line 468 "src/markdown.c"
      var $271=((($270)+(1))|0); //@line 468 "src/markdown.c"
      $i=$271; //@line 468 "src/markdown.c"
      __label__ = 65; break; //@line 469 "src/markdown.c"
    case 72: 
      var $273=$i; //@line 471 "src/markdown.c"
      var $274=$3; //@line 471 "src/markdown.c"
      var $275=(($273)>>>0) >= (($274)>>>0); //@line 471 "src/markdown.c"
      if ($275) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 471 "src/markdown.c"
    case 73: 
      var $277=$tmp_i1; //@line 472 "src/markdown.c"
      $1=$277; //@line 472 "src/markdown.c"
      __label__ = 78; break; //@line 472 "src/markdown.c"
    case 74: 
      var $279=$i; //@line 474 "src/markdown.c"
      var $280=((($279)+(1))|0); //@line 474 "src/markdown.c"
      $i=$280; //@line 474 "src/markdown.c"
      __label__ = 75; break; //@line 475 "src/markdown.c"
    case 75: 
      __label__ = 76; break;
    case 76: 
      __label__ = 3; break; //@line 476 "src/markdown.c"
    case 77: 
      $1=0; //@line 478 "src/markdown.c"
      __label__ = 78; break; //@line 478 "src/markdown.c"
    case 78: 
      var $285=$1; //@line 479 "src/markdown.c"
      ;
      return $285; //@line 479 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_find_emph_char["X"]=1;

function _parse_emph2($ob, $rndr, $data, $size, $c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $render_method;
      var $i;
      var $len;
      var $work;
      var $r;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$c;
      $i=0; //@line 524 "src/markdown.c"
      $work=0; //@line 525 "src/markdown.c"
      var $7=$6; //@line 528 "src/markdown.c"
      var $8=(($7)&255); //@line 528 "src/markdown.c"
      var $9=(($8)|0)==126; //@line 528 "src/markdown.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 528 "src/markdown.c"
    case 3: 
      var $11=$3; //@line 528 "src/markdown.c"
      var $12=(($11)|0); //@line 528 "src/markdown.c"
      var $13=(($12+80)|0); //@line 528 "src/markdown.c"
      var $14=HEAP32[(($13)>>2)]; //@line 528 "src/markdown.c"
      var $21 = $14;__label__ = 5; break; //@line 528 "src/markdown.c"
    case 4: 
      var $16=$3; //@line 528 "src/markdown.c"
      var $17=(($16)|0); //@line 528 "src/markdown.c"
      var $18=(($17+52)|0); //@line 528 "src/markdown.c"
      var $19=HEAP32[(($18)>>2)]; //@line 528 "src/markdown.c"
      var $21 = $19;__label__ = 5; break; //@line 528 "src/markdown.c"
    case 5: 
      var $21; //@line 528 "src/markdown.c"
      $render_method=$21; //@line 528 "src/markdown.c"
      var $22=$render_method; //@line 530 "src/markdown.c"
      var $23=(($22)|0)!=0; //@line 530 "src/markdown.c"
      if ($23) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 530 "src/markdown.c"
    case 6: 
      $1=0; //@line 531 "src/markdown.c"
      __label__ = 22; break; //@line 531 "src/markdown.c"
    case 7: 
      __label__ = 8; break; //@line 533 "src/markdown.c"
    case 8: 
      var $27=$i; //@line 533 "src/markdown.c"
      var $28=$5; //@line 533 "src/markdown.c"
      var $29=(($27)>>>0) < (($28)>>>0); //@line 533 "src/markdown.c"
      if ($29) { __label__ = 9; break; } else { __label__ = 21; break; } //@line 533 "src/markdown.c"
    case 9: 
      var $31=$4; //@line 534 "src/markdown.c"
      var $32=$i; //@line 534 "src/markdown.c"
      var $33=(($31+$32)|0); //@line 534 "src/markdown.c"
      var $34=$5; //@line 534 "src/markdown.c"
      var $35=$i; //@line 534 "src/markdown.c"
      var $36=((($34)-($35))|0); //@line 534 "src/markdown.c"
      var $37=$6; //@line 534 "src/markdown.c"
      var $38=_find_emph_char($33, $36, $37); //@line 534 "src/markdown.c"
      $len=$38; //@line 534 "src/markdown.c"
      var $39=$len; //@line 535 "src/markdown.c"
      var $40=(($39)|0)!=0; //@line 535 "src/markdown.c"
      if ($40) { __label__ = 11; break; } else { __label__ = 10; break; } //@line 535 "src/markdown.c"
    case 10: 
      $1=0; //@line 535 "src/markdown.c"
      __label__ = 22; break; //@line 535 "src/markdown.c"
    case 11: 
      var $43=$len; //@line 536 "src/markdown.c"
      var $44=$i; //@line 536 "src/markdown.c"
      var $45=((($44)+($43))|0); //@line 536 "src/markdown.c"
      $i=$45; //@line 536 "src/markdown.c"
      var $46=$i; //@line 538 "src/markdown.c"
      var $47=((($46)+(1))|0); //@line 538 "src/markdown.c"
      var $48=$5; //@line 538 "src/markdown.c"
      var $49=(($47)>>>0) < (($48)>>>0); //@line 538 "src/markdown.c"
      if ($49) { __label__ = 12; break; } else { __label__ = 20; break; } //@line 538 "src/markdown.c"
    case 12: 
      var $51=$i; //@line 538 "src/markdown.c"
      var $52=$4; //@line 538 "src/markdown.c"
      var $53=(($52+$51)|0); //@line 538 "src/markdown.c"
      var $54=HEAPU8[($53)]; //@line 538 "src/markdown.c"
      var $55=(($54)&255); //@line 538 "src/markdown.c"
      var $56=$6; //@line 538 "src/markdown.c"
      var $57=(($56)&255); //@line 538 "src/markdown.c"
      var $58=(($55)|0)==(($57)|0); //@line 538 "src/markdown.c"
      if ($58) { __label__ = 13; break; } else { __label__ = 20; break; } //@line 538 "src/markdown.c"
    case 13: 
      var $60=$i; //@line 538 "src/markdown.c"
      var $61=((($60)+(1))|0); //@line 538 "src/markdown.c"
      var $62=$4; //@line 538 "src/markdown.c"
      var $63=(($62+$61)|0); //@line 538 "src/markdown.c"
      var $64=HEAPU8[($63)]; //@line 538 "src/markdown.c"
      var $65=(($64)&255); //@line 538 "src/markdown.c"
      var $66=$6; //@line 538 "src/markdown.c"
      var $67=(($66)&255); //@line 538 "src/markdown.c"
      var $68=(($65)|0)==(($67)|0); //@line 538 "src/markdown.c"
      if ($68) { __label__ = 14; break; } else { __label__ = 20; break; } //@line 538 "src/markdown.c"
    case 14: 
      var $70=$i; //@line 538 "src/markdown.c"
      var $71=(($70)|0)!=0; //@line 538 "src/markdown.c"
      if ($71) { __label__ = 15; break; } else { __label__ = 20; break; } //@line 538 "src/markdown.c"
    case 15: 
      var $73=$i; //@line 538 "src/markdown.c"
      var $74=((($73)-(1))|0); //@line 538 "src/markdown.c"
      var $75=$4; //@line 538 "src/markdown.c"
      var $76=(($75+$74)|0); //@line 538 "src/markdown.c"
      var $77=HEAPU8[($76)]; //@line 538 "src/markdown.c"
      var $78=(($77)&255); //@line 538 "src/markdown.c"
      var $79=__isspace($78); //@line 538 "src/markdown.c"
      var $80=(($79)|0)!=0; //@line 538 "src/markdown.c"
      if ($80) { __label__ = 20; break; } else { __label__ = 16; break; } //@line 538 "src/markdown.c"
    case 16: 
      var $82=$3; //@line 539 "src/markdown.c"
      var $83=_rndr_newbuf($82, 1); //@line 539 "src/markdown.c"
      $work=$83; //@line 539 "src/markdown.c"
      var $84=$work; //@line 540 "src/markdown.c"
      var $85=$3; //@line 540 "src/markdown.c"
      var $86=$4; //@line 540 "src/markdown.c"
      var $87=$i; //@line 540 "src/markdown.c"
      _parse_inline($84, $85, $86, $87); //@line 540 "src/markdown.c"
      var $88=$render_method; //@line 541 "src/markdown.c"
      var $89=$2; //@line 541 "src/markdown.c"
      var $90=$work; //@line 541 "src/markdown.c"
      var $91=$3; //@line 541 "src/markdown.c"
      var $92=(($91+104)|0); //@line 541 "src/markdown.c"
      var $93=HEAP32[(($92)>>2)]; //@line 541 "src/markdown.c"
      var $94=FUNCTION_TABLE[$88]($89, $90, $93); //@line 541 "src/markdown.c"
      $r=$94; //@line 541 "src/markdown.c"
      var $95=$3; //@line 542 "src/markdown.c"
      _rndr_popbuf($95, 1); //@line 542 "src/markdown.c"
      var $96=$r; //@line 543 "src/markdown.c"
      var $97=(($96)|0)!=0; //@line 543 "src/markdown.c"
      if ($97) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 543 "src/markdown.c"
    case 17: 
      var $99=$i; //@line 543 "src/markdown.c"
      var $100=((($99)+(2))|0); //@line 543 "src/markdown.c"
      var $103 = $100;__label__ = 19; break; //@line 543 "src/markdown.c"
    case 18: 
      var $103 = 0;__label__ = 19; break; //@line 543 "src/markdown.c"
    case 19: 
      var $103; //@line 543 "src/markdown.c"
      $1=$103; //@line 543 "src/markdown.c"
      __label__ = 22; break; //@line 543 "src/markdown.c"
    case 20: 
      var $105=$i; //@line 545 "src/markdown.c"
      var $106=((($105)+(1))|0); //@line 545 "src/markdown.c"
      $i=$106; //@line 545 "src/markdown.c"
      __label__ = 8; break; //@line 546 "src/markdown.c"
    case 21: 
      $1=0; //@line 547 "src/markdown.c"
      __label__ = 22; break; //@line 547 "src/markdown.c"
    case 22: 
      var $109=$1; //@line 548 "src/markdown.c"
      ;
      return $109; //@line 548 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_emph2["X"]=1;

function _parse_emph3($ob, $rndr, $data, $size, $c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $i;
      var $len;
      var $r;
      var $work;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$c;
      $i=0; //@line 555 "src/markdown.c"
      __label__ = 3; break; //@line 558 "src/markdown.c"
    case 3: 
      var $8=$i; //@line 558 "src/markdown.c"
      var $9=$5; //@line 558 "src/markdown.c"
      var $10=(($8)>>>0) < (($9)>>>0); //@line 558 "src/markdown.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 25; break; } //@line 558 "src/markdown.c"
    case 4: 
      var $12=$4; //@line 559 "src/markdown.c"
      var $13=$i; //@line 559 "src/markdown.c"
      var $14=(($12+$13)|0); //@line 559 "src/markdown.c"
      var $15=$5; //@line 559 "src/markdown.c"
      var $16=$i; //@line 559 "src/markdown.c"
      var $17=((($15)-($16))|0); //@line 559 "src/markdown.c"
      var $18=$6; //@line 559 "src/markdown.c"
      var $19=_find_emph_char($14, $17, $18); //@line 559 "src/markdown.c"
      $len=$19; //@line 559 "src/markdown.c"
      var $20=$len; //@line 560 "src/markdown.c"
      var $21=(($20)|0)!=0; //@line 560 "src/markdown.c"
      if ($21) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 560 "src/markdown.c"
    case 5: 
      $1=0; //@line 560 "src/markdown.c"
      __label__ = 26; break; //@line 560 "src/markdown.c"
    case 6: 
      var $24=$len; //@line 561 "src/markdown.c"
      var $25=$i; //@line 561 "src/markdown.c"
      var $26=((($25)+($24))|0); //@line 561 "src/markdown.c"
      $i=$26; //@line 561 "src/markdown.c"
      var $27=$i; //@line 564 "src/markdown.c"
      var $28=$4; //@line 564 "src/markdown.c"
      var $29=(($28+$27)|0); //@line 564 "src/markdown.c"
      var $30=HEAPU8[($29)]; //@line 564 "src/markdown.c"
      var $31=(($30)&255); //@line 564 "src/markdown.c"
      var $32=$6; //@line 564 "src/markdown.c"
      var $33=(($32)&255); //@line 564 "src/markdown.c"
      var $34=(($31)|0)!=(($33)|0); //@line 564 "src/markdown.c"
      if ($34) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 564 "src/markdown.c"
    case 7: 
      var $36=$i; //@line 564 "src/markdown.c"
      var $37=((($36)-(1))|0); //@line 564 "src/markdown.c"
      var $38=$4; //@line 564 "src/markdown.c"
      var $39=(($38+$37)|0); //@line 564 "src/markdown.c"
      var $40=HEAPU8[($39)]; //@line 564 "src/markdown.c"
      var $41=(($40)&255); //@line 564 "src/markdown.c"
      var $42=__isspace($41); //@line 564 "src/markdown.c"
      var $43=(($42)|0)!=0; //@line 564 "src/markdown.c"
      if ($43) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 564 "src/markdown.c"
    case 8: 
      __label__ = 3; break; //@line 565 "src/markdown.c"
    case 9: 
      var $46=$i; //@line 567 "src/markdown.c"
      var $47=((($46)+(2))|0); //@line 567 "src/markdown.c"
      var $48=$5; //@line 567 "src/markdown.c"
      var $49=(($47)>>>0) < (($48)>>>0); //@line 567 "src/markdown.c"
      if ($49) { __label__ = 10; break; } else { __label__ = 17; break; } //@line 567 "src/markdown.c"
    case 10: 
      var $51=$i; //@line 567 "src/markdown.c"
      var $52=((($51)+(1))|0); //@line 567 "src/markdown.c"
      var $53=$4; //@line 567 "src/markdown.c"
      var $54=(($53+$52)|0); //@line 567 "src/markdown.c"
      var $55=HEAPU8[($54)]; //@line 567 "src/markdown.c"
      var $56=(($55)&255); //@line 567 "src/markdown.c"
      var $57=$6; //@line 567 "src/markdown.c"
      var $58=(($57)&255); //@line 567 "src/markdown.c"
      var $59=(($56)|0)==(($58)|0); //@line 567 "src/markdown.c"
      if ($59) { __label__ = 11; break; } else { __label__ = 17; break; } //@line 567 "src/markdown.c"
    case 11: 
      var $61=$i; //@line 567 "src/markdown.c"
      var $62=((($61)+(2))|0); //@line 567 "src/markdown.c"
      var $63=$4; //@line 567 "src/markdown.c"
      var $64=(($63+$62)|0); //@line 567 "src/markdown.c"
      var $65=HEAPU8[($64)]; //@line 567 "src/markdown.c"
      var $66=(($65)&255); //@line 567 "src/markdown.c"
      var $67=$6; //@line 567 "src/markdown.c"
      var $68=(($67)&255); //@line 567 "src/markdown.c"
      var $69=(($66)|0)==(($68)|0); //@line 567 "src/markdown.c"
      if ($69) { __label__ = 12; break; } else { __label__ = 17; break; } //@line 567 "src/markdown.c"
    case 12: 
      var $71=$3; //@line 567 "src/markdown.c"
      var $72=(($71)|0); //@line 567 "src/markdown.c"
      var $73=(($72+76)|0); //@line 567 "src/markdown.c"
      var $74=HEAP32[(($73)>>2)]; //@line 567 "src/markdown.c"
      var $75=(($74)|0)!=0; //@line 567 "src/markdown.c"
      if ($75) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 567 "src/markdown.c"
    case 13: 
      var $77=$3; //@line 569 "src/markdown.c"
      var $78=_rndr_newbuf($77, 1); //@line 569 "src/markdown.c"
      $work=$78; //@line 569 "src/markdown.c"
      var $79=$work; //@line 571 "src/markdown.c"
      var $80=$3; //@line 571 "src/markdown.c"
      var $81=$4; //@line 571 "src/markdown.c"
      var $82=$i; //@line 571 "src/markdown.c"
      _parse_inline($79, $80, $81, $82); //@line 571 "src/markdown.c"
      var $83=$3; //@line 572 "src/markdown.c"
      var $84=(($83)|0); //@line 572 "src/markdown.c"
      var $85=(($84+76)|0); //@line 572 "src/markdown.c"
      var $86=HEAP32[(($85)>>2)]; //@line 572 "src/markdown.c"
      var $87=$2; //@line 572 "src/markdown.c"
      var $88=$work; //@line 572 "src/markdown.c"
      var $89=$3; //@line 572 "src/markdown.c"
      var $90=(($89+104)|0); //@line 572 "src/markdown.c"
      var $91=HEAP32[(($90)>>2)]; //@line 572 "src/markdown.c"
      var $92=FUNCTION_TABLE[$86]($87, $88, $91); //@line 572 "src/markdown.c"
      $r=$92; //@line 572 "src/markdown.c"
      var $93=$3; //@line 573 "src/markdown.c"
      _rndr_popbuf($93, 1); //@line 573 "src/markdown.c"
      var $94=$r; //@line 574 "src/markdown.c"
      var $95=(($94)|0)!=0; //@line 574 "src/markdown.c"
      if ($95) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 574 "src/markdown.c"
    case 14: 
      var $97=$i; //@line 574 "src/markdown.c"
      var $98=((($97)+(3))|0); //@line 574 "src/markdown.c"
      var $101 = $98;__label__ = 16; break; //@line 574 "src/markdown.c"
    case 15: 
      var $101 = 0;__label__ = 16; break; //@line 574 "src/markdown.c"
    case 16: 
      var $101; //@line 574 "src/markdown.c"
      $1=$101; //@line 574 "src/markdown.c"
      __label__ = 26; break; //@line 574 "src/markdown.c"
    case 17: 
      var $103=$i; //@line 576 "src/markdown.c"
      var $104=((($103)+(1))|0); //@line 576 "src/markdown.c"
      var $105=$5; //@line 576 "src/markdown.c"
      var $106=(($104)>>>0) < (($105)>>>0); //@line 576 "src/markdown.c"
      if ($106) { __label__ = 18; break; } else { __label__ = 22; break; } //@line 576 "src/markdown.c"
    case 18: 
      var $108=$i; //@line 576 "src/markdown.c"
      var $109=((($108)+(1))|0); //@line 576 "src/markdown.c"
      var $110=$4; //@line 576 "src/markdown.c"
      var $111=(($110+$109)|0); //@line 576 "src/markdown.c"
      var $112=HEAPU8[($111)]; //@line 576 "src/markdown.c"
      var $113=(($112)&255); //@line 576 "src/markdown.c"
      var $114=$6; //@line 576 "src/markdown.c"
      var $115=(($114)&255); //@line 576 "src/markdown.c"
      var $116=(($113)|0)==(($115)|0); //@line 576 "src/markdown.c"
      if ($116) { __label__ = 19; break; } else { __label__ = 22; break; } //@line 576 "src/markdown.c"
    case 19: 
      var $118=$2; //@line 578 "src/markdown.c"
      var $119=$3; //@line 578 "src/markdown.c"
      var $120=$4; //@line 578 "src/markdown.c"
      var $121=((($120)-(2))|0); //@line 578 "src/markdown.c"
      var $122=$5; //@line 578 "src/markdown.c"
      var $123=((($122)+(2))|0); //@line 578 "src/markdown.c"
      var $124=$6; //@line 578 "src/markdown.c"
      var $125=_parse_emph1($118, $119, $121, $123, $124); //@line 578 "src/markdown.c"
      $len=$125; //@line 578 "src/markdown.c"
      var $126=$len; //@line 579 "src/markdown.c"
      var $127=(($126)|0)!=0; //@line 579 "src/markdown.c"
      if ($127) { __label__ = 21; break; } else { __label__ = 20; break; } //@line 579 "src/markdown.c"
    case 20: 
      $1=0; //@line 579 "src/markdown.c"
      __label__ = 26; break; //@line 579 "src/markdown.c"
    case 21: 
      var $130=$len; //@line 580 "src/markdown.c"
      var $131=((($130)-(2))|0); //@line 580 "src/markdown.c"
      $1=$131; //@line 580 "src/markdown.c"
      __label__ = 26; break; //@line 580 "src/markdown.c"
    case 22: 
      var $133=$2; //@line 584 "src/markdown.c"
      var $134=$3; //@line 584 "src/markdown.c"
      var $135=$4; //@line 584 "src/markdown.c"
      var $136=((($135)-(1))|0); //@line 584 "src/markdown.c"
      var $137=$5; //@line 584 "src/markdown.c"
      var $138=((($137)+(1))|0); //@line 584 "src/markdown.c"
      var $139=$6; //@line 584 "src/markdown.c"
      var $140=_parse_emph2($133, $134, $136, $138, $139); //@line 584 "src/markdown.c"
      $len=$140; //@line 584 "src/markdown.c"
      var $141=$len; //@line 585 "src/markdown.c"
      var $142=(($141)|0)!=0; //@line 585 "src/markdown.c"
      if ($142) { __label__ = 24; break; } else { __label__ = 23; break; } //@line 585 "src/markdown.c"
    case 23: 
      $1=0; //@line 585 "src/markdown.c"
      __label__ = 26; break; //@line 585 "src/markdown.c"
    case 24: 
      var $145=$len; //@line 586 "src/markdown.c"
      var $146=((($145)-(1))|0); //@line 586 "src/markdown.c"
      $1=$146; //@line 586 "src/markdown.c"
      __label__ = 26; break; //@line 586 "src/markdown.c"
    case 25: 
      $1=0; //@line 589 "src/markdown.c"
      __label__ = 26; break; //@line 589 "src/markdown.c"
    case 26: 
      var $149=$1; //@line 590 "src/markdown.c"
      ;
      return $149; //@line 590 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_emph3["X"]=1;

function _prefix_codefence($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $n;
      var $c;
      $2=$data;
      $3=$size;
      $i=0; //@line 1167 "src/markdown.c"
      $n=0; //@line 1167 "src/markdown.c"
      var $4=$3; //@line 1171 "src/markdown.c"
      var $5=(($4)>>>0) < 3; //@line 1171 "src/markdown.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1171 "src/markdown.c"
    case 3: 
      $1=0; //@line 1171 "src/markdown.c"
      __label__ = 22; break; //@line 1171 "src/markdown.c"
    case 4: 
      var $8=$2; //@line 1172 "src/markdown.c"
      var $9=(($8)|0); //@line 1172 "src/markdown.c"
      var $10=HEAPU8[($9)]; //@line 1172 "src/markdown.c"
      var $11=(($10)&255); //@line 1172 "src/markdown.c"
      var $12=(($11)|0)==32; //@line 1172 "src/markdown.c"
      if ($12) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 1172 "src/markdown.c"
    case 5: 
      var $14=$i; //@line 1172 "src/markdown.c"
      var $15=((($14)+(1))|0); //@line 1172 "src/markdown.c"
      $i=$15; //@line 1172 "src/markdown.c"
      var $16=$2; //@line 1173 "src/markdown.c"
      var $17=(($16+1)|0); //@line 1173 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 1173 "src/markdown.c"
      var $19=(($18)&255); //@line 1173 "src/markdown.c"
      var $20=(($19)|0)==32; //@line 1173 "src/markdown.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 9; break; } //@line 1173 "src/markdown.c"
    case 6: 
      var $22=$i; //@line 1173 "src/markdown.c"
      var $23=((($22)+(1))|0); //@line 1173 "src/markdown.c"
      $i=$23; //@line 1173 "src/markdown.c"
      var $24=$2; //@line 1174 "src/markdown.c"
      var $25=(($24+2)|0); //@line 1174 "src/markdown.c"
      var $26=HEAPU8[($25)]; //@line 1174 "src/markdown.c"
      var $27=(($26)&255); //@line 1174 "src/markdown.c"
      var $28=(($27)|0)==32; //@line 1174 "src/markdown.c"
      if ($28) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1174 "src/markdown.c"
    case 7: 
      var $30=$i; //@line 1174 "src/markdown.c"
      var $31=((($30)+(1))|0); //@line 1174 "src/markdown.c"
      $i=$31; //@line 1174 "src/markdown.c"
      __label__ = 8; break; //@line 1174 "src/markdown.c"
    case 8: 
      __label__ = 9; break; //@line 1174 "src/markdown.c"
    case 9: 
      __label__ = 10; break; //@line 1174 "src/markdown.c"
    case 10: 
      var $35=$i; //@line 1177 "src/markdown.c"
      var $36=((($35)+(2))|0); //@line 1177 "src/markdown.c"
      var $37=$3; //@line 1177 "src/markdown.c"
      var $38=(($36)>>>0) >= (($37)>>>0); //@line 1177 "src/markdown.c"
      if ($38) { __label__ = 13; break; } else { __label__ = 11; break; } //@line 1177 "src/markdown.c"
    case 11: 
      var $40=$i; //@line 1177 "src/markdown.c"
      var $41=$2; //@line 1177 "src/markdown.c"
      var $42=(($41+$40)|0); //@line 1177 "src/markdown.c"
      var $43=HEAPU8[($42)]; //@line 1177 "src/markdown.c"
      var $44=(($43)&255); //@line 1177 "src/markdown.c"
      var $45=(($44)|0)==126; //@line 1177 "src/markdown.c"
      if ($45) { __label__ = 14; break; } else { __label__ = 12; break; } //@line 1177 "src/markdown.c"
    case 12: 
      var $47=$i; //@line 1177 "src/markdown.c"
      var $48=$2; //@line 1177 "src/markdown.c"
      var $49=(($48+$47)|0); //@line 1177 "src/markdown.c"
      var $50=HEAPU8[($49)]; //@line 1177 "src/markdown.c"
      var $51=(($50)&255); //@line 1177 "src/markdown.c"
      var $52=(($51)|0)==96; //@line 1177 "src/markdown.c"
      if ($52) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 1177 "src/markdown.c"
    case 13: 
      $1=0; //@line 1178 "src/markdown.c"
      __label__ = 22; break; //@line 1178 "src/markdown.c"
    case 14: 
      var $55=$i; //@line 1180 "src/markdown.c"
      var $56=$2; //@line 1180 "src/markdown.c"
      var $57=(($56+$55)|0); //@line 1180 "src/markdown.c"
      var $58=HEAP8[($57)]; //@line 1180 "src/markdown.c"
      $c=$58; //@line 1180 "src/markdown.c"
      __label__ = 15; break; //@line 1183 "src/markdown.c"
    case 15: 
      var $60=$i; //@line 1183 "src/markdown.c"
      var $61=$3; //@line 1183 "src/markdown.c"
      var $62=(($60)>>>0) < (($61)>>>0); //@line 1183 "src/markdown.c"
      if ($62) { __label__ = 16; break; } else { var $73 = 0;__label__ = 17; break; } //@line 1183 "src/markdown.c"
    case 16: 
      var $64=$i; //@line 1183 "src/markdown.c"
      var $65=$2; //@line 1183 "src/markdown.c"
      var $66=(($65+$64)|0); //@line 1183 "src/markdown.c"
      var $67=HEAPU8[($66)]; //@line 1183 "src/markdown.c"
      var $68=(($67)&255); //@line 1183 "src/markdown.c"
      var $69=$c; //@line 1183 "src/markdown.c"
      var $70=(($69)&255); //@line 1183 "src/markdown.c"
      var $71=(($68)|0)==(($70)|0); //@line 1183 "src/markdown.c"
      var $73 = $71;__label__ = 17; break;
    case 17: 
      var $73;
      if ($73) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $75=$n; //@line 1184 "src/markdown.c"
      var $76=((($75)+(1))|0); //@line 1184 "src/markdown.c"
      $n=$76; //@line 1184 "src/markdown.c"
      var $77=$i; //@line 1184 "src/markdown.c"
      var $78=((($77)+(1))|0); //@line 1184 "src/markdown.c"
      $i=$78; //@line 1184 "src/markdown.c"
      __label__ = 15; break; //@line 1185 "src/markdown.c"
    case 19: 
      var $80=$n; //@line 1187 "src/markdown.c"
      var $81=(($80)>>>0) < 3; //@line 1187 "src/markdown.c"
      if ($81) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1187 "src/markdown.c"
    case 20: 
      $1=0; //@line 1188 "src/markdown.c"
      __label__ = 22; break; //@line 1188 "src/markdown.c"
    case 21: 
      var $84=$i; //@line 1190 "src/markdown.c"
      $1=$84; //@line 1190 "src/markdown.c"
      __label__ = 22; break; //@line 1190 "src/markdown.c"
    case 22: 
      var $86=$1; //@line 1191 "src/markdown.c"
      ;
      return $86; //@line 1191 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prefix_codefence["X"]=1;

function _is_next_headerline($data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$data;
      $3=$size;
      $i=0; //@line 1294 "src/markdown.c"
      __label__ = 3; break; //@line 1296 "src/markdown.c"
    case 3: 
      var $5=$i; //@line 1296 "src/markdown.c"
      var $6=$3; //@line 1296 "src/markdown.c"
      var $7=(($5)>>>0) < (($6)>>>0); //@line 1296 "src/markdown.c"
      if ($7) { __label__ = 4; break; } else { var $16 = 0;__label__ = 5; break; } //@line 1296 "src/markdown.c"
    case 4: 
      var $9=$i; //@line 1296 "src/markdown.c"
      var $10=$2; //@line 1296 "src/markdown.c"
      var $11=(($10+$9)|0); //@line 1296 "src/markdown.c"
      var $12=HEAPU8[($11)]; //@line 1296 "src/markdown.c"
      var $13=(($12)&255); //@line 1296 "src/markdown.c"
      var $14=(($13)|0)!=10; //@line 1296 "src/markdown.c"
      var $16 = $14;__label__ = 5; break;
    case 5: 
      var $16;
      if ($16) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $18=$i; //@line 1297 "src/markdown.c"
      var $19=((($18)+(1))|0); //@line 1297 "src/markdown.c"
      $i=$19; //@line 1297 "src/markdown.c"
      __label__ = 3; break; //@line 1297 "src/markdown.c"
    case 7: 
      var $21=$i; //@line 1299 "src/markdown.c"
      var $22=((($21)+(1))|0); //@line 1299 "src/markdown.c"
      $i=$22; //@line 1299 "src/markdown.c"
      var $23=$3; //@line 1299 "src/markdown.c"
      var $24=(($22)>>>0) >= (($23)>>>0); //@line 1299 "src/markdown.c"
      if ($24) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1299 "src/markdown.c"
    case 8: 
      $1=0; //@line 1300 "src/markdown.c"
      __label__ = 10; break; //@line 1300 "src/markdown.c"
    case 9: 
      var $27=$2; //@line 1302 "src/markdown.c"
      var $28=$i; //@line 1302 "src/markdown.c"
      var $29=(($27+$28)|0); //@line 1302 "src/markdown.c"
      var $30=$3; //@line 1302 "src/markdown.c"
      var $31=$i; //@line 1302 "src/markdown.c"
      var $32=((($30)-($31))|0); //@line 1302 "src/markdown.c"
      var $33=_is_headerline($29, $32); //@line 1302 "src/markdown.c"
      $1=$33; //@line 1302 "src/markdown.c"
      __label__ = 10; break; //@line 1302 "src/markdown.c"
    case 10: 
      var $35=$1; //@line 1303 "src/markdown.c"
      ;
      return $35; //@line 1303 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _parse_listitem($ob, $rndr, $data, $size, $flags) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $work;
      var $inter;
      var $beg;
      var $end;
      var $pre;
      var $sublist;
      var $orgpre;
      var $i;
      var $in_empty;
      var $has_inside_empty;
      var $in_fence;
      var $has_next_uli;
      var $has_next_oli;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$flags;
      $work=0; //@line 1631 "src/markdown.c"
      $inter=0; //@line 1631 "src/markdown.c"
      $beg=0; //@line 1632 "src/markdown.c"
      $sublist=0; //@line 1632 "src/markdown.c"
      $orgpre=0; //@line 1632 "src/markdown.c"
      $in_empty=0; //@line 1633 "src/markdown.c"
      $has_inside_empty=0; //@line 1633 "src/markdown.c"
      $in_fence=0; //@line 1633 "src/markdown.c"
      __label__ = 3; break; //@line 1636 "src/markdown.c"
    case 3: 
      var $8=$orgpre; //@line 1636 "src/markdown.c"
      var $9=(($8)>>>0) < 3; //@line 1636 "src/markdown.c"
      if ($9) { __label__ = 4; break; } else { var $22 = 0;__label__ = 6; break; } //@line 1636 "src/markdown.c"
    case 4: 
      var $11=$orgpre; //@line 1636 "src/markdown.c"
      var $12=$5; //@line 1636 "src/markdown.c"
      var $13=(($11)>>>0) < (($12)>>>0); //@line 1636 "src/markdown.c"
      if ($13) { __label__ = 5; break; } else { var $22 = 0;__label__ = 6; break; } //@line 1636 "src/markdown.c"
    case 5: 
      var $15=$orgpre; //@line 1636 "src/markdown.c"
      var $16=$4; //@line 1636 "src/markdown.c"
      var $17=(($16+$15)|0); //@line 1636 "src/markdown.c"
      var $18=HEAPU8[($17)]; //@line 1636 "src/markdown.c"
      var $19=(($18)&255); //@line 1636 "src/markdown.c"
      var $20=(($19)|0)==32; //@line 1636 "src/markdown.c"
      var $22 = $20;__label__ = 6; break;
    case 6: 
      var $22;
      if ($22) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      var $24=$orgpre; //@line 1637 "src/markdown.c"
      var $25=((($24)+(1))|0); //@line 1637 "src/markdown.c"
      $orgpre=$25; //@line 1637 "src/markdown.c"
      __label__ = 3; break; //@line 1637 "src/markdown.c"
    case 8: 
      var $27=$4; //@line 1639 "src/markdown.c"
      var $28=$5; //@line 1639 "src/markdown.c"
      var $29=_prefix_uli($27, $28); //@line 1639 "src/markdown.c"
      $beg=$29; //@line 1639 "src/markdown.c"
      var $30=$beg; //@line 1640 "src/markdown.c"
      var $31=(($30)|0)!=0; //@line 1640 "src/markdown.c"
      if ($31) { __label__ = 10; break; } else { __label__ = 9; break; } //@line 1640 "src/markdown.c"
    case 9: 
      var $33=$4; //@line 1641 "src/markdown.c"
      var $34=$5; //@line 1641 "src/markdown.c"
      var $35=_prefix_oli($33, $34); //@line 1641 "src/markdown.c"
      $beg=$35; //@line 1641 "src/markdown.c"
      __label__ = 10; break; //@line 1641 "src/markdown.c"
    case 10: 
      var $37=$beg; //@line 1643 "src/markdown.c"
      var $38=(($37)|0)!=0; //@line 1643 "src/markdown.c"
      if ($38) { __label__ = 12; break; } else { __label__ = 11; break; } //@line 1643 "src/markdown.c"
    case 11: 
      $1=0; //@line 1644 "src/markdown.c"
      __label__ = 78; break; //@line 1644 "src/markdown.c"
    case 12: 
      var $41=$beg; //@line 1647 "src/markdown.c"
      $end=$41; //@line 1647 "src/markdown.c"
      __label__ = 13; break; //@line 1648 "src/markdown.c"
    case 13: 
      var $43=$end; //@line 1648 "src/markdown.c"
      var $44=$5; //@line 1648 "src/markdown.c"
      var $45=(($43)>>>0) < (($44)>>>0); //@line 1648 "src/markdown.c"
      if ($45) { __label__ = 14; break; } else { var $55 = 0;__label__ = 15; break; } //@line 1648 "src/markdown.c"
    case 14: 
      var $47=$end; //@line 1648 "src/markdown.c"
      var $48=((($47)-(1))|0); //@line 1648 "src/markdown.c"
      var $49=$4; //@line 1648 "src/markdown.c"
      var $50=(($49+$48)|0); //@line 1648 "src/markdown.c"
      var $51=HEAPU8[($50)]; //@line 1648 "src/markdown.c"
      var $52=(($51)&255); //@line 1648 "src/markdown.c"
      var $53=(($52)|0)!=10; //@line 1648 "src/markdown.c"
      var $55 = $53;__label__ = 15; break;
    case 15: 
      var $55;
      if ($55) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $57=$end; //@line 1649 "src/markdown.c"
      var $58=((($57)+(1))|0); //@line 1649 "src/markdown.c"
      $end=$58; //@line 1649 "src/markdown.c"
      __label__ = 13; break; //@line 1649 "src/markdown.c"
    case 17: 
      var $60=$3; //@line 1652 "src/markdown.c"
      var $61=_rndr_newbuf($60, 1); //@line 1652 "src/markdown.c"
      $work=$61; //@line 1652 "src/markdown.c"
      var $62=$3; //@line 1653 "src/markdown.c"
      var $63=_rndr_newbuf($62, 1); //@line 1653 "src/markdown.c"
      $inter=$63; //@line 1653 "src/markdown.c"
      var $64=$work; //@line 1656 "src/markdown.c"
      var $65=$4; //@line 1656 "src/markdown.c"
      var $66=$beg; //@line 1656 "src/markdown.c"
      var $67=(($65+$66)|0); //@line 1656 "src/markdown.c"
      var $68=$end; //@line 1656 "src/markdown.c"
      var $69=$beg; //@line 1656 "src/markdown.c"
      var $70=((($68)-($69))|0); //@line 1656 "src/markdown.c"
      _bufput($64, $67, $70); //@line 1656 "src/markdown.c"
      var $71=$end; //@line 1657 "src/markdown.c"
      $beg=$71; //@line 1657 "src/markdown.c"
      __label__ = 18; break; //@line 1660 "src/markdown.c"
    case 18: 
      var $73=$beg; //@line 1660 "src/markdown.c"
      var $74=$5; //@line 1660 "src/markdown.c"
      var $75=(($73)>>>0) < (($74)>>>0); //@line 1660 "src/markdown.c"
      if ($75) { __label__ = 19; break; } else { __label__ = 62; break; } //@line 1660 "src/markdown.c"
    case 19: 
      $has_next_uli=0; //@line 1661 "src/markdown.c"
      $has_next_oli=0; //@line 1661 "src/markdown.c"
      var $77=$end; //@line 1663 "src/markdown.c"
      var $78=((($77)+(1))|0); //@line 1663 "src/markdown.c"
      $end=$78; //@line 1663 "src/markdown.c"
      __label__ = 20; break; //@line 1665 "src/markdown.c"
    case 20: 
      var $80=$end; //@line 1665 "src/markdown.c"
      var $81=$5; //@line 1665 "src/markdown.c"
      var $82=(($80)>>>0) < (($81)>>>0); //@line 1665 "src/markdown.c"
      if ($82) { __label__ = 21; break; } else { var $92 = 0;__label__ = 22; break; } //@line 1665 "src/markdown.c"
    case 21: 
      var $84=$end; //@line 1665 "src/markdown.c"
      var $85=((($84)-(1))|0); //@line 1665 "src/markdown.c"
      var $86=$4; //@line 1665 "src/markdown.c"
      var $87=(($86+$85)|0); //@line 1665 "src/markdown.c"
      var $88=HEAPU8[($87)]; //@line 1665 "src/markdown.c"
      var $89=(($88)&255); //@line 1665 "src/markdown.c"
      var $90=(($89)|0)!=10; //@line 1665 "src/markdown.c"
      var $92 = $90;__label__ = 22; break;
    case 22: 
      var $92;
      if ($92) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: 
      var $94=$end; //@line 1666 "src/markdown.c"
      var $95=((($94)+(1))|0); //@line 1666 "src/markdown.c"
      $end=$95; //@line 1666 "src/markdown.c"
      __label__ = 20; break; //@line 1666 "src/markdown.c"
    case 24: 
      var $97=$4; //@line 1669 "src/markdown.c"
      var $98=$beg; //@line 1669 "src/markdown.c"
      var $99=(($97+$98)|0); //@line 1669 "src/markdown.c"
      var $100=$end; //@line 1669 "src/markdown.c"
      var $101=$beg; //@line 1669 "src/markdown.c"
      var $102=((($100)-($101))|0); //@line 1669 "src/markdown.c"
      var $103=_is_empty($99, $102); //@line 1669 "src/markdown.c"
      var $104=(($103)|0)!=0; //@line 1669 "src/markdown.c"
      if ($104) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1669 "src/markdown.c"
    case 25: 
      $in_empty=1; //@line 1670 "src/markdown.c"
      var $106=$end; //@line 1671 "src/markdown.c"
      $beg=$106; //@line 1671 "src/markdown.c"
      __label__ = 18; break; //@line 1672 "src/markdown.c"
    case 26: 
      $i=0; //@line 1676 "src/markdown.c"
      __label__ = 27; break; //@line 1677 "src/markdown.c"
    case 27: 
      var $109=$i; //@line 1677 "src/markdown.c"
      var $110=(($109)>>>0) < 4; //@line 1677 "src/markdown.c"
      if ($110) { __label__ = 28; break; } else { var $127 = 0;__label__ = 30; break; } //@line 1677 "src/markdown.c"
    case 28: 
      var $112=$beg; //@line 1677 "src/markdown.c"
      var $113=$i; //@line 1677 "src/markdown.c"
      var $114=((($112)+($113))|0); //@line 1677 "src/markdown.c"
      var $115=$end; //@line 1677 "src/markdown.c"
      var $116=(($114)>>>0) < (($115)>>>0); //@line 1677 "src/markdown.c"
      if ($116) { __label__ = 29; break; } else { var $127 = 0;__label__ = 30; break; } //@line 1677 "src/markdown.c"
    case 29: 
      var $118=$beg; //@line 1677 "src/markdown.c"
      var $119=$i; //@line 1677 "src/markdown.c"
      var $120=((($118)+($119))|0); //@line 1677 "src/markdown.c"
      var $121=$4; //@line 1677 "src/markdown.c"
      var $122=(($121+$120)|0); //@line 1677 "src/markdown.c"
      var $123=HEAPU8[($122)]; //@line 1677 "src/markdown.c"
      var $124=(($123)&255); //@line 1677 "src/markdown.c"
      var $125=(($124)|0)==32; //@line 1677 "src/markdown.c"
      var $127 = $125;__label__ = 30; break;
    case 30: 
      var $127;
      if ($127) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: 
      var $129=$i; //@line 1678 "src/markdown.c"
      var $130=((($129)+(1))|0); //@line 1678 "src/markdown.c"
      $i=$130; //@line 1678 "src/markdown.c"
      __label__ = 27; break; //@line 1678 "src/markdown.c"
    case 32: 
      var $132=$i; //@line 1680 "src/markdown.c"
      $pre=$132; //@line 1680 "src/markdown.c"
      var $133=$3; //@line 1682 "src/markdown.c"
      var $134=(($133+420)|0); //@line 1682 "src/markdown.c"
      var $135=HEAP32[(($134)>>2)]; //@line 1682 "src/markdown.c"
      var $136=$135 & 4; //@line 1682 "src/markdown.c"
      var $137=(($136)|0)!=0; //@line 1682 "src/markdown.c"
      if ($137) { __label__ = 33; break; } else { __label__ = 36; break; } //@line 1682 "src/markdown.c"
    case 33: 
      var $139=$4; //@line 1683 "src/markdown.c"
      var $140=$beg; //@line 1683 "src/markdown.c"
      var $141=(($139+$140)|0); //@line 1683 "src/markdown.c"
      var $142=$i; //@line 1683 "src/markdown.c"
      var $143=(($141+$142)|0); //@line 1683 "src/markdown.c"
      var $144=$end; //@line 1683 "src/markdown.c"
      var $145=$beg; //@line 1683 "src/markdown.c"
      var $146=((($144)-($145))|0); //@line 1683 "src/markdown.c"
      var $147=$i; //@line 1683 "src/markdown.c"
      var $148=((($146)-($147))|0); //@line 1683 "src/markdown.c"
      var $149=_is_codefence($143, $148, 0); //@line 1683 "src/markdown.c"
      var $150=(($149)|0)!=0; //@line 1683 "src/markdown.c"
      if ($150) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 1683 "src/markdown.c"
    case 34: 
      var $152=$in_fence; //@line 1684 "src/markdown.c"
      var $153=(($152)|0)!=0; //@line 1684 "src/markdown.c"
      var $154=$153 ^ 1; //@line 1684 "src/markdown.c"
      var $155=(($154)&1); //@line 1684 "src/markdown.c"
      $in_fence=$155; //@line 1684 "src/markdown.c"
      __label__ = 35; break; //@line 1684 "src/markdown.c"
    case 35: 
      __label__ = 36; break; //@line 1685 "src/markdown.c"
    case 36: 
      var $158=$in_fence; //@line 1689 "src/markdown.c"
      var $159=(($158)|0)!=0; //@line 1689 "src/markdown.c"
      if ($159) { __label__ = 38; break; } else { __label__ = 37; break; } //@line 1689 "src/markdown.c"
    case 37: 
      var $161=$4; //@line 1690 "src/markdown.c"
      var $162=$beg; //@line 1690 "src/markdown.c"
      var $163=(($161+$162)|0); //@line 1690 "src/markdown.c"
      var $164=$i; //@line 1690 "src/markdown.c"
      var $165=(($163+$164)|0); //@line 1690 "src/markdown.c"
      var $166=$end; //@line 1690 "src/markdown.c"
      var $167=$beg; //@line 1690 "src/markdown.c"
      var $168=((($166)-($167))|0); //@line 1690 "src/markdown.c"
      var $169=$i; //@line 1690 "src/markdown.c"
      var $170=((($168)-($169))|0); //@line 1690 "src/markdown.c"
      var $171=_prefix_uli($165, $170); //@line 1690 "src/markdown.c"
      $has_next_uli=$171; //@line 1690 "src/markdown.c"
      var $172=$4; //@line 1691 "src/markdown.c"
      var $173=$beg; //@line 1691 "src/markdown.c"
      var $174=(($172+$173)|0); //@line 1691 "src/markdown.c"
      var $175=$i; //@line 1691 "src/markdown.c"
      var $176=(($174+$175)|0); //@line 1691 "src/markdown.c"
      var $177=$end; //@line 1691 "src/markdown.c"
      var $178=$beg; //@line 1691 "src/markdown.c"
      var $179=((($177)-($178))|0); //@line 1691 "src/markdown.c"
      var $180=$i; //@line 1691 "src/markdown.c"
      var $181=((($179)-($180))|0); //@line 1691 "src/markdown.c"
      var $182=_prefix_oli($176, $181); //@line 1691 "src/markdown.c"
      $has_next_oli=$182; //@line 1691 "src/markdown.c"
      __label__ = 38; break; //@line 1692 "src/markdown.c"
    case 38: 
      var $184=$in_empty; //@line 1695 "src/markdown.c"
      var $185=(($184)|0)!=0; //@line 1695 "src/markdown.c"
      if ($185) { __label__ = 39; break; } else { __label__ = 44; break; } //@line 1695 "src/markdown.c"
    case 39: 
      var $187=$6; //@line 1695 "src/markdown.c"
      var $188=HEAP32[(($187)>>2)]; //@line 1695 "src/markdown.c"
      var $189=$188 & 1; //@line 1695 "src/markdown.c"
      var $190=(($189)|0)!=0; //@line 1695 "src/markdown.c"
      if ($190) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1695 "src/markdown.c"
    case 40: 
      var $192=$has_next_uli; //@line 1695 "src/markdown.c"
      var $193=(($192)|0)!=0; //@line 1695 "src/markdown.c"
      if ($193) { __label__ = 43; break; } else { __label__ = 41; break; } //@line 1695 "src/markdown.c"
    case 41: 
      var $195=$6; //@line 1695 "src/markdown.c"
      var $196=HEAP32[(($195)>>2)]; //@line 1695 "src/markdown.c"
      var $197=$196 & 1; //@line 1695 "src/markdown.c"
      var $198=(($197)|0)!=0; //@line 1695 "src/markdown.c"
      if ($198) { __label__ = 44; break; } else { __label__ = 42; break; } //@line 1695 "src/markdown.c"
    case 42: 
      var $200=$has_next_oli; //@line 1695 "src/markdown.c"
      var $201=(($200)|0)!=0; //@line 1695 "src/markdown.c"
      if ($201) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 1695 "src/markdown.c"
    case 43: 
      var $203=$6; //@line 1698 "src/markdown.c"
      var $204=HEAP32[(($203)>>2)]; //@line 1698 "src/markdown.c"
      var $205=$204 | 8; //@line 1698 "src/markdown.c"
      HEAP32[(($203)>>2)]=$205; //@line 1698 "src/markdown.c"
      __label__ = 62; break; //@line 1699 "src/markdown.c"
    case 44: 
      var $207=$has_next_uli; //@line 1703 "src/markdown.c"
      var $208=(($207)|0)!=0; //@line 1703 "src/markdown.c"
      if ($208) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 1703 "src/markdown.c"
    case 45: 
      var $210=$4; //@line 1703 "src/markdown.c"
      var $211=$beg; //@line 1703 "src/markdown.c"
      var $212=(($210+$211)|0); //@line 1703 "src/markdown.c"
      var $213=$i; //@line 1703 "src/markdown.c"
      var $214=(($212+$213)|0); //@line 1703 "src/markdown.c"
      var $215=$end; //@line 1703 "src/markdown.c"
      var $216=$beg; //@line 1703 "src/markdown.c"
      var $217=((($215)-($216))|0); //@line 1703 "src/markdown.c"
      var $218=$i; //@line 1703 "src/markdown.c"
      var $219=((($217)-($218))|0); //@line 1703 "src/markdown.c"
      var $220=_is_hrule($214, $219); //@line 1703 "src/markdown.c"
      var $221=(($220)|0)!=0; //@line 1703 "src/markdown.c"
      if ($221) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 1703 "src/markdown.c"
    case 46: 
      var $223=$has_next_oli; //@line 1703 "src/markdown.c"
      var $224=(($223)|0)!=0; //@line 1703 "src/markdown.c"
      if ($224) { __label__ = 47; break; } else { __label__ = 54; break; } //@line 1703 "src/markdown.c"
    case 47: 
      var $226=$in_empty; //@line 1704 "src/markdown.c"
      var $227=(($226)|0)!=0; //@line 1704 "src/markdown.c"
      if ($227) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 1704 "src/markdown.c"
    case 48: 
      $has_inside_empty=1; //@line 1705 "src/markdown.c"
      __label__ = 49; break; //@line 1705 "src/markdown.c"
    case 49: 
      var $230=$pre; //@line 1707 "src/markdown.c"
      var $231=$orgpre; //@line 1707 "src/markdown.c"
      var $232=(($230)|0)==(($231)|0); //@line 1707 "src/markdown.c"
      if ($232) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 1707 "src/markdown.c"
    case 50: 
      __label__ = 62; break; //@line 1708 "src/markdown.c"
    case 51: 
      var $235=$sublist; //@line 1710 "src/markdown.c"
      var $236=(($235)|0)!=0; //@line 1710 "src/markdown.c"
      if ($236) { __label__ = 53; break; } else { __label__ = 52; break; } //@line 1710 "src/markdown.c"
    case 52: 
      var $238=$work; //@line 1711 "src/markdown.c"
      var $239=(($238+4)|0); //@line 1711 "src/markdown.c"
      var $240=HEAP32[(($239)>>2)]; //@line 1711 "src/markdown.c"
      $sublist=$240; //@line 1711 "src/markdown.c"
      __label__ = 53; break; //@line 1711 "src/markdown.c"
    case 53: 
      __label__ = 61; break; //@line 1712 "src/markdown.c"
    case 54: 
      var $243=$in_empty; //@line 1716 "src/markdown.c"
      var $244=(($243)|0)!=0; //@line 1716 "src/markdown.c"
      if ($244) { __label__ = 55; break; } else { __label__ = 57; break; } //@line 1716 "src/markdown.c"
    case 55: 
      var $246=$pre; //@line 1716 "src/markdown.c"
      var $247=(($246)|0)==0; //@line 1716 "src/markdown.c"
      if ($247) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 1716 "src/markdown.c"
    case 56: 
      var $249=$6; //@line 1717 "src/markdown.c"
      var $250=HEAP32[(($249)>>2)]; //@line 1717 "src/markdown.c"
      var $251=$250 | 8; //@line 1717 "src/markdown.c"
      HEAP32[(($249)>>2)]=$251; //@line 1717 "src/markdown.c"
      __label__ = 62; break; //@line 1718 "src/markdown.c"
    case 57: 
      var $253=$in_empty; //@line 1720 "src/markdown.c"
      var $254=(($253)|0)!=0; //@line 1720 "src/markdown.c"
      if ($254) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 1720 "src/markdown.c"
    case 58: 
      var $256=$work; //@line 1721 "src/markdown.c"
      _bufputc($256, 10); //@line 1721 "src/markdown.c"
      $has_inside_empty=1; //@line 1722 "src/markdown.c"
      __label__ = 59; break; //@line 1723 "src/markdown.c"
    case 59: 
      __label__ = 60; break;
    case 60: 
      __label__ = 61; break;
    case 61: 
      $in_empty=0; //@line 1725 "src/markdown.c"
      var $260=$work; //@line 1728 "src/markdown.c"
      var $261=$4; //@line 1728 "src/markdown.c"
      var $262=$beg; //@line 1728 "src/markdown.c"
      var $263=(($261+$262)|0); //@line 1728 "src/markdown.c"
      var $264=$i; //@line 1728 "src/markdown.c"
      var $265=(($263+$264)|0); //@line 1728 "src/markdown.c"
      var $266=$end; //@line 1728 "src/markdown.c"
      var $267=$beg; //@line 1728 "src/markdown.c"
      var $268=((($266)-($267))|0); //@line 1728 "src/markdown.c"
      var $269=$i; //@line 1728 "src/markdown.c"
      var $270=((($268)-($269))|0); //@line 1728 "src/markdown.c"
      _bufput($260, $265, $270); //@line 1728 "src/markdown.c"
      var $271=$end; //@line 1729 "src/markdown.c"
      $beg=$271; //@line 1729 "src/markdown.c"
      __label__ = 18; break; //@line 1730 "src/markdown.c"
    case 62: 
      var $273=$has_inside_empty; //@line 1733 "src/markdown.c"
      var $274=(($273)|0)!=0; //@line 1733 "src/markdown.c"
      if ($274) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 1733 "src/markdown.c"
    case 63: 
      var $276=$6; //@line 1734 "src/markdown.c"
      var $277=HEAP32[(($276)>>2)]; //@line 1734 "src/markdown.c"
      var $278=$277 | 2; //@line 1734 "src/markdown.c"
      HEAP32[(($276)>>2)]=$278; //@line 1734 "src/markdown.c"
      __label__ = 64; break; //@line 1734 "src/markdown.c"
    case 64: 
      var $280=$6; //@line 1736 "src/markdown.c"
      var $281=HEAP32[(($280)>>2)]; //@line 1736 "src/markdown.c"
      var $282=$281 & 2; //@line 1736 "src/markdown.c"
      var $283=(($282)|0)!=0; //@line 1736 "src/markdown.c"
      if ($283) { __label__ = 65; break; } else { __label__ = 70; break; } //@line 1736 "src/markdown.c"
    case 65: 
      var $285=$sublist; //@line 1738 "src/markdown.c"
      var $286=(($285)|0)!=0; //@line 1738 "src/markdown.c"
      if ($286) { __label__ = 66; break; } else { __label__ = 68; break; } //@line 1738 "src/markdown.c"
    case 66: 
      var $288=$sublist; //@line 1738 "src/markdown.c"
      var $289=$work; //@line 1738 "src/markdown.c"
      var $290=(($289+4)|0); //@line 1738 "src/markdown.c"
      var $291=HEAPU32[(($290)>>2)]; //@line 1738 "src/markdown.c"
      var $292=(($288)>>>0) < (($291)>>>0); //@line 1738 "src/markdown.c"
      if ($292) { __label__ = 67; break; } else { __label__ = 68; break; } //@line 1738 "src/markdown.c"
    case 67: 
      var $294=$inter; //@line 1739 "src/markdown.c"
      var $295=$3; //@line 1739 "src/markdown.c"
      var $296=$work; //@line 1739 "src/markdown.c"
      var $297=(($296)|0); //@line 1739 "src/markdown.c"
      var $298=HEAP32[(($297)>>2)]; //@line 1739 "src/markdown.c"
      var $299=$sublist; //@line 1739 "src/markdown.c"
      _parse_block($294, $295, $298, $299); //@line 1739 "src/markdown.c"
      var $300=$inter; //@line 1740 "src/markdown.c"
      var $301=$3; //@line 1740 "src/markdown.c"
      var $302=$work; //@line 1740 "src/markdown.c"
      var $303=(($302)|0); //@line 1740 "src/markdown.c"
      var $304=HEAP32[(($303)>>2)]; //@line 1740 "src/markdown.c"
      var $305=$sublist; //@line 1740 "src/markdown.c"
      var $306=(($304+$305)|0); //@line 1740 "src/markdown.c"
      var $307=$work; //@line 1740 "src/markdown.c"
      var $308=(($307+4)|0); //@line 1740 "src/markdown.c"
      var $309=HEAP32[(($308)>>2)]; //@line 1740 "src/markdown.c"
      var $310=$sublist; //@line 1740 "src/markdown.c"
      var $311=((($309)-($310))|0); //@line 1740 "src/markdown.c"
      _parse_block($300, $301, $306, $311); //@line 1740 "src/markdown.c"
      __label__ = 69; break; //@line 1741 "src/markdown.c"
    case 68: 
      var $313=$inter; //@line 1743 "src/markdown.c"
      var $314=$3; //@line 1743 "src/markdown.c"
      var $315=$work; //@line 1743 "src/markdown.c"
      var $316=(($315)|0); //@line 1743 "src/markdown.c"
      var $317=HEAP32[(($316)>>2)]; //@line 1743 "src/markdown.c"
      var $318=$work; //@line 1743 "src/markdown.c"
      var $319=(($318+4)|0); //@line 1743 "src/markdown.c"
      var $320=HEAP32[(($319)>>2)]; //@line 1743 "src/markdown.c"
      _parse_block($313, $314, $317, $320); //@line 1743 "src/markdown.c"
      __label__ = 69; break;
    case 69: 
      __label__ = 75; break; //@line 1744 "src/markdown.c"
    case 70: 
      var $323=$sublist; //@line 1746 "src/markdown.c"
      var $324=(($323)|0)!=0; //@line 1746 "src/markdown.c"
      if ($324) { __label__ = 71; break; } else { __label__ = 73; break; } //@line 1746 "src/markdown.c"
    case 71: 
      var $326=$sublist; //@line 1746 "src/markdown.c"
      var $327=$work; //@line 1746 "src/markdown.c"
      var $328=(($327+4)|0); //@line 1746 "src/markdown.c"
      var $329=HEAPU32[(($328)>>2)]; //@line 1746 "src/markdown.c"
      var $330=(($326)>>>0) < (($329)>>>0); //@line 1746 "src/markdown.c"
      if ($330) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 1746 "src/markdown.c"
    case 72: 
      var $332=$inter; //@line 1747 "src/markdown.c"
      var $333=$3; //@line 1747 "src/markdown.c"
      var $334=$work; //@line 1747 "src/markdown.c"
      var $335=(($334)|0); //@line 1747 "src/markdown.c"
      var $336=HEAP32[(($335)>>2)]; //@line 1747 "src/markdown.c"
      var $337=$sublist; //@line 1747 "src/markdown.c"
      _parse_inline($332, $333, $336, $337); //@line 1747 "src/markdown.c"
      var $338=$inter; //@line 1748 "src/markdown.c"
      var $339=$3; //@line 1748 "src/markdown.c"
      var $340=$work; //@line 1748 "src/markdown.c"
      var $341=(($340)|0); //@line 1748 "src/markdown.c"
      var $342=HEAP32[(($341)>>2)]; //@line 1748 "src/markdown.c"
      var $343=$sublist; //@line 1748 "src/markdown.c"
      var $344=(($342+$343)|0); //@line 1748 "src/markdown.c"
      var $345=$work; //@line 1748 "src/markdown.c"
      var $346=(($345+4)|0); //@line 1748 "src/markdown.c"
      var $347=HEAP32[(($346)>>2)]; //@line 1748 "src/markdown.c"
      var $348=$sublist; //@line 1748 "src/markdown.c"
      var $349=((($347)-($348))|0); //@line 1748 "src/markdown.c"
      _parse_block($338, $339, $344, $349); //@line 1748 "src/markdown.c"
      __label__ = 74; break; //@line 1749 "src/markdown.c"
    case 73: 
      var $351=$inter; //@line 1751 "src/markdown.c"
      var $352=$3; //@line 1751 "src/markdown.c"
      var $353=$work; //@line 1751 "src/markdown.c"
      var $354=(($353)|0); //@line 1751 "src/markdown.c"
      var $355=HEAP32[(($354)>>2)]; //@line 1751 "src/markdown.c"
      var $356=$work; //@line 1751 "src/markdown.c"
      var $357=(($356+4)|0); //@line 1751 "src/markdown.c"
      var $358=HEAP32[(($357)>>2)]; //@line 1751 "src/markdown.c"
      _parse_inline($351, $352, $355, $358); //@line 1751 "src/markdown.c"
      __label__ = 74; break;
    case 74: 
      __label__ = 75; break;
    case 75: 
      var $361=$3; //@line 1755 "src/markdown.c"
      var $362=(($361)|0); //@line 1755 "src/markdown.c"
      var $363=(($362+24)|0); //@line 1755 "src/markdown.c"
      var $364=HEAP32[(($363)>>2)]; //@line 1755 "src/markdown.c"
      var $365=(($364)|0)!=0; //@line 1755 "src/markdown.c"
      if ($365) { __label__ = 76; break; } else { __label__ = 77; break; } //@line 1755 "src/markdown.c"
    case 76: 
      var $367=$3; //@line 1756 "src/markdown.c"
      var $368=(($367)|0); //@line 1756 "src/markdown.c"
      var $369=(($368+24)|0); //@line 1756 "src/markdown.c"
      var $370=HEAP32[(($369)>>2)]; //@line 1756 "src/markdown.c"
      var $371=$2; //@line 1756 "src/markdown.c"
      var $372=$inter; //@line 1756 "src/markdown.c"
      var $373=$6; //@line 1756 "src/markdown.c"
      var $374=HEAP32[(($373)>>2)]; //@line 1756 "src/markdown.c"
      var $375=$3; //@line 1756 "src/markdown.c"
      var $376=(($375+104)|0); //@line 1756 "src/markdown.c"
      var $377=HEAP32[(($376)>>2)]; //@line 1756 "src/markdown.c"
      FUNCTION_TABLE[$370]($371, $372, $374, $377); //@line 1756 "src/markdown.c"
      __label__ = 77; break; //@line 1756 "src/markdown.c"
    case 77: 
      var $379=$3; //@line 1758 "src/markdown.c"
      _rndr_popbuf($379, 1); //@line 1758 "src/markdown.c"
      var $380=$3; //@line 1759 "src/markdown.c"
      _rndr_popbuf($380, 1); //@line 1759 "src/markdown.c"
      var $381=$beg; //@line 1760 "src/markdown.c"
      $1=$381; //@line 1760 "src/markdown.c"
      __label__ = 78; break; //@line 1760 "src/markdown.c"
    case 78: 
      var $383=$1; //@line 1761 "src/markdown.c"
      ;
      return $383; //@line 1761 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_listitem["X"]=1;

function _parse_table_header($ob, $rndr, $data, $size, $columns, $column_data) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $7;
      var $pipes;
      var $i;
      var $col;
      var $header_end;
      var $under_end;
      var $dashes;
      $2=$ob;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$columns;
      $7=$column_data;
      $i=0; //@line 2049 "src/markdown.c"
      $pipes=0; //@line 2051 "src/markdown.c"
      __label__ = 3; break; //@line 2052 "src/markdown.c"
    case 3: 
      var $9=$i; //@line 2052 "src/markdown.c"
      var $10=$5; //@line 2052 "src/markdown.c"
      var $11=(($9)>>>0) < (($10)>>>0); //@line 2052 "src/markdown.c"
      if ($11) { __label__ = 4; break; } else { var $20 = 0;__label__ = 5; break; } //@line 2052 "src/markdown.c"
    case 4: 
      var $13=$i; //@line 2052 "src/markdown.c"
      var $14=$4; //@line 2052 "src/markdown.c"
      var $15=(($14+$13)|0); //@line 2052 "src/markdown.c"
      var $16=HEAPU8[($15)]; //@line 2052 "src/markdown.c"
      var $17=(($16)&255); //@line 2052 "src/markdown.c"
      var $18=(($17)|0)!=10; //@line 2052 "src/markdown.c"
      var $20 = $18;__label__ = 5; break;
    case 5: 
      var $20;
      if ($20) { __label__ = 6; break; } else { __label__ = 9; break; }
    case 6: 
      var $22=$i; //@line 2053 "src/markdown.c"
      var $23=((($22)+(1))|0); //@line 2053 "src/markdown.c"
      $i=$23; //@line 2053 "src/markdown.c"
      var $24=$4; //@line 2053 "src/markdown.c"
      var $25=(($24+$22)|0); //@line 2053 "src/markdown.c"
      var $26=HEAPU8[($25)]; //@line 2053 "src/markdown.c"
      var $27=(($26)&255); //@line 2053 "src/markdown.c"
      var $28=(($27)|0)==124; //@line 2053 "src/markdown.c"
      if ($28) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 2053 "src/markdown.c"
    case 7: 
      var $30=$pipes; //@line 2054 "src/markdown.c"
      var $31=((($30)+(1))|0); //@line 2054 "src/markdown.c"
      $pipes=$31; //@line 2054 "src/markdown.c"
      __label__ = 8; break; //@line 2054 "src/markdown.c"
    case 8: 
      __label__ = 3; break; //@line 2054 "src/markdown.c"
    case 9: 
      var $34=$i; //@line 2056 "src/markdown.c"
      var $35=$5; //@line 2056 "src/markdown.c"
      var $36=(($34)|0)==(($35)|0); //@line 2056 "src/markdown.c"
      if ($36) { __label__ = 11; break; } else { __label__ = 10; break; } //@line 2056 "src/markdown.c"
    case 10: 
      var $38=$pipes; //@line 2056 "src/markdown.c"
      var $39=(($38)|0)==0; //@line 2056 "src/markdown.c"
      if ($39) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 2056 "src/markdown.c"
    case 11: 
      $1=0; //@line 2057 "src/markdown.c"
      __label__ = 64; break; //@line 2057 "src/markdown.c"
    case 12: 
      var $42=$i; //@line 2059 "src/markdown.c"
      $header_end=$42; //@line 2059 "src/markdown.c"
      __label__ = 13; break; //@line 2061 "src/markdown.c"
    case 13: 
      var $44=$header_end; //@line 2061 "src/markdown.c"
      var $45=(($44)>>>0) > 0; //@line 2061 "src/markdown.c"
      if ($45) { __label__ = 14; break; } else { var $56 = 0;__label__ = 15; break; } //@line 2061 "src/markdown.c"
    case 14: 
      var $47=$header_end; //@line 2061 "src/markdown.c"
      var $48=((($47)-(1))|0); //@line 2061 "src/markdown.c"
      var $49=$4; //@line 2061 "src/markdown.c"
      var $50=(($49+$48)|0); //@line 2061 "src/markdown.c"
      var $51=HEAPU8[($50)]; //@line 2061 "src/markdown.c"
      var $52=(($51)&255); //@line 2061 "src/markdown.c"
      var $53=__isspace($52); //@line 2061 "src/markdown.c"
      var $54=(($53)|0)!=0; //@line 2061 "src/markdown.c"
      var $56 = $54;__label__ = 15; break;
    case 15: 
      var $56;
      if ($56) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $58=$header_end; //@line 2062 "src/markdown.c"
      var $59=((($58)-(1))|0); //@line 2062 "src/markdown.c"
      $header_end=$59; //@line 2062 "src/markdown.c"
      __label__ = 13; break; //@line 2062 "src/markdown.c"
    case 17: 
      var $61=$4; //@line 2064 "src/markdown.c"
      var $62=(($61)|0); //@line 2064 "src/markdown.c"
      var $63=HEAPU8[($62)]; //@line 2064 "src/markdown.c"
      var $64=(($63)&255); //@line 2064 "src/markdown.c"
      var $65=(($64)|0)==124; //@line 2064 "src/markdown.c"
      if ($65) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 2064 "src/markdown.c"
    case 18: 
      var $67=$pipes; //@line 2065 "src/markdown.c"
      var $68=((($67)-(1))|0); //@line 2065 "src/markdown.c"
      $pipes=$68; //@line 2065 "src/markdown.c"
      __label__ = 19; break; //@line 2065 "src/markdown.c"
    case 19: 
      var $70=$header_end; //@line 2067 "src/markdown.c"
      var $71=(($70)|0)!=0; //@line 2067 "src/markdown.c"
      if ($71) { __label__ = 20; break; } else { __label__ = 22; break; } //@line 2067 "src/markdown.c"
    case 20: 
      var $73=$header_end; //@line 2067 "src/markdown.c"
      var $74=((($73)-(1))|0); //@line 2067 "src/markdown.c"
      var $75=$4; //@line 2067 "src/markdown.c"
      var $76=(($75+$74)|0); //@line 2067 "src/markdown.c"
      var $77=HEAPU8[($76)]; //@line 2067 "src/markdown.c"
      var $78=(($77)&255); //@line 2067 "src/markdown.c"
      var $79=(($78)|0)==124; //@line 2067 "src/markdown.c"
      if ($79) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 2067 "src/markdown.c"
    case 21: 
      var $81=$pipes; //@line 2068 "src/markdown.c"
      var $82=((($81)-(1))|0); //@line 2068 "src/markdown.c"
      $pipes=$82; //@line 2068 "src/markdown.c"
      __label__ = 22; break; //@line 2068 "src/markdown.c"
    case 22: 
      var $84=$pipes; //@line 2070 "src/markdown.c"
      var $85=((($84)+(1))|0); //@line 2070 "src/markdown.c"
      var $86=$6; //@line 2070 "src/markdown.c"
      HEAP32[(($86)>>2)]=$85; //@line 2070 "src/markdown.c"
      var $87=$6; //@line 2071 "src/markdown.c"
      var $88=HEAP32[(($87)>>2)]; //@line 2071 "src/markdown.c"
      var $89=_calloc($88, 4); //@line 2071 "src/markdown.c"
      var $90=$89; //@line 2071 "src/markdown.c"
      var $91=$7; //@line 2071 "src/markdown.c"
      HEAP32[(($91)>>2)]=$90; //@line 2071 "src/markdown.c"
      var $92=$i; //@line 2074 "src/markdown.c"
      var $93=((($92)+(1))|0); //@line 2074 "src/markdown.c"
      $i=$93; //@line 2074 "src/markdown.c"
      var $94=$i; //@line 2075 "src/markdown.c"
      var $95=$5; //@line 2075 "src/markdown.c"
      var $96=(($94)>>>0) < (($95)>>>0); //@line 2075 "src/markdown.c"
      if ($96) { __label__ = 23; break; } else { __label__ = 25; break; } //@line 2075 "src/markdown.c"
    case 23: 
      var $98=$i; //@line 2075 "src/markdown.c"
      var $99=$4; //@line 2075 "src/markdown.c"
      var $100=(($99+$98)|0); //@line 2075 "src/markdown.c"
      var $101=HEAPU8[($100)]; //@line 2075 "src/markdown.c"
      var $102=(($101)&255); //@line 2075 "src/markdown.c"
      var $103=(($102)|0)==124; //@line 2075 "src/markdown.c"
      if ($103) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 2075 "src/markdown.c"
    case 24: 
      var $105=$i; //@line 2076 "src/markdown.c"
      var $106=((($105)+(1))|0); //@line 2076 "src/markdown.c"
      $i=$106; //@line 2076 "src/markdown.c"
      __label__ = 25; break; //@line 2076 "src/markdown.c"
    case 25: 
      var $108=$i; //@line 2078 "src/markdown.c"
      $under_end=$108; //@line 2078 "src/markdown.c"
      __label__ = 26; break; //@line 2079 "src/markdown.c"
    case 26: 
      var $110=$under_end; //@line 2079 "src/markdown.c"
      var $111=$5; //@line 2079 "src/markdown.c"
      var $112=(($110)>>>0) < (($111)>>>0); //@line 2079 "src/markdown.c"
      if ($112) { __label__ = 27; break; } else { var $121 = 0;__label__ = 28; break; } //@line 2079 "src/markdown.c"
    case 27: 
      var $114=$under_end; //@line 2079 "src/markdown.c"
      var $115=$4; //@line 2079 "src/markdown.c"
      var $116=(($115+$114)|0); //@line 2079 "src/markdown.c"
      var $117=HEAPU8[($116)]; //@line 2079 "src/markdown.c"
      var $118=(($117)&255); //@line 2079 "src/markdown.c"
      var $119=(($118)|0)!=10; //@line 2079 "src/markdown.c"
      var $121 = $119;__label__ = 28; break;
    case 28: 
      var $121;
      if ($121) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: 
      var $123=$under_end; //@line 2080 "src/markdown.c"
      var $124=((($123)+(1))|0); //@line 2080 "src/markdown.c"
      $under_end=$124; //@line 2080 "src/markdown.c"
      __label__ = 26; break; //@line 2080 "src/markdown.c"
    case 30: 
      $col=0; //@line 2082 "src/markdown.c"
      __label__ = 31; break; //@line 2082 "src/markdown.c"
    case 31: 
      var $127=$col; //@line 2082 "src/markdown.c"
      var $128=$6; //@line 2082 "src/markdown.c"
      var $129=HEAPU32[(($128)>>2)]; //@line 2082 "src/markdown.c"
      var $130=(($127)>>>0) < (($129)>>>0); //@line 2082 "src/markdown.c"
      if ($130) { __label__ = 32; break; } else { var $136 = 0;__label__ = 33; break; } //@line 2082 "src/markdown.c"
    case 32: 
      var $132=$i; //@line 2082 "src/markdown.c"
      var $133=$under_end; //@line 2082 "src/markdown.c"
      var $134=(($132)>>>0) < (($133)>>>0); //@line 2082 "src/markdown.c"
      var $136 = $134;__label__ = 33; break;
    case 33: 
      var $136;
      if ($136) { __label__ = 34; break; } else { __label__ = 61; break; }
    case 34: 
      $dashes=0; //@line 2083 "src/markdown.c"
      __label__ = 35; break; //@line 2085 "src/markdown.c"
    case 35: 
      var $139=$i; //@line 2085 "src/markdown.c"
      var $140=$under_end; //@line 2085 "src/markdown.c"
      var $141=(($139)>>>0) < (($140)>>>0); //@line 2085 "src/markdown.c"
      if ($141) { __label__ = 36; break; } else { var $150 = 0;__label__ = 37; break; } //@line 2085 "src/markdown.c"
    case 36: 
      var $143=$i; //@line 2085 "src/markdown.c"
      var $144=$4; //@line 2085 "src/markdown.c"
      var $145=(($144+$143)|0); //@line 2085 "src/markdown.c"
      var $146=HEAPU8[($145)]; //@line 2085 "src/markdown.c"
      var $147=(($146)&255); //@line 2085 "src/markdown.c"
      var $148=(($147)|0)==32; //@line 2085 "src/markdown.c"
      var $150 = $148;__label__ = 37; break;
    case 37: 
      var $150;
      if ($150) { __label__ = 38; break; } else { __label__ = 39; break; }
    case 38: 
      var $152=$i; //@line 2086 "src/markdown.c"
      var $153=((($152)+(1))|0); //@line 2086 "src/markdown.c"
      $i=$153; //@line 2086 "src/markdown.c"
      __label__ = 35; break; //@line 2086 "src/markdown.c"
    case 39: 
      var $155=$i; //@line 2088 "src/markdown.c"
      var $156=$4; //@line 2088 "src/markdown.c"
      var $157=(($156+$155)|0); //@line 2088 "src/markdown.c"
      var $158=HEAPU8[($157)]; //@line 2088 "src/markdown.c"
      var $159=(($158)&255); //@line 2088 "src/markdown.c"
      var $160=(($159)|0)==58; //@line 2088 "src/markdown.c"
      if ($160) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 2088 "src/markdown.c"
    case 40: 
      var $162=$i; //@line 2089 "src/markdown.c"
      var $163=((($162)+(1))|0); //@line 2089 "src/markdown.c"
      $i=$163; //@line 2089 "src/markdown.c"
      var $164=$col; //@line 2089 "src/markdown.c"
      var $165=$7; //@line 2089 "src/markdown.c"
      var $166=HEAP32[(($165)>>2)]; //@line 2089 "src/markdown.c"
      var $167=(($166+($164<<2))|0); //@line 2089 "src/markdown.c"
      var $168=HEAP32[(($167)>>2)]; //@line 2089 "src/markdown.c"
      var $169=$168 | 1; //@line 2089 "src/markdown.c"
      HEAP32[(($167)>>2)]=$169; //@line 2089 "src/markdown.c"
      var $170=$dashes; //@line 2090 "src/markdown.c"
      var $171=((($170)+(1))|0); //@line 2090 "src/markdown.c"
      $dashes=$171; //@line 2090 "src/markdown.c"
      __label__ = 41; break; //@line 2091 "src/markdown.c"
    case 41: 
      __label__ = 42; break; //@line 2093 "src/markdown.c"
    case 42: 
      var $174=$i; //@line 2093 "src/markdown.c"
      var $175=$under_end; //@line 2093 "src/markdown.c"
      var $176=(($174)>>>0) < (($175)>>>0); //@line 2093 "src/markdown.c"
      if ($176) { __label__ = 43; break; } else { var $185 = 0;__label__ = 44; break; } //@line 2093 "src/markdown.c"
    case 43: 
      var $178=$i; //@line 2093 "src/markdown.c"
      var $179=$4; //@line 2093 "src/markdown.c"
      var $180=(($179+$178)|0); //@line 2093 "src/markdown.c"
      var $181=HEAPU8[($180)]; //@line 2093 "src/markdown.c"
      var $182=(($181)&255); //@line 2093 "src/markdown.c"
      var $183=(($182)|0)==45; //@line 2093 "src/markdown.c"
      var $185 = $183;__label__ = 44; break;
    case 44: 
      var $185;
      if ($185) { __label__ = 45; break; } else { __label__ = 46; break; }
    case 45: 
      var $187=$i; //@line 2094 "src/markdown.c"
      var $188=((($187)+(1))|0); //@line 2094 "src/markdown.c"
      $i=$188; //@line 2094 "src/markdown.c"
      var $189=$dashes; //@line 2094 "src/markdown.c"
      var $190=((($189)+(1))|0); //@line 2094 "src/markdown.c"
      $dashes=$190; //@line 2094 "src/markdown.c"
      __label__ = 42; break; //@line 2095 "src/markdown.c"
    case 46: 
      var $192=$i; //@line 2097 "src/markdown.c"
      var $193=$under_end; //@line 2097 "src/markdown.c"
      var $194=(($192)>>>0) < (($193)>>>0); //@line 2097 "src/markdown.c"
      if ($194) { __label__ = 47; break; } else { __label__ = 49; break; } //@line 2097 "src/markdown.c"
    case 47: 
      var $196=$i; //@line 2097 "src/markdown.c"
      var $197=$4; //@line 2097 "src/markdown.c"
      var $198=(($197+$196)|0); //@line 2097 "src/markdown.c"
      var $199=HEAPU8[($198)]; //@line 2097 "src/markdown.c"
      var $200=(($199)&255); //@line 2097 "src/markdown.c"
      var $201=(($200)|0)==58; //@line 2097 "src/markdown.c"
      if ($201) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 2097 "src/markdown.c"
    case 48: 
      var $203=$i; //@line 2098 "src/markdown.c"
      var $204=((($203)+(1))|0); //@line 2098 "src/markdown.c"
      $i=$204; //@line 2098 "src/markdown.c"
      var $205=$col; //@line 2098 "src/markdown.c"
      var $206=$7; //@line 2098 "src/markdown.c"
      var $207=HEAP32[(($206)>>2)]; //@line 2098 "src/markdown.c"
      var $208=(($207+($205<<2))|0); //@line 2098 "src/markdown.c"
      var $209=HEAP32[(($208)>>2)]; //@line 2098 "src/markdown.c"
      var $210=$209 | 2; //@line 2098 "src/markdown.c"
      HEAP32[(($208)>>2)]=$210; //@line 2098 "src/markdown.c"
      var $211=$dashes; //@line 2099 "src/markdown.c"
      var $212=((($211)+(1))|0); //@line 2099 "src/markdown.c"
      $dashes=$212; //@line 2099 "src/markdown.c"
      __label__ = 49; break; //@line 2100 "src/markdown.c"
    case 49: 
      __label__ = 50; break; //@line 2102 "src/markdown.c"
    case 50: 
      var $215=$i; //@line 2102 "src/markdown.c"
      var $216=$under_end; //@line 2102 "src/markdown.c"
      var $217=(($215)>>>0) < (($216)>>>0); //@line 2102 "src/markdown.c"
      if ($217) { __label__ = 51; break; } else { var $226 = 0;__label__ = 52; break; } //@line 2102 "src/markdown.c"
    case 51: 
      var $219=$i; //@line 2102 "src/markdown.c"
      var $220=$4; //@line 2102 "src/markdown.c"
      var $221=(($220+$219)|0); //@line 2102 "src/markdown.c"
      var $222=HEAPU8[($221)]; //@line 2102 "src/markdown.c"
      var $223=(($222)&255); //@line 2102 "src/markdown.c"
      var $224=(($223)|0)==32; //@line 2102 "src/markdown.c"
      var $226 = $224;__label__ = 52; break;
    case 52: 
      var $226;
      if ($226) { __label__ = 53; break; } else { __label__ = 54; break; }
    case 53: 
      var $228=$i; //@line 2103 "src/markdown.c"
      var $229=((($228)+(1))|0); //@line 2103 "src/markdown.c"
      $i=$229; //@line 2103 "src/markdown.c"
      __label__ = 50; break; //@line 2103 "src/markdown.c"
    case 54: 
      var $231=$i; //@line 2105 "src/markdown.c"
      var $232=$under_end; //@line 2105 "src/markdown.c"
      var $233=(($231)>>>0) < (($232)>>>0); //@line 2105 "src/markdown.c"
      if ($233) { __label__ = 55; break; } else { __label__ = 57; break; } //@line 2105 "src/markdown.c"
    case 55: 
      var $235=$i; //@line 2105 "src/markdown.c"
      var $236=$4; //@line 2105 "src/markdown.c"
      var $237=(($236+$235)|0); //@line 2105 "src/markdown.c"
      var $238=HEAPU8[($237)]; //@line 2105 "src/markdown.c"
      var $239=(($238)&255); //@line 2105 "src/markdown.c"
      var $240=(($239)|0)!=124; //@line 2105 "src/markdown.c"
      if ($240) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 2105 "src/markdown.c"
    case 56: 
      __label__ = 61; break; //@line 2106 "src/markdown.c"
    case 57: 
      var $243=$dashes; //@line 2108 "src/markdown.c"
      var $244=(($243)>>>0) < 3; //@line 2108 "src/markdown.c"
      if ($244) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 2108 "src/markdown.c"
    case 58: 
      __label__ = 61; break; //@line 2109 "src/markdown.c"
    case 59: 
      var $247=$i; //@line 2111 "src/markdown.c"
      var $248=((($247)+(1))|0); //@line 2111 "src/markdown.c"
      $i=$248; //@line 2111 "src/markdown.c"
      __label__ = 60; break; //@line 2112 "src/markdown.c"
    case 60: 
      var $250=$col; //@line 2082 "src/markdown.c"
      var $251=((($250)+(1))|0); //@line 2082 "src/markdown.c"
      $col=$251; //@line 2082 "src/markdown.c"
      __label__ = 31; break; //@line 2082 "src/markdown.c"
    case 61: 
      var $253=$col; //@line 2114 "src/markdown.c"
      var $254=$6; //@line 2114 "src/markdown.c"
      var $255=HEAPU32[(($254)>>2)]; //@line 2114 "src/markdown.c"
      var $256=(($253)>>>0) < (($255)>>>0); //@line 2114 "src/markdown.c"
      if ($256) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 2114 "src/markdown.c"
    case 62: 
      $1=0; //@line 2115 "src/markdown.c"
      __label__ = 64; break; //@line 2115 "src/markdown.c"
    case 63: 
      var $259=$2; //@line 2117 "src/markdown.c"
      var $260=$3; //@line 2117 "src/markdown.c"
      var $261=$4; //@line 2117 "src/markdown.c"
      var $262=$header_end; //@line 2117 "src/markdown.c"
      var $263=$6; //@line 2117 "src/markdown.c"
      var $264=HEAP32[(($263)>>2)]; //@line 2117 "src/markdown.c"
      var $265=$7; //@line 2117 "src/markdown.c"
      var $266=HEAP32[(($265)>>2)]; //@line 2117 "src/markdown.c"
      _parse_table_row($259, $260, $261, $262, $264, $266, 4); //@line 2117 "src/markdown.c"
      var $267=$under_end; //@line 2125 "src/markdown.c"
      var $268=((($267)+(1))|0); //@line 2125 "src/markdown.c"
      $1=$268; //@line 2125 "src/markdown.c"
      __label__ = 64; break; //@line 2125 "src/markdown.c"
    case 64: 
      var $270=$1; //@line 2126 "src/markdown.c"
      ;
      return $270; //@line 2126 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_table_header["X"]=1;

function _parse_table_row($ob, $rndr, $data, $size, $columns, $col_data, $header_flag) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $7;
      var $i;
      var $col;
      var $row_work;
      var $cell_start;
      var $cell_end;
      var $cell_work;
      var $empty_cell=__stackBase__;
      $1=$ob;
      $2=$rndr;
      $3=$data;
      $4=$size;
      $5=$columns;
      $6=$col_data;
      $7=$header_flag;
      $i=0; //@line 1992 "src/markdown.c"
      $row_work=0; //@line 1993 "src/markdown.c"
      var $8=$2; //@line 1995 "src/markdown.c"
      var $9=(($8)|0); //@line 1995 "src/markdown.c"
      var $10=(($9+40)|0); //@line 1995 "src/markdown.c"
      var $11=HEAP32[(($10)>>2)]; //@line 1995 "src/markdown.c"
      var $12=(($11)|0)!=0; //@line 1995 "src/markdown.c"
      if ($12) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1995 "src/markdown.c"
    case 3: 
      var $14=$2; //@line 1995 "src/markdown.c"
      var $15=(($14)|0); //@line 1995 "src/markdown.c"
      var $16=(($15+36)|0); //@line 1995 "src/markdown.c"
      var $17=HEAP32[(($16)>>2)]; //@line 1995 "src/markdown.c"
      var $18=(($17)|0)!=0; //@line 1995 "src/markdown.c"
      if ($18) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1995 "src/markdown.c"
    case 4: 
      __label__ = 34; break; //@line 1996 "src/markdown.c"
    case 5: 
      var $21=$2; //@line 1998 "src/markdown.c"
      var $22=_rndr_newbuf($21, 1); //@line 1998 "src/markdown.c"
      $row_work=$22; //@line 1998 "src/markdown.c"
      var $23=$i; //@line 2000 "src/markdown.c"
      var $24=$4; //@line 2000 "src/markdown.c"
      var $25=(($23)>>>0) < (($24)>>>0); //@line 2000 "src/markdown.c"
      if ($25) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 2000 "src/markdown.c"
    case 6: 
      var $27=$i; //@line 2000 "src/markdown.c"
      var $28=$3; //@line 2000 "src/markdown.c"
      var $29=(($28+$27)|0); //@line 2000 "src/markdown.c"
      var $30=HEAPU8[($29)]; //@line 2000 "src/markdown.c"
      var $31=(($30)&255); //@line 2000 "src/markdown.c"
      var $32=(($31)|0)==124; //@line 2000 "src/markdown.c"
      if ($32) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 2000 "src/markdown.c"
    case 7: 
      var $34=$i; //@line 2001 "src/markdown.c"
      var $35=((($34)+(1))|0); //@line 2001 "src/markdown.c"
      $i=$35; //@line 2001 "src/markdown.c"
      __label__ = 8; break; //@line 2001 "src/markdown.c"
    case 8: 
      $col=0; //@line 2003 "src/markdown.c"
      __label__ = 9; break; //@line 2003 "src/markdown.c"
    case 9: 
      var $38=$col; //@line 2003 "src/markdown.c"
      var $39=$5; //@line 2003 "src/markdown.c"
      var $40=(($38)>>>0) < (($39)>>>0); //@line 2003 "src/markdown.c"
      if ($40) { __label__ = 10; break; } else { var $46 = 0;__label__ = 11; break; } //@line 2003 "src/markdown.c"
    case 10: 
      var $42=$i; //@line 2003 "src/markdown.c"
      var $43=$4; //@line 2003 "src/markdown.c"
      var $44=(($42)>>>0) < (($43)>>>0); //@line 2003 "src/markdown.c"
      var $46 = $44;__label__ = 11; break;
    case 11: 
      var $46;
      if ($46) { __label__ = 12; break; } else { __label__ = 29; break; }
    case 12: 
      var $48=$2; //@line 2007 "src/markdown.c"
      var $49=_rndr_newbuf($48, 1); //@line 2007 "src/markdown.c"
      $cell_work=$49; //@line 2007 "src/markdown.c"
      __label__ = 13; break; //@line 2009 "src/markdown.c"
    case 13: 
      var $51=$i; //@line 2009 "src/markdown.c"
      var $52=$4; //@line 2009 "src/markdown.c"
      var $53=(($51)>>>0) < (($52)>>>0); //@line 2009 "src/markdown.c"
      if ($53) { __label__ = 14; break; } else { var $63 = 0;__label__ = 15; break; } //@line 2009 "src/markdown.c"
    case 14: 
      var $55=$i; //@line 2009 "src/markdown.c"
      var $56=$3; //@line 2009 "src/markdown.c"
      var $57=(($56+$55)|0); //@line 2009 "src/markdown.c"
      var $58=HEAPU8[($57)]; //@line 2009 "src/markdown.c"
      var $59=(($58)&255); //@line 2009 "src/markdown.c"
      var $60=__isspace($59); //@line 2009 "src/markdown.c"
      var $61=(($60)|0)!=0; //@line 2009 "src/markdown.c"
      var $63 = $61;__label__ = 15; break;
    case 15: 
      var $63;
      if ($63) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $65=$i; //@line 2010 "src/markdown.c"
      var $66=((($65)+(1))|0); //@line 2010 "src/markdown.c"
      $i=$66; //@line 2010 "src/markdown.c"
      __label__ = 13; break; //@line 2010 "src/markdown.c"
    case 17: 
      var $68=$i; //@line 2012 "src/markdown.c"
      $cell_start=$68; //@line 2012 "src/markdown.c"
      __label__ = 18; break; //@line 2014 "src/markdown.c"
    case 18: 
      var $70=$i; //@line 2014 "src/markdown.c"
      var $71=$4; //@line 2014 "src/markdown.c"
      var $72=(($70)>>>0) < (($71)>>>0); //@line 2014 "src/markdown.c"
      if ($72) { __label__ = 19; break; } else { var $81 = 0;__label__ = 20; break; } //@line 2014 "src/markdown.c"
    case 19: 
      var $74=$i; //@line 2014 "src/markdown.c"
      var $75=$3; //@line 2014 "src/markdown.c"
      var $76=(($75+$74)|0); //@line 2014 "src/markdown.c"
      var $77=HEAPU8[($76)]; //@line 2014 "src/markdown.c"
      var $78=(($77)&255); //@line 2014 "src/markdown.c"
      var $79=(($78)|0)!=124; //@line 2014 "src/markdown.c"
      var $81 = $79;__label__ = 20; break;
    case 20: 
      var $81;
      if ($81) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $83=$i; //@line 2015 "src/markdown.c"
      var $84=((($83)+(1))|0); //@line 2015 "src/markdown.c"
      $i=$84; //@line 2015 "src/markdown.c"
      __label__ = 18; break; //@line 2015 "src/markdown.c"
    case 22: 
      var $86=$i; //@line 2017 "src/markdown.c"
      var $87=((($86)-(1))|0); //@line 2017 "src/markdown.c"
      $cell_end=$87; //@line 2017 "src/markdown.c"
      __label__ = 23; break; //@line 2019 "src/markdown.c"
    case 23: 
      var $89=$cell_end; //@line 2019 "src/markdown.c"
      var $90=$cell_start; //@line 2019 "src/markdown.c"
      var $91=(($89)>>>0) > (($90)>>>0); //@line 2019 "src/markdown.c"
      if ($91) { __label__ = 24; break; } else { var $101 = 0;__label__ = 25; break; } //@line 2019 "src/markdown.c"
    case 24: 
      var $93=$cell_end; //@line 2019 "src/markdown.c"
      var $94=$3; //@line 2019 "src/markdown.c"
      var $95=(($94+$93)|0); //@line 2019 "src/markdown.c"
      var $96=HEAPU8[($95)]; //@line 2019 "src/markdown.c"
      var $97=(($96)&255); //@line 2019 "src/markdown.c"
      var $98=__isspace($97); //@line 2019 "src/markdown.c"
      var $99=(($98)|0)!=0; //@line 2019 "src/markdown.c"
      var $101 = $99;__label__ = 25; break;
    case 25: 
      var $101;
      if ($101) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: 
      var $103=$cell_end; //@line 2020 "src/markdown.c"
      var $104=((($103)-(1))|0); //@line 2020 "src/markdown.c"
      $cell_end=$104; //@line 2020 "src/markdown.c"
      __label__ = 23; break; //@line 2020 "src/markdown.c"
    case 27: 
      var $106=$cell_work; //@line 2022 "src/markdown.c"
      var $107=$2; //@line 2022 "src/markdown.c"
      var $108=$3; //@line 2022 "src/markdown.c"
      var $109=$cell_start; //@line 2022 "src/markdown.c"
      var $110=(($108+$109)|0); //@line 2022 "src/markdown.c"
      var $111=$cell_end; //@line 2022 "src/markdown.c"
      var $112=((($111)+(1))|0); //@line 2022 "src/markdown.c"
      var $113=$cell_start; //@line 2022 "src/markdown.c"
      var $114=((($112)-($113))|0); //@line 2022 "src/markdown.c"
      _parse_inline($106, $107, $110, $114); //@line 2022 "src/markdown.c"
      var $115=$2; //@line 2023 "src/markdown.c"
      var $116=(($115)|0); //@line 2023 "src/markdown.c"
      var $117=(($116+40)|0); //@line 2023 "src/markdown.c"
      var $118=HEAP32[(($117)>>2)]; //@line 2023 "src/markdown.c"
      var $119=$row_work; //@line 2023 "src/markdown.c"
      var $120=$cell_work; //@line 2023 "src/markdown.c"
      var $121=$col; //@line 2023 "src/markdown.c"
      var $122=$6; //@line 2023 "src/markdown.c"
      var $123=(($122+($121<<2))|0); //@line 2023 "src/markdown.c"
      var $124=HEAP32[(($123)>>2)]; //@line 2023 "src/markdown.c"
      var $125=$7; //@line 2023 "src/markdown.c"
      var $126=$124 | $125; //@line 2023 "src/markdown.c"
      var $127=$2; //@line 2023 "src/markdown.c"
      var $128=(($127+104)|0); //@line 2023 "src/markdown.c"
      var $129=HEAP32[(($128)>>2)]; //@line 2023 "src/markdown.c"
      FUNCTION_TABLE[$118]($119, $120, $126, $129); //@line 2023 "src/markdown.c"
      var $130=$2; //@line 2025 "src/markdown.c"
      _rndr_popbuf($130, 1); //@line 2025 "src/markdown.c"
      var $131=$i; //@line 2026 "src/markdown.c"
      var $132=((($131)+(1))|0); //@line 2026 "src/markdown.c"
      $i=$132; //@line 2026 "src/markdown.c"
      __label__ = 28; break; //@line 2027 "src/markdown.c"
    case 28: 
      var $134=$col; //@line 2003 "src/markdown.c"
      var $135=((($134)+(1))|0); //@line 2003 "src/markdown.c"
      $col=$135; //@line 2003 "src/markdown.c"
      __label__ = 9; break; //@line 2003 "src/markdown.c"
    case 29: 
      __label__ = 30; break; //@line 2029 "src/markdown.c"
    case 30: 
      var $138=$col; //@line 2029 "src/markdown.c"
      var $139=$5; //@line 2029 "src/markdown.c"
      var $140=(($138)>>>0) < (($139)>>>0); //@line 2029 "src/markdown.c"
      if ($140) { __label__ = 31; break; } else { __label__ = 33; break; } //@line 2029 "src/markdown.c"
    case 31: 
      var $142=$empty_cell; //@line 2030 "src/markdown.c"
      HEAP32[(($142)>>2)]=0; HEAP32[((($142)+(4))>>2)]=0; HEAP32[((($142)+(8))>>2)]=0; HEAP32[((($142)+(12))>>2)]=0; //@line 2030 "src/markdown.c"
      var $143=$2; //@line 2031 "src/markdown.c"
      var $144=(($143)|0); //@line 2031 "src/markdown.c"
      var $145=(($144+40)|0); //@line 2031 "src/markdown.c"
      var $146=HEAP32[(($145)>>2)]; //@line 2031 "src/markdown.c"
      var $147=$row_work; //@line 2031 "src/markdown.c"
      var $148=$col; //@line 2031 "src/markdown.c"
      var $149=$6; //@line 2031 "src/markdown.c"
      var $150=(($149+($148<<2))|0); //@line 2031 "src/markdown.c"
      var $151=HEAP32[(($150)>>2)]; //@line 2031 "src/markdown.c"
      var $152=$7; //@line 2031 "src/markdown.c"
      var $153=$151 | $152; //@line 2031 "src/markdown.c"
      var $154=$2; //@line 2031 "src/markdown.c"
      var $155=(($154+104)|0); //@line 2031 "src/markdown.c"
      var $156=HEAP32[(($155)>>2)]; //@line 2031 "src/markdown.c"
      FUNCTION_TABLE[$146]($147, $empty_cell, $153, $156); //@line 2031 "src/markdown.c"
      __label__ = 32; break; //@line 2032 "src/markdown.c"
    case 32: 
      var $158=$col; //@line 2029 "src/markdown.c"
      var $159=((($158)+(1))|0); //@line 2029 "src/markdown.c"
      $col=$159; //@line 2029 "src/markdown.c"
      __label__ = 30; break; //@line 2029 "src/markdown.c"
    case 33: 
      var $161=$2; //@line 2034 "src/markdown.c"
      var $162=(($161)|0); //@line 2034 "src/markdown.c"
      var $163=(($162+36)|0); //@line 2034 "src/markdown.c"
      var $164=HEAP32[(($163)>>2)]; //@line 2034 "src/markdown.c"
      var $165=$1; //@line 2034 "src/markdown.c"
      var $166=$row_work; //@line 2034 "src/markdown.c"
      var $167=$2; //@line 2034 "src/markdown.c"
      var $168=(($167+104)|0); //@line 2034 "src/markdown.c"
      var $169=HEAP32[(($168)>>2)]; //@line 2034 "src/markdown.c"
      FUNCTION_TABLE[$164]($165, $166, $169); //@line 2034 "src/markdown.c"
      var $170=$2; //@line 2036 "src/markdown.c"
      _rndr_popbuf($170, 1); //@line 2036 "src/markdown.c"
      __label__ = 34; break; //@line 2037 "src/markdown.c"
    case 34: 
      STACKTOP = __stackBase__;
      return; //@line 2037 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_parse_table_row["X"]=1;

function _htmlblock_end($curtag, $rndr, $data, $size, $start_of_line) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $tag_size;
      var $i;
      var $end_tag;
      var $block_lines;
      $2=$curtag;
      $3=$rndr;
      $4=$data;
      $5=$size;
      $6=$start_of_line;
      var $7=$2; //@line 1862 "src/markdown.c"
      var $8=_strlen($7); //@line 1862 "src/markdown.c"
      $tag_size=$8; //@line 1862 "src/markdown.c"
      $i=1; //@line 1863 "src/markdown.c"
      $block_lines=0; //@line 1864 "src/markdown.c"
      __label__ = 3; break; //@line 1866 "src/markdown.c"
    case 3: 
      var $10=$i; //@line 1866 "src/markdown.c"
      var $11=$5; //@line 1866 "src/markdown.c"
      var $12=(($10)>>>0) < (($11)>>>0); //@line 1866 "src/markdown.c"
      if ($12) { __label__ = 4; break; } else { __label__ = 22; break; } //@line 1866 "src/markdown.c"
    case 4: 
      var $14=$i; //@line 1867 "src/markdown.c"
      var $15=((($14)+(1))|0); //@line 1867 "src/markdown.c"
      $i=$15; //@line 1867 "src/markdown.c"
      __label__ = 5; break; //@line 1868 "src/markdown.c"
    case 5: 
      var $17=$i; //@line 1868 "src/markdown.c"
      var $18=$5; //@line 1868 "src/markdown.c"
      var $19=(($17)>>>0) < (($18)>>>0); //@line 1868 "src/markdown.c"
      if ($19) { __label__ = 6; break; } else { var $39 = 0;__label__ = 9; break; } //@line 1868 "src/markdown.c"
    case 6: 
      var $21=$i; //@line 1868 "src/markdown.c"
      var $22=((($21)-(1))|0); //@line 1868 "src/markdown.c"
      var $23=$4; //@line 1868 "src/markdown.c"
      var $24=(($23+$22)|0); //@line 1868 "src/markdown.c"
      var $25=HEAPU8[($24)]; //@line 1868 "src/markdown.c"
      var $26=(($25)&255); //@line 1868 "src/markdown.c"
      var $27=(($26)|0)==60; //@line 1868 "src/markdown.c"
      if ($27) { __label__ = 7; break; } else { var $36 = 0;__label__ = 8; break; } //@line 1868 "src/markdown.c"
    case 7: 
      var $29=$i; //@line 1868 "src/markdown.c"
      var $30=$4; //@line 1868 "src/markdown.c"
      var $31=(($30+$29)|0); //@line 1868 "src/markdown.c"
      var $32=HEAPU8[($31)]; //@line 1868 "src/markdown.c"
      var $33=(($32)&255); //@line 1868 "src/markdown.c"
      var $34=(($33)|0)==47; //@line 1868 "src/markdown.c"
      var $36 = $34;__label__ = 8; break;
    case 8: 
      var $36;
      var $37=$36 ^ 1;
      var $39 = $37;__label__ = 9; break;
    case 9: 
      var $39;
      if ($39) { __label__ = 10; break; } else { __label__ = 13; break; }
    case 10: 
      var $41=$i; //@line 1869 "src/markdown.c"
      var $42=$4; //@line 1869 "src/markdown.c"
      var $43=(($42+$41)|0); //@line 1869 "src/markdown.c"
      var $44=HEAPU8[($43)]; //@line 1869 "src/markdown.c"
      var $45=(($44)&255); //@line 1869 "src/markdown.c"
      var $46=(($45)|0)==10; //@line 1869 "src/markdown.c"
      if ($46) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1869 "src/markdown.c"
    case 11: 
      var $48=$block_lines; //@line 1870 "src/markdown.c"
      var $49=((($48)+(1))|0); //@line 1870 "src/markdown.c"
      $block_lines=$49; //@line 1870 "src/markdown.c"
      __label__ = 12; break; //@line 1870 "src/markdown.c"
    case 12: 
      var $51=$i; //@line 1872 "src/markdown.c"
      var $52=((($51)+(1))|0); //@line 1872 "src/markdown.c"
      $i=$52; //@line 1872 "src/markdown.c"
      __label__ = 5; break; //@line 1873 "src/markdown.c"
    case 13: 
      var $54=$6; //@line 1882 "src/markdown.c"
      var $55=(($54)|0)!=0; //@line 1882 "src/markdown.c"
      if ($55) { __label__ = 14; break; } else { __label__ = 17; break; } //@line 1882 "src/markdown.c"
    case 14: 
      var $57=$block_lines; //@line 1882 "src/markdown.c"
      var $58=(($57)|0) > 0; //@line 1882 "src/markdown.c"
      if ($58) { __label__ = 15; break; } else { __label__ = 17; break; } //@line 1882 "src/markdown.c"
    case 15: 
      var $60=$i; //@line 1882 "src/markdown.c"
      var $61=((($60)-(2))|0); //@line 1882 "src/markdown.c"
      var $62=$4; //@line 1882 "src/markdown.c"
      var $63=(($62+$61)|0); //@line 1882 "src/markdown.c"
      var $64=HEAPU8[($63)]; //@line 1882 "src/markdown.c"
      var $65=(($64)&255); //@line 1882 "src/markdown.c"
      var $66=(($65)|0)!=10; //@line 1882 "src/markdown.c"
      if ($66) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1882 "src/markdown.c"
    case 16: 
      __label__ = 3; break; //@line 1883 "src/markdown.c"
    case 17: 
      var $69=$i; //@line 1885 "src/markdown.c"
      var $70=((($69)+(2))|0); //@line 1885 "src/markdown.c"
      var $71=$tag_size; //@line 1885 "src/markdown.c"
      var $72=((($70)+($71))|0); //@line 1885 "src/markdown.c"
      var $73=$5; //@line 1885 "src/markdown.c"
      var $74=(($72)>>>0) >= (($73)>>>0); //@line 1885 "src/markdown.c"
      if ($74) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1885 "src/markdown.c"
    case 18: 
      __label__ = 22; break; //@line 1886 "src/markdown.c"
    case 19: 
      var $77=$2; //@line 1888 "src/markdown.c"
      var $78=$tag_size; //@line 1888 "src/markdown.c"
      var $79=$3; //@line 1888 "src/markdown.c"
      var $80=$4; //@line 1888 "src/markdown.c"
      var $81=$i; //@line 1888 "src/markdown.c"
      var $82=(($80+$81)|0); //@line 1888 "src/markdown.c"
      var $83=((($82)-(1))|0); //@line 1888 "src/markdown.c"
      var $84=$5; //@line 1888 "src/markdown.c"
      var $85=$i; //@line 1888 "src/markdown.c"
      var $86=((($84)-($85))|0); //@line 1888 "src/markdown.c"
      var $87=((($86)+(1))|0); //@line 1888 "src/markdown.c"
      var $88=_htmlblock_end_tag($77, $78, $79, $83, $87); //@line 1888 "src/markdown.c"
      $end_tag=$88; //@line 1888 "src/markdown.c"
      var $89=$end_tag; //@line 1889 "src/markdown.c"
      var $90=(($89)|0)!=0; //@line 1889 "src/markdown.c"
      if ($90) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1889 "src/markdown.c"
    case 20: 
      var $92=$i; //@line 1890 "src/markdown.c"
      var $93=$end_tag; //@line 1890 "src/markdown.c"
      var $94=((($92)+($93))|0); //@line 1890 "src/markdown.c"
      var $95=((($94)-(1))|0); //@line 1890 "src/markdown.c"
      $1=$95; //@line 1890 "src/markdown.c"
      __label__ = 23; break; //@line 1890 "src/markdown.c"
    case 21: 
      __label__ = 3; break; //@line 1891 "src/markdown.c"
    case 22: 
      $1=0; //@line 1893 "src/markdown.c"
      __label__ = 23; break; //@line 1893 "src/markdown.c"
    case 23: 
      var $99=$1; //@line 1894 "src/markdown.c"
      ;
      return $99; //@line 1894 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_htmlblock_end["X"]=1;

function _stack_pop($st) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $2=$st;
      var $3=$2; //@line 57 "src/stack.c"
      var $4=(($3+4)|0); //@line 57 "src/stack.c"
      var $5=HEAP32[(($4)>>2)]; //@line 57 "src/stack.c"
      var $6=(($5)|0)!=0; //@line 57 "src/stack.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 57 "src/stack.c"
    case 3: 
      $1=0; //@line 58 "src/stack.c"
      __label__ = 5; break; //@line 58 "src/stack.c"
    case 4: 
      var $9=$2; //@line 60 "src/stack.c"
      var $10=(($9+4)|0); //@line 60 "src/stack.c"
      var $11=HEAP32[(($10)>>2)]; //@line 60 "src/stack.c"
      var $12=((($11)-(1))|0); //@line 60 "src/stack.c"
      HEAP32[(($10)>>2)]=$12; //@line 60 "src/stack.c"
      var $13=$2; //@line 60 "src/stack.c"
      var $14=(($13)|0); //@line 60 "src/stack.c"
      var $15=HEAP32[(($14)>>2)]; //@line 60 "src/stack.c"
      var $16=(($15+($12<<2))|0); //@line 60 "src/stack.c"
      var $17=HEAP32[(($16)>>2)]; //@line 60 "src/stack.c"
      $1=$17; //@line 60 "src/stack.c"
      __label__ = 5; break; //@line 60 "src/stack.c"
    case 5: 
      var $19=$1; //@line 61 "src/stack.c"
      ;
      return $19; //@line 61 "src/stack.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _stack_top($st) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $2=$st;
      var $3=$2; //@line 76 "src/stack.c"
      var $4=(($3+4)|0); //@line 76 "src/stack.c"
      var $5=HEAP32[(($4)>>2)]; //@line 76 "src/stack.c"
      var $6=(($5)|0)!=0; //@line 76 "src/stack.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 76 "src/stack.c"
    case 3: 
      $1=0; //@line 77 "src/stack.c"
      __label__ = 5; break; //@line 77 "src/stack.c"
    case 4: 
      var $9=$2; //@line 79 "src/stack.c"
      var $10=(($9+4)|0); //@line 79 "src/stack.c"
      var $11=HEAP32[(($10)>>2)]; //@line 79 "src/stack.c"
      var $12=((($11)-(1))|0); //@line 79 "src/stack.c"
      var $13=$2; //@line 79 "src/stack.c"
      var $14=(($13)|0); //@line 79 "src/stack.c"
      var $15=HEAP32[(($14)>>2)]; //@line 79 "src/stack.c"
      var $16=(($15+($12<<2))|0); //@line 79 "src/stack.c"
      var $17=HEAP32[(($16)>>2)]; //@line 79 "src/stack.c"
      $1=$17; //@line 79 "src/stack.c"
      __label__ = 5; break; //@line 79 "src/stack.c"
    case 5: 
      var $19=$1; //@line 80 "src/stack.c"
      ;
      return $19; //@line 80 "src/stack.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _htmlblock_end_tag($tag, $tag_len, $rndr, $data, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $i;
      var $w;
      $2=$tag;
      $3=$tag_len;
      $4=$rndr;
      $5=$data;
      $6=$size;
      var $7=$3; //@line 1836 "src/markdown.c"
      var $8=((($7)+(3))|0); //@line 1836 "src/markdown.c"
      var $9=$6; //@line 1836 "src/markdown.c"
      var $10=(($8)>>>0) >= (($9)>>>0); //@line 1836 "src/markdown.c"
      if ($10) { __label__ = 5; break; } else { __label__ = 3; break; } //@line 1836 "src/markdown.c"
    case 3: 
      var $12=$5; //@line 1837 "src/markdown.c"
      var $13=(($12+2)|0); //@line 1837 "src/markdown.c"
      var $14=$2; //@line 1837 "src/markdown.c"
      var $15=$3; //@line 1837 "src/markdown.c"
      var $16=_strncasecmp($13, $14, $15); //@line 1837 "src/markdown.c"
      var $17=(($16)|0)!=0; //@line 1837 "src/markdown.c"
      if ($17) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1837 "src/markdown.c"
    case 4: 
      var $19=$3; //@line 1837 "src/markdown.c"
      var $20=((($19)+(2))|0); //@line 1837 "src/markdown.c"
      var $21=$5; //@line 1837 "src/markdown.c"
      var $22=(($21+$20)|0); //@line 1837 "src/markdown.c"
      var $23=HEAPU8[($22)]; //@line 1837 "src/markdown.c"
      var $24=(($23)&255); //@line 1837 "src/markdown.c"
      var $25=(($24)|0)!=62; //@line 1837 "src/markdown.c"
      if ($25) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1837 "src/markdown.c"
    case 5: 
      $1=0; //@line 1839 "src/markdown.c"
      __label__ = 12; break; //@line 1839 "src/markdown.c"
    case 6: 
      var $28=$3; //@line 1842 "src/markdown.c"
      var $29=((($28)+(3))|0); //@line 1842 "src/markdown.c"
      $i=$29; //@line 1842 "src/markdown.c"
      $w=0; //@line 1843 "src/markdown.c"
      var $30=$i; //@line 1844 "src/markdown.c"
      var $31=$6; //@line 1844 "src/markdown.c"
      var $32=(($30)>>>0) < (($31)>>>0); //@line 1844 "src/markdown.c"
      if ($32) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 1844 "src/markdown.c"
    case 7: 
      var $34=$5; //@line 1844 "src/markdown.c"
      var $35=$i; //@line 1844 "src/markdown.c"
      var $36=(($34+$35)|0); //@line 1844 "src/markdown.c"
      var $37=$6; //@line 1844 "src/markdown.c"
      var $38=$i; //@line 1844 "src/markdown.c"
      var $39=((($37)-($38))|0); //@line 1844 "src/markdown.c"
      var $40=_is_empty($36, $39); //@line 1844 "src/markdown.c"
      $w=$40; //@line 1844 "src/markdown.c"
      var $41=(($40)|0)==0; //@line 1844 "src/markdown.c"
      if ($41) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1844 "src/markdown.c"
    case 8: 
      $1=0; //@line 1845 "src/markdown.c"
      __label__ = 12; break; //@line 1845 "src/markdown.c"
    case 9: 
      var $44=$w; //@line 1846 "src/markdown.c"
      var $45=$i; //@line 1846 "src/markdown.c"
      var $46=((($45)+($44))|0); //@line 1846 "src/markdown.c"
      $i=$46; //@line 1846 "src/markdown.c"
      $w=0; //@line 1847 "src/markdown.c"
      var $47=$i; //@line 1849 "src/markdown.c"
      var $48=$6; //@line 1849 "src/markdown.c"
      var $49=(($47)>>>0) < (($48)>>>0); //@line 1849 "src/markdown.c"
      if ($49) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1849 "src/markdown.c"
    case 10: 
      var $51=$5; //@line 1850 "src/markdown.c"
      var $52=$i; //@line 1850 "src/markdown.c"
      var $53=(($51+$52)|0); //@line 1850 "src/markdown.c"
      var $54=$6; //@line 1850 "src/markdown.c"
      var $55=$i; //@line 1850 "src/markdown.c"
      var $56=((($54)-($55))|0); //@line 1850 "src/markdown.c"
      var $57=_is_empty($53, $56); //@line 1850 "src/markdown.c"
      $w=$57; //@line 1850 "src/markdown.c"
      __label__ = 11; break; //@line 1850 "src/markdown.c"
    case 11: 
      var $59=$i; //@line 1852 "src/markdown.c"
      var $60=$w; //@line 1852 "src/markdown.c"
      var $61=((($59)+($60))|0); //@line 1852 "src/markdown.c"
      $1=$61; //@line 1852 "src/markdown.c"
      __label__ = 12; break; //@line 1852 "src/markdown.c"
    case 12: 
      var $63=$1; //@line 1853 "src/markdown.c"
      ;
      return $63; //@line 1853 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_htmlblock_end_tag["X"]=1;

function _add_link_ref($references, $name, $name_size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $ref;
      $2=$references;
      $3=$name;
      $4=$name_size;
      var $5=_calloc(1, 16); //@line 187 "src/markdown.c"
      var $6=$5; //@line 187 "src/markdown.c"
      $ref=$6; //@line 187 "src/markdown.c"
      var $7=$ref; //@line 189 "src/markdown.c"
      var $8=(($7)|0)!=0; //@line 189 "src/markdown.c"
      if ($8) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 189 "src/markdown.c"
    case 3: 
      $1=0; //@line 190 "src/markdown.c"
      __label__ = 5; break; //@line 190 "src/markdown.c"
    case 4: 
      var $11=$3; //@line 192 "src/markdown.c"
      var $12=$4; //@line 192 "src/markdown.c"
      var $13=_hash_link_ref($11, $12); //@line 192 "src/markdown.c"
      var $14=$ref; //@line 192 "src/markdown.c"
      var $15=(($14)|0); //@line 192 "src/markdown.c"
      HEAP32[(($15)>>2)]=$13; //@line 192 "src/markdown.c"
      var $16=$ref; //@line 193 "src/markdown.c"
      var $17=(($16)|0); //@line 193 "src/markdown.c"
      var $18=HEAPU32[(($17)>>2)]; //@line 193 "src/markdown.c"
      var $19=((($18)>>>0))%(8); //@line 193 "src/markdown.c"
      var $20=$2; //@line 193 "src/markdown.c"
      var $21=(($20+($19<<2))|0); //@line 193 "src/markdown.c"
      var $22=HEAP32[(($21)>>2)]; //@line 193 "src/markdown.c"
      var $23=$ref; //@line 193 "src/markdown.c"
      var $24=(($23+12)|0); //@line 193 "src/markdown.c"
      HEAP32[(($24)>>2)]=$22; //@line 193 "src/markdown.c"
      var $25=$ref; //@line 195 "src/markdown.c"
      var $26=$ref; //@line 195 "src/markdown.c"
      var $27=(($26)|0); //@line 195 "src/markdown.c"
      var $28=HEAPU32[(($27)>>2)]; //@line 195 "src/markdown.c"
      var $29=((($28)>>>0))%(8); //@line 195 "src/markdown.c"
      var $30=$2; //@line 195 "src/markdown.c"
      var $31=(($30+($29<<2))|0); //@line 195 "src/markdown.c"
      HEAP32[(($31)>>2)]=$25; //@line 195 "src/markdown.c"
      var $32=$ref; //@line 196 "src/markdown.c"
      $1=$32; //@line 196 "src/markdown.c"
      __label__ = 5; break; //@line 196 "src/markdown.c"
    case 5: 
      var $34=$1; //@line 197 "src/markdown.c"
      ;
      return $34; //@line 197 "src/markdown.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _stack_grow($st, $new_size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $new_st;
      $2=$st;
      $3=$new_size;
      var $4=$2; //@line 9 "src/stack.c"
      var $5=(($4+8)|0); //@line 9 "src/stack.c"
      var $6=HEAPU32[(($5)>>2)]; //@line 9 "src/stack.c"
      var $7=$3; //@line 9 "src/stack.c"
      var $8=(($6)>>>0) >= (($7)>>>0); //@line 9 "src/stack.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 9 "src/stack.c"
    case 3: 
      $1=0; //@line 10 "src/stack.c"
      __label__ = 9; break; //@line 10 "src/stack.c"
    case 4: 
      var $11=$2; //@line 12 "src/stack.c"
      var $12=(($11)|0); //@line 12 "src/stack.c"
      var $13=HEAP32[(($12)>>2)]; //@line 12 "src/stack.c"
      var $14=$13; //@line 12 "src/stack.c"
      var $15=$3; //@line 12 "src/stack.c"
      var $16=((($15<<2))|0); //@line 12 "src/stack.c"
      var $17=_realloc($14, $16); //@line 12 "src/stack.c"
      var $18=$17; //@line 12 "src/stack.c"
      $new_st=$18; //@line 12 "src/stack.c"
      var $19=$new_st; //@line 13 "src/stack.c"
      var $20=(($19)|0)==0; //@line 13 "src/stack.c"
      if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 13 "src/stack.c"
    case 5: 
      $1=-1; //@line 14 "src/stack.c"
      __label__ = 9; break; //@line 14 "src/stack.c"
    case 6: 
      var $23=$new_st; //@line 16 "src/stack.c"
      var $24=$2; //@line 16 "src/stack.c"
      var $25=(($24+8)|0); //@line 16 "src/stack.c"
      var $26=HEAP32[(($25)>>2)]; //@line 16 "src/stack.c"
      var $27=(($23+($26<<2))|0); //@line 16 "src/stack.c"
      var $28=$27; //@line 16 "src/stack.c"
      var $29=$3; //@line 16 "src/stack.c"
      var $30=$2; //@line 16 "src/stack.c"
      var $31=(($30+8)|0); //@line 16 "src/stack.c"
      var $32=HEAP32[(($31)>>2)]; //@line 16 "src/stack.c"
      var $33=((($29)-($32))|0); //@line 16 "src/stack.c"
      var $34=((($33<<2))|0); //@line 16 "src/stack.c"
      _memset($28, 0, $34, 4); //@line 16 "src/stack.c"
      var $35=$new_st; //@line 19 "src/stack.c"
      var $36=$2; //@line 19 "src/stack.c"
      var $37=(($36)|0); //@line 19 "src/stack.c"
      HEAP32[(($37)>>2)]=$35; //@line 19 "src/stack.c"
      var $38=$3; //@line 20 "src/stack.c"
      var $39=$2; //@line 20 "src/stack.c"
      var $40=(($39+8)|0); //@line 20 "src/stack.c"
      HEAP32[(($40)>>2)]=$38; //@line 20 "src/stack.c"
      var $41=$2; //@line 22 "src/stack.c"
      var $42=(($41+4)|0); //@line 22 "src/stack.c"
      var $43=HEAPU32[(($42)>>2)]; //@line 22 "src/stack.c"
      var $44=$3; //@line 22 "src/stack.c"
      var $45=(($43)>>>0) > (($44)>>>0); //@line 22 "src/stack.c"
      if ($45) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 22 "src/stack.c"
    case 7: 
      var $47=$3; //@line 23 "src/stack.c"
      var $48=$2; //@line 23 "src/stack.c"
      var $49=(($48+4)|0); //@line 23 "src/stack.c"
      HEAP32[(($49)>>2)]=$47; //@line 23 "src/stack.c"
      __label__ = 8; break; //@line 23 "src/stack.c"
    case 8: 
      $1=0; //@line 25 "src/stack.c"
      __label__ = 9; break; //@line 25 "src/stack.c"
    case 9: 
      var $52=$1; //@line 26 "src/stack.c"
      ;
      return $52; //@line 26 "src/stack.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_stack_grow["X"]=1;

function _stack_free($st) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$st;
      var $2=$1; //@line 31 "src/stack.c"
      var $3=(($2)|0)!=0; //@line 31 "src/stack.c"
      if ($3) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 31 "src/stack.c"
    case 3: 
      __label__ = 5; break; //@line 32 "src/stack.c"
    case 4: 
      var $6=$1; //@line 34 "src/stack.c"
      var $7=(($6)|0); //@line 34 "src/stack.c"
      var $8=HEAP32[(($7)>>2)]; //@line 34 "src/stack.c"
      var $9=$8; //@line 34 "src/stack.c"
      _free($9); //@line 34 "src/stack.c"
      var $10=$1; //@line 36 "src/stack.c"
      var $11=(($10)|0); //@line 36 "src/stack.c"
      HEAP32[(($11)>>2)]=0; //@line 36 "src/stack.c"
      var $12=$1; //@line 37 "src/stack.c"
      var $13=(($12+4)|0); //@line 37 "src/stack.c"
      HEAP32[(($13)>>2)]=0; //@line 37 "src/stack.c"
      var $14=$1; //@line 38 "src/stack.c"
      var $15=(($14+8)|0); //@line 38 "src/stack.c"
      HEAP32[(($15)>>2)]=0; //@line 38 "src/stack.c"
      __label__ = 5; break; //@line 39 "src/stack.c"
    case 5: 
      ;
      return; //@line 39 "src/stack.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _stack_init($st, $initial_size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $1=$st;
      $2=$initial_size;
      var $3=$1; //@line 44 "src/stack.c"
      var $4=(($3)|0); //@line 44 "src/stack.c"
      HEAP32[(($4)>>2)]=0; //@line 44 "src/stack.c"
      var $5=$1; //@line 45 "src/stack.c"
      var $6=(($5+4)|0); //@line 45 "src/stack.c"
      HEAP32[(($6)>>2)]=0; //@line 45 "src/stack.c"
      var $7=$1; //@line 46 "src/stack.c"
      var $8=(($7+8)|0); //@line 46 "src/stack.c"
      HEAP32[(($8)>>2)]=0; //@line 46 "src/stack.c"
      var $9=$2; //@line 48 "src/stack.c"
      var $10=(($9)|0)!=0; //@line 48 "src/stack.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 48 "src/stack.c"
    case 3: 
      $2=8; //@line 49 "src/stack.c"
      __label__ = 4; break; //@line 49 "src/stack.c"
    case 4: 
      var $13=$1; //@line 51 "src/stack.c"
      var $14=$2; //@line 51 "src/stack.c"
      var $15=_stack_grow($13, $14); //@line 51 "src/stack.c"
      ;
      return $15; //@line 51 "src/stack.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _stack_push($st, $item) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $2=$st;
      $3=$item;
      var $4=$2; //@line 66 "src/stack.c"
      var $5=$2; //@line 66 "src/stack.c"
      var $6=(($5+4)|0); //@line 66 "src/stack.c"
      var $7=HEAP32[(($6)>>2)]; //@line 66 "src/stack.c"
      var $8=((($7<<1))|0); //@line 66 "src/stack.c"
      var $9=_stack_grow($4, $8); //@line 66 "src/stack.c"
      var $10=(($9)|0) < 0; //@line 66 "src/stack.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 66 "src/stack.c"
    case 3: 
      $1=-1; //@line 67 "src/stack.c"
      __label__ = 5; break; //@line 67 "src/stack.c"
    case 4: 
      var $13=$3; //@line 69 "src/stack.c"
      var $14=$2; //@line 69 "src/stack.c"
      var $15=(($14+4)|0); //@line 69 "src/stack.c"
      var $16=HEAP32[(($15)>>2)]; //@line 69 "src/stack.c"
      var $17=((($16)+(1))|0); //@line 69 "src/stack.c"
      HEAP32[(($15)>>2)]=$17; //@line 69 "src/stack.c"
      var $18=$2; //@line 69 "src/stack.c"
      var $19=(($18)|0); //@line 69 "src/stack.c"
      var $20=HEAP32[(($19)>>2)]; //@line 69 "src/stack.c"
      var $21=(($20+($16<<2))|0); //@line 69 "src/stack.c"
      HEAP32[(($21)>>2)]=$13; //@line 69 "src/stack.c"
      $1=0; //@line 70 "src/stack.c"
      __label__ = 5; break; //@line 70 "src/stack.c"
    case 5: 
      var $23=$1; //@line 71 "src/stack.c"
      ;
      return $23; //@line 71 "src/stack.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _bufprefix($buf, $prefix) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      $2=$buf;
      $3=$prefix;
      var $4=$2; //@line 38 "src/buffer.c"
      var $5=(($4)|0)!=0; //@line 38 "src/buffer.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 38 "src/buffer.c"
    case 3: 
      var $7=$2; //@line 38 "src/buffer.c"
      var $8=(($7+12)|0); //@line 38 "src/buffer.c"
      var $9=HEAP32[(($8)>>2)]; //@line 38 "src/buffer.c"
      var $10=(($9)|0)!=0; //@line 38 "src/buffer.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 38 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 38 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 38, ((STRING_TABLE.___func___bufprefix)|0), ((STRING_TABLE.__str132)|0)); //@line 38 "src/buffer.c"
      __label__ = 6; break; //@line 38 "src/buffer.c"
    case 6: 
      $i=0; //@line 40 "src/buffer.c"
      __label__ = 7; break; //@line 40 "src/buffer.c"
    case 7: 
      var $15=$i; //@line 40 "src/buffer.c"
      var $16=$2; //@line 40 "src/buffer.c"
      var $17=(($16+4)|0); //@line 40 "src/buffer.c"
      var $18=HEAPU32[(($17)>>2)]; //@line 40 "src/buffer.c"
      var $19=(($15)>>>0) < (($18)>>>0); //@line 40 "src/buffer.c"
      if ($19) { __label__ = 8; break; } else { __label__ = 14; break; } //@line 40 "src/buffer.c"
    case 8: 
      var $21=$i; //@line 41 "src/buffer.c"
      var $22=$3; //@line 41 "src/buffer.c"
      var $23=(($22+$21)|0); //@line 41 "src/buffer.c"
      var $24=HEAP8[($23)]; //@line 41 "src/buffer.c"
      var $25=(($24 << 24) >> 24); //@line 41 "src/buffer.c"
      var $26=(($25)|0)==0; //@line 41 "src/buffer.c"
      if ($26) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 41 "src/buffer.c"
    case 9: 
      $1=0; //@line 42 "src/buffer.c"
      __label__ = 15; break; //@line 42 "src/buffer.c"
    case 10: 
      var $29=$i; //@line 44 "src/buffer.c"
      var $30=$2; //@line 44 "src/buffer.c"
      var $31=(($30)|0); //@line 44 "src/buffer.c"
      var $32=HEAP32[(($31)>>2)]; //@line 44 "src/buffer.c"
      var $33=(($32+$29)|0); //@line 44 "src/buffer.c"
      var $34=HEAPU8[($33)]; //@line 44 "src/buffer.c"
      var $35=(($34)&255); //@line 44 "src/buffer.c"
      var $36=$i; //@line 44 "src/buffer.c"
      var $37=$3; //@line 44 "src/buffer.c"
      var $38=(($37+$36)|0); //@line 44 "src/buffer.c"
      var $39=HEAP8[($38)]; //@line 44 "src/buffer.c"
      var $40=(($39 << 24) >> 24); //@line 44 "src/buffer.c"
      var $41=(($35)|0)!=(($40)|0); //@line 44 "src/buffer.c"
      if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 44 "src/buffer.c"
    case 11: 
      var $43=$i; //@line 45 "src/buffer.c"
      var $44=$2; //@line 45 "src/buffer.c"
      var $45=(($44)|0); //@line 45 "src/buffer.c"
      var $46=HEAP32[(($45)>>2)]; //@line 45 "src/buffer.c"
      var $47=(($46+$43)|0); //@line 45 "src/buffer.c"
      var $48=HEAPU8[($47)]; //@line 45 "src/buffer.c"
      var $49=(($48)&255); //@line 45 "src/buffer.c"
      var $50=$i; //@line 45 "src/buffer.c"
      var $51=$3; //@line 45 "src/buffer.c"
      var $52=(($51+$50)|0); //@line 45 "src/buffer.c"
      var $53=HEAP8[($52)]; //@line 45 "src/buffer.c"
      var $54=(($53 << 24) >> 24); //@line 45 "src/buffer.c"
      var $55=((($49)-($54))|0); //@line 45 "src/buffer.c"
      $1=$55; //@line 45 "src/buffer.c"
      __label__ = 15; break; //@line 45 "src/buffer.c"
    case 12: 
      __label__ = 13; break; //@line 46 "src/buffer.c"
    case 13: 
      var $58=$i; //@line 40 "src/buffer.c"
      var $59=((($58)+(1))|0); //@line 40 "src/buffer.c"
      $i=$59; //@line 40 "src/buffer.c"
      __label__ = 7; break; //@line 40 "src/buffer.c"
    case 14: 
      $1=0; //@line 48 "src/buffer.c"
      __label__ = 15; break; //@line 48 "src/buffer.c"
    case 15: 
      var $62=$1; //@line 49 "src/buffer.c"
      ;
      return $62; //@line 49 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_bufprefix["X"]=1;

function _bufgrow($buf, $neosz) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $neoasz;
      var $neodata;
      $2=$buf;
      $3=$neosz;
      var $4=$2; //@line 58 "src/buffer.c"
      var $5=(($4)|0)!=0; //@line 58 "src/buffer.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 58 "src/buffer.c"
    case 3: 
      var $7=$2; //@line 58 "src/buffer.c"
      var $8=(($7+12)|0); //@line 58 "src/buffer.c"
      var $9=HEAP32[(($8)>>2)]; //@line 58 "src/buffer.c"
      var $10=(($9)|0)!=0; //@line 58 "src/buffer.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 58 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 58 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 58, ((STRING_TABLE.___func___bufgrow)|0), ((STRING_TABLE.__str132)|0)); //@line 58 "src/buffer.c"
      __label__ = 6; break; //@line 58 "src/buffer.c"
    case 6: 
      var $14=$3; //@line 60 "src/buffer.c"
      var $15=(($14)>>>0) > 16777216; //@line 60 "src/buffer.c"
      if ($15) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 60 "src/buffer.c"
    case 7: 
      $1=-1; //@line 61 "src/buffer.c"
      __label__ = 16; break; //@line 61 "src/buffer.c"
    case 8: 
      var $18=$2; //@line 63 "src/buffer.c"
      var $19=(($18+8)|0); //@line 63 "src/buffer.c"
      var $20=HEAPU32[(($19)>>2)]; //@line 63 "src/buffer.c"
      var $21=$3; //@line 63 "src/buffer.c"
      var $22=(($20)>>>0) >= (($21)>>>0); //@line 63 "src/buffer.c"
      if ($22) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 63 "src/buffer.c"
    case 9: 
      $1=0; //@line 64 "src/buffer.c"
      __label__ = 16; break; //@line 64 "src/buffer.c"
    case 10: 
      var $25=$2; //@line 66 "src/buffer.c"
      var $26=(($25+8)|0); //@line 66 "src/buffer.c"
      var $27=HEAP32[(($26)>>2)]; //@line 66 "src/buffer.c"
      var $28=$2; //@line 66 "src/buffer.c"
      var $29=(($28+12)|0); //@line 66 "src/buffer.c"
      var $30=HEAP32[(($29)>>2)]; //@line 66 "src/buffer.c"
      var $31=((($27)+($30))|0); //@line 66 "src/buffer.c"
      $neoasz=$31; //@line 66 "src/buffer.c"
      __label__ = 11; break; //@line 67 "src/buffer.c"
    case 11: 
      var $33=$neoasz; //@line 67 "src/buffer.c"
      var $34=$3; //@line 67 "src/buffer.c"
      var $35=(($33)>>>0) < (($34)>>>0); //@line 67 "src/buffer.c"
      if ($35) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 67 "src/buffer.c"
    case 12: 
      var $37=$2; //@line 68 "src/buffer.c"
      var $38=(($37+12)|0); //@line 68 "src/buffer.c"
      var $39=HEAP32[(($38)>>2)]; //@line 68 "src/buffer.c"
      var $40=$neoasz; //@line 68 "src/buffer.c"
      var $41=((($40)+($39))|0); //@line 68 "src/buffer.c"
      $neoasz=$41; //@line 68 "src/buffer.c"
      __label__ = 11; break; //@line 68 "src/buffer.c"
    case 13: 
      var $43=$2; //@line 70 "src/buffer.c"
      var $44=(($43)|0); //@line 70 "src/buffer.c"
      var $45=HEAP32[(($44)>>2)]; //@line 70 "src/buffer.c"
      var $46=$neoasz; //@line 70 "src/buffer.c"
      var $47=_realloc($45, $46); //@line 70 "src/buffer.c"
      $neodata=$47; //@line 70 "src/buffer.c"
      var $48=$neodata; //@line 71 "src/buffer.c"
      var $49=(($48)|0)!=0; //@line 71 "src/buffer.c"
      if ($49) { __label__ = 15; break; } else { __label__ = 14; break; } //@line 71 "src/buffer.c"
    case 14: 
      $1=-1; //@line 72 "src/buffer.c"
      __label__ = 16; break; //@line 72 "src/buffer.c"
    case 15: 
      var $52=$neodata; //@line 74 "src/buffer.c"
      var $53=$2; //@line 74 "src/buffer.c"
      var $54=(($53)|0); //@line 74 "src/buffer.c"
      HEAP32[(($54)>>2)]=$52; //@line 74 "src/buffer.c"
      var $55=$neoasz; //@line 75 "src/buffer.c"
      var $56=$2; //@line 75 "src/buffer.c"
      var $57=(($56+8)|0); //@line 75 "src/buffer.c"
      HEAP32[(($57)>>2)]=$55; //@line 75 "src/buffer.c"
      $1=0; //@line 76 "src/buffer.c"
      __label__ = 16; break; //@line 76 "src/buffer.c"
    case 16: 
      var $59=$1; //@line 77 "src/buffer.c"
      ;
      return $59; //@line 77 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_bufgrow["X"]=1;

function _bufnew($unit) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $ret;
      $1=$unit;
      var $2=_malloc(16); //@line 85 "src/buffer.c"
      var $3=$2; //@line 85 "src/buffer.c"
      $ret=$3; //@line 85 "src/buffer.c"
      var $4=$ret; //@line 87 "src/buffer.c"
      var $5=(($4)|0)!=0; //@line 87 "src/buffer.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 87 "src/buffer.c"
    case 3: 
      var $7=$ret; //@line 88 "src/buffer.c"
      var $8=(($7)|0); //@line 88 "src/buffer.c"
      HEAP32[(($8)>>2)]=0; //@line 88 "src/buffer.c"
      var $9=$ret; //@line 89 "src/buffer.c"
      var $10=(($9+8)|0); //@line 89 "src/buffer.c"
      HEAP32[(($10)>>2)]=0; //@line 89 "src/buffer.c"
      var $11=$ret; //@line 89 "src/buffer.c"
      var $12=(($11+4)|0); //@line 89 "src/buffer.c"
      HEAP32[(($12)>>2)]=0; //@line 89 "src/buffer.c"
      var $13=$1; //@line 90 "src/buffer.c"
      var $14=$ret; //@line 90 "src/buffer.c"
      var $15=(($14+12)|0); //@line 90 "src/buffer.c"
      HEAP32[(($15)>>2)]=$13; //@line 90 "src/buffer.c"
      __label__ = 4; break; //@line 91 "src/buffer.c"
    case 4: 
      var $17=$ret; //@line 92 "src/buffer.c"
      ;
      return $17; //@line 92 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _bufcstr($buf) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $2=$buf;
      var $3=$2; //@line 99 "src/buffer.c"
      var $4=(($3)|0)!=0; //@line 99 "src/buffer.c"
      if ($4) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 99 "src/buffer.c"
    case 3: 
      var $6=$2; //@line 99 "src/buffer.c"
      var $7=(($6+12)|0); //@line 99 "src/buffer.c"
      var $8=HEAP32[(($7)>>2)]; //@line 99 "src/buffer.c"
      var $9=(($8)|0)!=0; //@line 99 "src/buffer.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 99 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 99 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 99, ((STRING_TABLE.___func___bufcstr)|0), ((STRING_TABLE.__str132)|0)); //@line 99 "src/buffer.c"
      __label__ = 6; break; //@line 99 "src/buffer.c"
    case 6: 
      var $13=$2; //@line 101 "src/buffer.c"
      var $14=(($13+4)|0); //@line 101 "src/buffer.c"
      var $15=HEAPU32[(($14)>>2)]; //@line 101 "src/buffer.c"
      var $16=$2; //@line 101 "src/buffer.c"
      var $17=(($16+8)|0); //@line 101 "src/buffer.c"
      var $18=HEAPU32[(($17)>>2)]; //@line 101 "src/buffer.c"
      var $19=(($15)>>>0) < (($18)>>>0); //@line 101 "src/buffer.c"
      if ($19) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 101 "src/buffer.c"
    case 7: 
      var $21=$2; //@line 101 "src/buffer.c"
      var $22=(($21+4)|0); //@line 101 "src/buffer.c"
      var $23=HEAP32[(($22)>>2)]; //@line 101 "src/buffer.c"
      var $24=$2; //@line 101 "src/buffer.c"
      var $25=(($24)|0); //@line 101 "src/buffer.c"
      var $26=HEAP32[(($25)>>2)]; //@line 101 "src/buffer.c"
      var $27=(($26+$23)|0); //@line 101 "src/buffer.c"
      var $28=HEAPU8[($27)]; //@line 101 "src/buffer.c"
      var $29=(($28)&255); //@line 101 "src/buffer.c"
      var $30=(($29)|0)==0; //@line 101 "src/buffer.c"
      if ($30) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 101 "src/buffer.c"
    case 8: 
      var $32=$2; //@line 102 "src/buffer.c"
      var $33=(($32)|0); //@line 102 "src/buffer.c"
      var $34=HEAP32[(($33)>>2)]; //@line 102 "src/buffer.c"
      $1=$34; //@line 102 "src/buffer.c"
      __label__ = 13; break; //@line 102 "src/buffer.c"
    case 9: 
      var $36=$2; //@line 104 "src/buffer.c"
      var $37=(($36+4)|0); //@line 104 "src/buffer.c"
      var $38=HEAP32[(($37)>>2)]; //@line 104 "src/buffer.c"
      var $39=((($38)+(1))|0); //@line 104 "src/buffer.c"
      var $40=$2; //@line 104 "src/buffer.c"
      var $41=(($40+8)|0); //@line 104 "src/buffer.c"
      var $42=HEAPU32[(($41)>>2)]; //@line 104 "src/buffer.c"
      var $43=(($39)>>>0) <= (($42)>>>0); //@line 104 "src/buffer.c"
      if ($43) { __label__ = 11; break; } else { __label__ = 10; break; } //@line 104 "src/buffer.c"
    case 10: 
      var $45=$2; //@line 104 "src/buffer.c"
      var $46=$2; //@line 104 "src/buffer.c"
      var $47=(($46+4)|0); //@line 104 "src/buffer.c"
      var $48=HEAP32[(($47)>>2)]; //@line 104 "src/buffer.c"
      var $49=((($48)+(1))|0); //@line 104 "src/buffer.c"
      var $50=_bufgrow($45, $49); //@line 104 "src/buffer.c"
      var $51=(($50)|0)==0; //@line 104 "src/buffer.c"
      if ($51) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 104 "src/buffer.c"
    case 11: 
      var $53=$2; //@line 105 "src/buffer.c"
      var $54=(($53+4)|0); //@line 105 "src/buffer.c"
      var $55=HEAP32[(($54)>>2)]; //@line 105 "src/buffer.c"
      var $56=$2; //@line 105 "src/buffer.c"
      var $57=(($56)|0); //@line 105 "src/buffer.c"
      var $58=HEAP32[(($57)>>2)]; //@line 105 "src/buffer.c"
      var $59=(($58+$55)|0); //@line 105 "src/buffer.c"
      HEAP8[($59)]=0; //@line 105 "src/buffer.c"
      var $60=$2; //@line 106 "src/buffer.c"
      var $61=(($60)|0); //@line 106 "src/buffer.c"
      var $62=HEAP32[(($61)>>2)]; //@line 106 "src/buffer.c"
      $1=$62; //@line 106 "src/buffer.c"
      __label__ = 13; break; //@line 106 "src/buffer.c"
    case 12: 
      $1=0; //@line 109 "src/buffer.c"
      __label__ = 13; break; //@line 109 "src/buffer.c"
    case 13: 
      var $65=$1; //@line 110 "src/buffer.c"
      ;
      return $65; //@line 110 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_bufcstr["X"]=1;

function _bufprintf($buf, $fmt) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $ap=__stackBase__;
      var $n;
      $1=$buf;
      $2=$fmt;
      var $3=$1; //@line 119 "src/buffer.c"
      var $4=(($3)|0)!=0; //@line 119 "src/buffer.c"
      if ($4) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 119 "src/buffer.c"
    case 3: 
      var $6=$1; //@line 119 "src/buffer.c"
      var $7=(($6+12)|0); //@line 119 "src/buffer.c"
      var $8=HEAP32[(($7)>>2)]; //@line 119 "src/buffer.c"
      var $9=(($8)|0)!=0; //@line 119 "src/buffer.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 119 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 119 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 119, ((STRING_TABLE.___func___bufprintf)|0), ((STRING_TABLE.__str132)|0)); //@line 119 "src/buffer.c"
      __label__ = 6; break; //@line 119 "src/buffer.c"
    case 6: 
      var $13=$1; //@line 121 "src/buffer.c"
      var $14=(($13+4)|0); //@line 121 "src/buffer.c"
      var $15=HEAPU32[(($14)>>2)]; //@line 121 "src/buffer.c"
      var $16=$1; //@line 121 "src/buffer.c"
      var $17=(($16+8)|0); //@line 121 "src/buffer.c"
      var $18=HEAPU32[(($17)>>2)]; //@line 121 "src/buffer.c"
      var $19=(($15)>>>0) >= (($18)>>>0); //@line 121 "src/buffer.c"
      if ($19) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 121 "src/buffer.c"
    case 7: 
      var $21=$1; //@line 121 "src/buffer.c"
      var $22=$1; //@line 121 "src/buffer.c"
      var $23=(($22+4)|0); //@line 121 "src/buffer.c"
      var $24=HEAP32[(($23)>>2)]; //@line 121 "src/buffer.c"
      var $25=((($24)+(1))|0); //@line 121 "src/buffer.c"
      var $26=_bufgrow($21, $25); //@line 121 "src/buffer.c"
      var $27=(($26)|0) < 0; //@line 121 "src/buffer.c"
      if ($27) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 121 "src/buffer.c"
    case 8: 
      __label__ = 18; break; //@line 122 "src/buffer.c"
    case 9: 
      var $30=$ap; //@line 124 "src/buffer.c"
      HEAP32[(($30)>>2)]=arguments[_bufprintf.length]; //@line 124 "src/buffer.c"
      var $31=$1; //@line 125 "src/buffer.c"
      var $32=(($31)|0); //@line 125 "src/buffer.c"
      var $33=HEAP32[(($32)>>2)]; //@line 125 "src/buffer.c"
      var $34=$1; //@line 125 "src/buffer.c"
      var $35=(($34+4)|0); //@line 125 "src/buffer.c"
      var $36=HEAP32[(($35)>>2)]; //@line 125 "src/buffer.c"
      var $37=(($33+$36)|0); //@line 125 "src/buffer.c"
      var $38=$1; //@line 125 "src/buffer.c"
      var $39=(($38+8)|0); //@line 125 "src/buffer.c"
      var $40=HEAP32[(($39)>>2)]; //@line 125 "src/buffer.c"
      var $41=$1; //@line 125 "src/buffer.c"
      var $42=(($41+4)|0); //@line 125 "src/buffer.c"
      var $43=HEAP32[(($42)>>2)]; //@line 125 "src/buffer.c"
      var $44=((($40)-($43))|0); //@line 125 "src/buffer.c"
      var $45=$2; //@line 125 "src/buffer.c"
      var $46=HEAP32[(($ap)>>2)]; //@line 125 "src/buffer.c"
      var $47=_vsnprintf($37, $44, $45, $46); //@line 125 "src/buffer.c"
      $n=$47; //@line 125 "src/buffer.c"
      var $48=$ap; //@line 126 "src/buffer.c"
      ; //@line 126 "src/buffer.c"
      var $49=$n; //@line 128 "src/buffer.c"
      var $50=(($49)|0) < 0; //@line 128 "src/buffer.c"
      if ($50) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 128 "src/buffer.c"
    case 10: 
      __label__ = 18; break; //@line 134 "src/buffer.c"
    case 11: 
      var $53=$n; //@line 138 "src/buffer.c"
      var $54=$1; //@line 138 "src/buffer.c"
      var $55=(($54+8)|0); //@line 138 "src/buffer.c"
      var $56=HEAP32[(($55)>>2)]; //@line 138 "src/buffer.c"
      var $57=$1; //@line 138 "src/buffer.c"
      var $58=(($57+4)|0); //@line 138 "src/buffer.c"
      var $59=HEAP32[(($58)>>2)]; //@line 138 "src/buffer.c"
      var $60=((($56)-($59))|0); //@line 138 "src/buffer.c"
      var $61=(($53)>>>0) >= (($60)>>>0); //@line 138 "src/buffer.c"
      if ($61) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 138 "src/buffer.c"
    case 12: 
      var $63=$1; //@line 139 "src/buffer.c"
      var $64=$1; //@line 139 "src/buffer.c"
      var $65=(($64+4)|0); //@line 139 "src/buffer.c"
      var $66=HEAP32[(($65)>>2)]; //@line 139 "src/buffer.c"
      var $67=$n; //@line 139 "src/buffer.c"
      var $68=((($66)+($67))|0); //@line 139 "src/buffer.c"
      var $69=((($68)+(1))|0); //@line 139 "src/buffer.c"
      var $70=_bufgrow($63, $69); //@line 139 "src/buffer.c"
      var $71=(($70)|0) < 0; //@line 139 "src/buffer.c"
      if ($71) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 139 "src/buffer.c"
    case 13: 
      __label__ = 18; break; //@line 140 "src/buffer.c"
    case 14: 
      var $74=$ap; //@line 142 "src/buffer.c"
      HEAP32[(($74)>>2)]=arguments[_bufprintf.length]; //@line 142 "src/buffer.c"
      var $75=$1; //@line 143 "src/buffer.c"
      var $76=(($75)|0); //@line 143 "src/buffer.c"
      var $77=HEAP32[(($76)>>2)]; //@line 143 "src/buffer.c"
      var $78=$1; //@line 143 "src/buffer.c"
      var $79=(($78+4)|0); //@line 143 "src/buffer.c"
      var $80=HEAP32[(($79)>>2)]; //@line 143 "src/buffer.c"
      var $81=(($77+$80)|0); //@line 143 "src/buffer.c"
      var $82=$1; //@line 143 "src/buffer.c"
      var $83=(($82+8)|0); //@line 143 "src/buffer.c"
      var $84=HEAP32[(($83)>>2)]; //@line 143 "src/buffer.c"
      var $85=$1; //@line 143 "src/buffer.c"
      var $86=(($85+4)|0); //@line 143 "src/buffer.c"
      var $87=HEAP32[(($86)>>2)]; //@line 143 "src/buffer.c"
      var $88=((($84)-($87))|0); //@line 143 "src/buffer.c"
      var $89=$2; //@line 143 "src/buffer.c"
      var $90=HEAP32[(($ap)>>2)]; //@line 143 "src/buffer.c"
      var $91=_vsnprintf($81, $88, $89, $90); //@line 143 "src/buffer.c"
      $n=$91; //@line 143 "src/buffer.c"
      var $92=$ap; //@line 144 "src/buffer.c"
      ; //@line 144 "src/buffer.c"
      __label__ = 15; break; //@line 145 "src/buffer.c"
    case 15: 
      var $94=$n; //@line 147 "src/buffer.c"
      var $95=(($94)|0) < 0; //@line 147 "src/buffer.c"
      if ($95) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 147 "src/buffer.c"
    case 16: 
      __label__ = 18; break; //@line 148 "src/buffer.c"
    case 17: 
      var $98=$n; //@line 150 "src/buffer.c"
      var $99=$1; //@line 150 "src/buffer.c"
      var $100=(($99+4)|0); //@line 150 "src/buffer.c"
      var $101=HEAP32[(($100)>>2)]; //@line 150 "src/buffer.c"
      var $102=((($101)+($98))|0); //@line 150 "src/buffer.c"
      HEAP32[(($100)>>2)]=$102; //@line 150 "src/buffer.c"
      __label__ = 18; break; //@line 151 "src/buffer.c"
    case 18: 
      STACKTOP = __stackBase__;
      return; //@line 151 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_bufprintf["X"]=1;

function _bufput($buf, $data, $len) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$buf;
      $2=$data;
      $3=$len;
      var $4=$1; //@line 157 "src/buffer.c"
      var $5=(($4)|0)!=0; //@line 157 "src/buffer.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 157 "src/buffer.c"
    case 3: 
      var $7=$1; //@line 157 "src/buffer.c"
      var $8=(($7+12)|0); //@line 157 "src/buffer.c"
      var $9=HEAP32[(($8)>>2)]; //@line 157 "src/buffer.c"
      var $10=(($9)|0)!=0; //@line 157 "src/buffer.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 157 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 157 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 157, ((STRING_TABLE.___func___bufput)|0), ((STRING_TABLE.__str132)|0)); //@line 157 "src/buffer.c"
      __label__ = 6; break; //@line 157 "src/buffer.c"
    case 6: 
      var $14=$1; //@line 159 "src/buffer.c"
      var $15=(($14+4)|0); //@line 159 "src/buffer.c"
      var $16=HEAP32[(($15)>>2)]; //@line 159 "src/buffer.c"
      var $17=$3; //@line 159 "src/buffer.c"
      var $18=((($16)+($17))|0); //@line 159 "src/buffer.c"
      var $19=$1; //@line 159 "src/buffer.c"
      var $20=(($19+8)|0); //@line 159 "src/buffer.c"
      var $21=HEAPU32[(($20)>>2)]; //@line 159 "src/buffer.c"
      var $22=(($18)>>>0) > (($21)>>>0); //@line 159 "src/buffer.c"
      if ($22) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 159 "src/buffer.c"
    case 7: 
      var $24=$1; //@line 159 "src/buffer.c"
      var $25=$1; //@line 159 "src/buffer.c"
      var $26=(($25+4)|0); //@line 159 "src/buffer.c"
      var $27=HEAP32[(($26)>>2)]; //@line 159 "src/buffer.c"
      var $28=$3; //@line 159 "src/buffer.c"
      var $29=((($27)+($28))|0); //@line 159 "src/buffer.c"
      var $30=_bufgrow($24, $29); //@line 159 "src/buffer.c"
      var $31=(($30)|0) < 0; //@line 159 "src/buffer.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 159 "src/buffer.c"
    case 8: 
      __label__ = 10; break; //@line 160 "src/buffer.c"
    case 9: 
      var $34=$1; //@line 162 "src/buffer.c"
      var $35=(($34)|0); //@line 162 "src/buffer.c"
      var $36=HEAP32[(($35)>>2)]; //@line 162 "src/buffer.c"
      var $37=$1; //@line 162 "src/buffer.c"
      var $38=(($37+4)|0); //@line 162 "src/buffer.c"
      var $39=HEAP32[(($38)>>2)]; //@line 162 "src/buffer.c"
      var $40=(($36+$39)|0); //@line 162 "src/buffer.c"
      var $41=$2; //@line 162 "src/buffer.c"
      var $42=$3; //@line 162 "src/buffer.c"
      assert($42 % 1 === 0, 'memcpy given ' + $42 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($40, $41, $42, 1); //@line 162 "src/buffer.c"
      var $43=$3; //@line 163 "src/buffer.c"
      var $44=$1; //@line 163 "src/buffer.c"
      var $45=(($44+4)|0); //@line 163 "src/buffer.c"
      var $46=HEAP32[(($45)>>2)]; //@line 163 "src/buffer.c"
      var $47=((($46)+($43))|0); //@line 163 "src/buffer.c"
      HEAP32[(($45)>>2)]=$47; //@line 163 "src/buffer.c"
      __label__ = 10; break; //@line 164 "src/buffer.c"
    case 10: 
      ;
      return; //@line 164 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_bufput["X"]=1;

function _bufputs($buf, $str) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$buf;
  $2=$str;
  var $3=$1; //@line 170 "src/buffer.c"
  var $4=$2; //@line 170 "src/buffer.c"
  var $5=$2; //@line 170 "src/buffer.c"
  var $6=_strlen($5); //@line 170 "src/buffer.c"
  _bufput($3, $4, $6); //@line 170 "src/buffer.c"
  ;
  return; //@line 171 "src/buffer.c"
}


function _bufputc($buf, $c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $1=$buf;
      $2=$c;
      var $3=$1; //@line 178 "src/buffer.c"
      var $4=(($3)|0)!=0; //@line 178 "src/buffer.c"
      if ($4) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 178 "src/buffer.c"
    case 3: 
      var $6=$1; //@line 178 "src/buffer.c"
      var $7=(($6+12)|0); //@line 178 "src/buffer.c"
      var $8=HEAP32[(($7)>>2)]; //@line 178 "src/buffer.c"
      var $9=(($8)|0)!=0; //@line 178 "src/buffer.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 178 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 178 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 178, ((STRING_TABLE.___func___bufputc)|0), ((STRING_TABLE.__str132)|0)); //@line 178 "src/buffer.c"
      __label__ = 6; break; //@line 178 "src/buffer.c"
    case 6: 
      var $13=$1; //@line 180 "src/buffer.c"
      var $14=(($13+4)|0); //@line 180 "src/buffer.c"
      var $15=HEAP32[(($14)>>2)]; //@line 180 "src/buffer.c"
      var $16=((($15)+(1))|0); //@line 180 "src/buffer.c"
      var $17=$1; //@line 180 "src/buffer.c"
      var $18=(($17+8)|0); //@line 180 "src/buffer.c"
      var $19=HEAPU32[(($18)>>2)]; //@line 180 "src/buffer.c"
      var $20=(($16)>>>0) > (($19)>>>0); //@line 180 "src/buffer.c"
      if ($20) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 180 "src/buffer.c"
    case 7: 
      var $22=$1; //@line 180 "src/buffer.c"
      var $23=$1; //@line 180 "src/buffer.c"
      var $24=(($23+4)|0); //@line 180 "src/buffer.c"
      var $25=HEAP32[(($24)>>2)]; //@line 180 "src/buffer.c"
      var $26=((($25)+(1))|0); //@line 180 "src/buffer.c"
      var $27=_bufgrow($22, $26); //@line 180 "src/buffer.c"
      var $28=(($27)|0) < 0; //@line 180 "src/buffer.c"
      if ($28) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 180 "src/buffer.c"
    case 8: 
      __label__ = 10; break; //@line 181 "src/buffer.c"
    case 9: 
      var $31=$2; //@line 183 "src/buffer.c"
      var $32=(($31) & 255); //@line 183 "src/buffer.c"
      var $33=$1; //@line 183 "src/buffer.c"
      var $34=(($33+4)|0); //@line 183 "src/buffer.c"
      var $35=HEAP32[(($34)>>2)]; //@line 183 "src/buffer.c"
      var $36=$1; //@line 183 "src/buffer.c"
      var $37=(($36)|0); //@line 183 "src/buffer.c"
      var $38=HEAP32[(($37)>>2)]; //@line 183 "src/buffer.c"
      var $39=(($38+$35)|0); //@line 183 "src/buffer.c"
      HEAP8[($39)]=$32; //@line 183 "src/buffer.c"
      var $40=$1; //@line 184 "src/buffer.c"
      var $41=(($40+4)|0); //@line 184 "src/buffer.c"
      var $42=HEAP32[(($41)>>2)]; //@line 184 "src/buffer.c"
      var $43=((($42)+(1))|0); //@line 184 "src/buffer.c"
      HEAP32[(($41)>>2)]=$43; //@line 184 "src/buffer.c"
      __label__ = 10; break; //@line 185 "src/buffer.c"
    case 10: 
      ;
      return; //@line 185 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_bufputc["X"]=1;

function _bufrelease($buf) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$buf;
      var $2=$1; //@line 191 "src/buffer.c"
      var $3=(($2)|0)!=0; //@line 191 "src/buffer.c"
      if ($3) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 191 "src/buffer.c"
    case 3: 
      __label__ = 5; break; //@line 192 "src/buffer.c"
    case 4: 
      var $6=$1; //@line 194 "src/buffer.c"
      var $7=(($6)|0); //@line 194 "src/buffer.c"
      var $8=HEAP32[(($7)>>2)]; //@line 194 "src/buffer.c"
      _free($8); //@line 194 "src/buffer.c"
      var $9=$1; //@line 195 "src/buffer.c"
      var $10=$9; //@line 195 "src/buffer.c"
      _free($10); //@line 195 "src/buffer.c"
      __label__ = 5; break; //@line 196 "src/buffer.c"
    case 5: 
      ;
      return; //@line 196 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _bufreset($buf) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$buf;
      var $2=$1; //@line 203 "src/buffer.c"
      var $3=(($2)|0)!=0; //@line 203 "src/buffer.c"
      if ($3) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 203 "src/buffer.c"
    case 3: 
      __label__ = 5; break; //@line 204 "src/buffer.c"
    case 4: 
      var $6=$1; //@line 206 "src/buffer.c"
      var $7=(($6)|0); //@line 206 "src/buffer.c"
      var $8=HEAP32[(($7)>>2)]; //@line 206 "src/buffer.c"
      _free($8); //@line 206 "src/buffer.c"
      var $9=$1; //@line 207 "src/buffer.c"
      var $10=(($9)|0); //@line 207 "src/buffer.c"
      HEAP32[(($10)>>2)]=0; //@line 207 "src/buffer.c"
      var $11=$1; //@line 208 "src/buffer.c"
      var $12=(($11+8)|0); //@line 208 "src/buffer.c"
      HEAP32[(($12)>>2)]=0; //@line 208 "src/buffer.c"
      var $13=$1; //@line 208 "src/buffer.c"
      var $14=(($13+4)|0); //@line 208 "src/buffer.c"
      HEAP32[(($14)>>2)]=0; //@line 208 "src/buffer.c"
      __label__ = 5; break; //@line 209 "src/buffer.c"
    case 5: 
      ;
      return; //@line 209 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _bufslurp($buf, $len) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $1=$buf;
      $2=$len;
      var $3=$1; //@line 215 "src/buffer.c"
      var $4=(($3)|0)!=0; //@line 215 "src/buffer.c"
      if ($4) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 215 "src/buffer.c"
    case 3: 
      var $6=$1; //@line 215 "src/buffer.c"
      var $7=(($6+12)|0); //@line 215 "src/buffer.c"
      var $8=HEAP32[(($7)>>2)]; //@line 215 "src/buffer.c"
      var $9=(($8)|0)!=0; //@line 215 "src/buffer.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 215 "src/buffer.c"
    case 4: 
      __label__ = 6; break; //@line 215 "src/buffer.c"
    case 5: 
      ___assert_func(((STRING_TABLE.__str31)|0), 215, ((STRING_TABLE.___func___bufslurp)|0), ((STRING_TABLE.__str132)|0)); //@line 215 "src/buffer.c"
      __label__ = 6; break; //@line 215 "src/buffer.c"
    case 6: 
      var $13=$2; //@line 217 "src/buffer.c"
      var $14=$1; //@line 217 "src/buffer.c"
      var $15=(($14+4)|0); //@line 217 "src/buffer.c"
      var $16=HEAPU32[(($15)>>2)]; //@line 217 "src/buffer.c"
      var $17=(($13)>>>0) >= (($16)>>>0); //@line 217 "src/buffer.c"
      if ($17) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 217 "src/buffer.c"
    case 7: 
      var $19=$1; //@line 218 "src/buffer.c"
      var $20=(($19+4)|0); //@line 218 "src/buffer.c"
      HEAP32[(($20)>>2)]=0; //@line 218 "src/buffer.c"
      __label__ = 9; break; //@line 219 "src/buffer.c"
    case 8: 
      var $22=$2; //@line 222 "src/buffer.c"
      var $23=$1; //@line 222 "src/buffer.c"
      var $24=(($23+4)|0); //@line 222 "src/buffer.c"
      var $25=HEAP32[(($24)>>2)]; //@line 222 "src/buffer.c"
      var $26=((($25)-($22))|0); //@line 222 "src/buffer.c"
      HEAP32[(($24)>>2)]=$26; //@line 222 "src/buffer.c"
      var $27=$1; //@line 223 "src/buffer.c"
      var $28=(($27)|0); //@line 223 "src/buffer.c"
      var $29=HEAP32[(($28)>>2)]; //@line 223 "src/buffer.c"
      var $30=$1; //@line 223 "src/buffer.c"
      var $31=(($30)|0); //@line 223 "src/buffer.c"
      var $32=HEAP32[(($31)>>2)]; //@line 223 "src/buffer.c"
      var $33=$2; //@line 223 "src/buffer.c"
      var $34=(($32+$33)|0); //@line 223 "src/buffer.c"
      var $35=$1; //@line 223 "src/buffer.c"
      var $36=(($35+4)|0); //@line 223 "src/buffer.c"
      var $37=HEAP32[(($36)>>2)]; //@line 223 "src/buffer.c"
      _llvm_memmove_p0i8_p0i8_i32($29, $34, $37, 1, 0); //@line 223 "src/buffer.c"
      __label__ = 9; break; //@line 224 "src/buffer.c"
    case 9: 
      ;
      return; //@line 224 "src/buffer.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _sd_autolink_issafe($link, $link_len) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $len;
      $2=$link;
      $3=$link_len;
      $i=0; //@line 39 "src/autolink.c"
      __label__ = 3; break; //@line 39 "src/autolink.c"
    case 3: 
      var $5=$i; //@line 39 "src/autolink.c"
      var $6=(($5)>>>0) < 5; //@line 39 "src/autolink.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 39 "src/autolink.c"
    case 4: 
      var $8=$i; //@line 40 "src/autolink.c"
      var $9=((_sd_autolink_issafe_valid_uris+($8<<2))|0); //@line 40 "src/autolink.c"
      var $10=HEAP32[(($9)>>2)]; //@line 40 "src/autolink.c"
      var $11=_strlen($10); //@line 40 "src/autolink.c"
      $len=$11; //@line 40 "src/autolink.c"
      var $12=$3; //@line 42 "src/autolink.c"
      var $13=$len; //@line 42 "src/autolink.c"
      var $14=(($12)>>>0) > (($13)>>>0); //@line 42 "src/autolink.c"
      if ($14) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 42 "src/autolink.c"
    case 5: 
      var $16=$2; //@line 43 "src/autolink.c"
      var $17=$i; //@line 43 "src/autolink.c"
      var $18=((_sd_autolink_issafe_valid_uris+($17<<2))|0); //@line 43 "src/autolink.c"
      var $19=HEAP32[(($18)>>2)]; //@line 43 "src/autolink.c"
      var $20=$len; //@line 43 "src/autolink.c"
      var $21=_strncasecmp($16, $19, $20); //@line 43 "src/autolink.c"
      var $22=(($21)|0)==0; //@line 43 "src/autolink.c"
      if ($22) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 43 "src/autolink.c"
    case 6: 
      var $24=$len; //@line 44 "src/autolink.c"
      var $25=$2; //@line 44 "src/autolink.c"
      var $26=(($25+$24)|0); //@line 44 "src/autolink.c"
      var $27=HEAPU8[($26)]; //@line 44 "src/autolink.c"
      var $28=(($27)&255); //@line 44 "src/autolink.c"
      var $29=_isalnum($28); //@line 44 "src/autolink.c"
      var $30=(($29)|0)!=0; //@line 44 "src/autolink.c"
      if ($30) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 44 "src/autolink.c"
    case 7: 
      $1=1; //@line 45 "src/autolink.c"
      __label__ = 11; break; //@line 45 "src/autolink.c"
    case 8: 
      __label__ = 9; break; //@line 46 "src/autolink.c"
    case 9: 
      var $34=$i; //@line 39 "src/autolink.c"
      var $35=((($34)+(1))|0); //@line 39 "src/autolink.c"
      $i=$35; //@line 39 "src/autolink.c"
      __label__ = 3; break; //@line 39 "src/autolink.c"
    case 10: 
      $1=0; //@line 48 "src/autolink.c"
      __label__ = 11; break; //@line 48 "src/autolink.c"
    case 11: 
      var $38=$1; //@line 49 "src/autolink.c"
      ;
      return $38; //@line 49 "src/autolink.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _sd_autolink__www($rewind_p, $link, $data, $max_rewind, $size, $flags) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $7;
      var $link_end;
      $2=$rewind_p;
      $3=$link;
      $4=$data;
      $5=$max_rewind;
      $6=$size;
      $7=$flags;
      var $8=$5; //@line 172 "src/autolink.c"
      var $9=(($8)>>>0) > 0; //@line 172 "src/autolink.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 172 "src/autolink.c"
    case 3: 
      var $11=$4; //@line 172 "src/autolink.c"
      var $12=((($11)-(1))|0); //@line 172 "src/autolink.c"
      var $13=HEAPU8[($12)]; //@line 172 "src/autolink.c"
      var $14=(($13)&255); //@line 172 "src/autolink.c"
      var $15=_ispunct($14); //@line 172 "src/autolink.c"
      var $16=(($15)|0)!=0; //@line 172 "src/autolink.c"
      if ($16) { __label__ = 6; break; } else { __label__ = 4; break; } //@line 172 "src/autolink.c"
    case 4: 
      var $18=$4; //@line 172 "src/autolink.c"
      var $19=((($18)-(1))|0); //@line 172 "src/autolink.c"
      var $20=HEAPU8[($19)]; //@line 172 "src/autolink.c"
      var $21=(($20)&255); //@line 172 "src/autolink.c"
      var $22=_isspace($21); //@line 172 "src/autolink.c"
      var $23=(($22)|0)!=0; //@line 172 "src/autolink.c"
      if ($23) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 172 "src/autolink.c"
    case 5: 
      $1=0; //@line 173 "src/autolink.c"
      __label__ = 19; break; //@line 173 "src/autolink.c"
    case 6: 
      var $26=$6; //@line 175 "src/autolink.c"
      var $27=(($26)>>>0) < 4; //@line 175 "src/autolink.c"
      if ($27) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 175 "src/autolink.c"
    case 7: 
      var $29=$4; //@line 175 "src/autolink.c"
      var $30=_memcmp($29, ((STRING_TABLE.__str548)|0), 4); //@line 175 "src/autolink.c"
      var $31=(($30)|0)!=0; //@line 175 "src/autolink.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 175 "src/autolink.c"
    case 8: 
      $1=0; //@line 176 "src/autolink.c"
      __label__ = 19; break; //@line 176 "src/autolink.c"
    case 9: 
      var $34=$4; //@line 178 "src/autolink.c"
      var $35=$6; //@line 178 "src/autolink.c"
      var $36=_check_domain($34, $35, 0); //@line 178 "src/autolink.c"
      $link_end=$36; //@line 178 "src/autolink.c"
      var $37=$link_end; //@line 180 "src/autolink.c"
      var $38=(($37)|0)==0; //@line 180 "src/autolink.c"
      if ($38) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 180 "src/autolink.c"
    case 10: 
      $1=0; //@line 181 "src/autolink.c"
      __label__ = 19; break; //@line 181 "src/autolink.c"
    case 11: 
      __label__ = 12; break; //@line 183 "src/autolink.c"
    case 12: 
      var $42=$link_end; //@line 183 "src/autolink.c"
      var $43=$6; //@line 183 "src/autolink.c"
      var $44=(($42)>>>0) < (($43)>>>0); //@line 183 "src/autolink.c"
      if ($44) { __label__ = 13; break; } else { var $55 = 0;__label__ = 14; break; } //@line 183 "src/autolink.c"
    case 13: 
      var $46=$link_end; //@line 183 "src/autolink.c"
      var $47=$4; //@line 183 "src/autolink.c"
      var $48=(($47+$46)|0); //@line 183 "src/autolink.c"
      var $49=HEAPU8[($48)]; //@line 183 "src/autolink.c"
      var $50=(($49)&255); //@line 183 "src/autolink.c"
      var $51=_isspace($50); //@line 183 "src/autolink.c"
      var $52=(($51)|0)!=0; //@line 183 "src/autolink.c"
      var $53=$52 ^ 1; //@line 183 "src/autolink.c"
      var $55 = $53;__label__ = 14; break;
    case 14: 
      var $55;
      if ($55) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $57=$link_end; //@line 184 "src/autolink.c"
      var $58=((($57)+(1))|0); //@line 184 "src/autolink.c"
      $link_end=$58; //@line 184 "src/autolink.c"
      __label__ = 12; break; //@line 184 "src/autolink.c"
    case 16: 
      var $60=$4; //@line 186 "src/autolink.c"
      var $61=$link_end; //@line 186 "src/autolink.c"
      var $62=$5; //@line 186 "src/autolink.c"
      var $63=$6; //@line 186 "src/autolink.c"
      var $64=_autolink_delim($60, $61, $62, $63); //@line 186 "src/autolink.c"
      $link_end=$64; //@line 186 "src/autolink.c"
      var $65=$link_end; //@line 188 "src/autolink.c"
      var $66=(($65)|0)==0; //@line 188 "src/autolink.c"
      if ($66) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 188 "src/autolink.c"
    case 17: 
      $1=0; //@line 189 "src/autolink.c"
      __label__ = 19; break; //@line 189 "src/autolink.c"
    case 18: 
      var $69=$3; //@line 191 "src/autolink.c"
      var $70=$4; //@line 191 "src/autolink.c"
      var $71=$link_end; //@line 191 "src/autolink.c"
      _bufput($69, $70, $71); //@line 191 "src/autolink.c"
      var $72=$2; //@line 192 "src/autolink.c"
      HEAP32[(($72)>>2)]=0; //@line 192 "src/autolink.c"
      var $73=$link_end; //@line 194 "src/autolink.c"
      $1=$73; //@line 194 "src/autolink.c"
      __label__ = 19; break; //@line 194 "src/autolink.c"
    case 19: 
      var $75=$1; //@line 195 "src/autolink.c"
      ;
      return $75; //@line 195 "src/autolink.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sd_autolink__www["X"]=1;

function _check_domain($data, $size, $allow_short) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $np;
      $2=$data;
      $3=$size;
      $4=$allow_short;
      $np=0; //@line 138 "src/autolink.c"
      var $5=$2; //@line 140 "src/autolink.c"
      var $6=(($5)|0); //@line 140 "src/autolink.c"
      var $7=HEAPU8[($6)]; //@line 140 "src/autolink.c"
      var $8=(($7)&255); //@line 140 "src/autolink.c"
      var $9=_isalnum($8); //@line 140 "src/autolink.c"
      var $10=(($9)|0)!=0; //@line 140 "src/autolink.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 140 "src/autolink.c"
    case 3: 
      $1=0; //@line 141 "src/autolink.c"
      __label__ = 20; break; //@line 141 "src/autolink.c"
    case 4: 
      $i=1; //@line 143 "src/autolink.c"
      __label__ = 5; break; //@line 143 "src/autolink.c"
    case 5: 
      var $14=$i; //@line 143 "src/autolink.c"
      var $15=$3; //@line 143 "src/autolink.c"
      var $16=((($15)-(1))|0); //@line 143 "src/autolink.c"
      var $17=(($14)>>>0) < (($16)>>>0); //@line 143 "src/autolink.c"
      if ($17) { __label__ = 6; break; } else { __label__ = 14; break; } //@line 143 "src/autolink.c"
    case 6: 
      var $19=$i; //@line 144 "src/autolink.c"
      var $20=$2; //@line 144 "src/autolink.c"
      var $21=(($20+$19)|0); //@line 144 "src/autolink.c"
      var $22=HEAPU8[($21)]; //@line 144 "src/autolink.c"
      var $23=(($22)&255); //@line 144 "src/autolink.c"
      var $24=(($23)|0)==46; //@line 144 "src/autolink.c"
      if ($24) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 144 "src/autolink.c"
    case 7: 
      var $26=$np; //@line 144 "src/autolink.c"
      var $27=((($26)+(1))|0); //@line 144 "src/autolink.c"
      $np=$27; //@line 144 "src/autolink.c"
      __label__ = 12; break; //@line 144 "src/autolink.c"
    case 8: 
      var $29=$i; //@line 145 "src/autolink.c"
      var $30=$2; //@line 145 "src/autolink.c"
      var $31=(($30+$29)|0); //@line 145 "src/autolink.c"
      var $32=HEAPU8[($31)]; //@line 145 "src/autolink.c"
      var $33=(($32)&255); //@line 145 "src/autolink.c"
      var $34=_isalnum($33); //@line 145 "src/autolink.c"
      var $35=(($34)|0)!=0; //@line 145 "src/autolink.c"
      if ($35) { __label__ = 11; break; } else { __label__ = 9; break; } //@line 145 "src/autolink.c"
    case 9: 
      var $37=$i; //@line 145 "src/autolink.c"
      var $38=$2; //@line 145 "src/autolink.c"
      var $39=(($38+$37)|0); //@line 145 "src/autolink.c"
      var $40=HEAPU8[($39)]; //@line 145 "src/autolink.c"
      var $41=(($40)&255); //@line 145 "src/autolink.c"
      var $42=(($41)|0)!=45; //@line 145 "src/autolink.c"
      if ($42) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 145 "src/autolink.c"
    case 10: 
      __label__ = 14; break; //@line 145 "src/autolink.c"
    case 11: 
      __label__ = 12; break;
    case 12: 
      __label__ = 13; break; //@line 146 "src/autolink.c"
    case 13: 
      var $47=$i; //@line 143 "src/autolink.c"
      var $48=((($47)+(1))|0); //@line 143 "src/autolink.c"
      $i=$48; //@line 143 "src/autolink.c"
      __label__ = 5; break; //@line 143 "src/autolink.c"
    case 14: 
      var $50=$4; //@line 148 "src/autolink.c"
      var $51=(($50)|0)!=0; //@line 148 "src/autolink.c"
      if ($51) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 148 "src/autolink.c"
    case 15: 
      var $53=$i; //@line 153 "src/autolink.c"
      $1=$53; //@line 153 "src/autolink.c"
      __label__ = 20; break; //@line 153 "src/autolink.c"
    case 16: 
      var $55=$np; //@line 157 "src/autolink.c"
      var $56=(($55)|0)!=0; //@line 157 "src/autolink.c"
      if ($56) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 157 "src/autolink.c"
    case 17: 
      var $58=$i; //@line 157 "src/autolink.c"
      var $61 = $58;__label__ = 19; break; //@line 157 "src/autolink.c"
    case 18: 
      var $61 = 0;__label__ = 19; break; //@line 157 "src/autolink.c"
    case 19: 
      var $61; //@line 157 "src/autolink.c"
      $1=$61; //@line 157 "src/autolink.c"
      __label__ = 20; break; //@line 157 "src/autolink.c"
    case 20: 
      var $63=$1; //@line 159 "src/autolink.c"
      ;
      return $63; //@line 159 "src/autolink.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_check_domain["X"]=1;

function _autolink_delim($data, $link_end, $max_rewind, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $cclose;
      var $copen;
      var $i;
      var $new_end;
      var $closing;
      var $opening;
      var $i1;
      $2=$data;
      $3=$link_end;
      $4=$max_rewind;
      $5=$size;
      $copen=0; //@line 54 "src/autolink.c"
      $i=0; //@line 57 "src/autolink.c"
      __label__ = 3; break; //@line 57 "src/autolink.c"
    case 3: 
      var $7=$i; //@line 57 "src/autolink.c"
      var $8=$3; //@line 57 "src/autolink.c"
      var $9=(($7)>>>0) < (($8)>>>0); //@line 57 "src/autolink.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 8; break; } //@line 57 "src/autolink.c"
    case 4: 
      var $11=$i; //@line 58 "src/autolink.c"
      var $12=$2; //@line 58 "src/autolink.c"
      var $13=(($12+$11)|0); //@line 58 "src/autolink.c"
      var $14=HEAPU8[($13)]; //@line 58 "src/autolink.c"
      var $15=(($14)&255); //@line 58 "src/autolink.c"
      var $16=(($15)|0)==60; //@line 58 "src/autolink.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 58 "src/autolink.c"
    case 5: 
      var $18=$i; //@line 59 "src/autolink.c"
      $3=$18; //@line 59 "src/autolink.c"
      __label__ = 8; break; //@line 60 "src/autolink.c"
    case 6: 
      __label__ = 7; break; //@line 61 "src/autolink.c"
    case 7: 
      var $21=$i; //@line 57 "src/autolink.c"
      var $22=((($21)+(1))|0); //@line 57 "src/autolink.c"
      $i=$22; //@line 57 "src/autolink.c"
      __label__ = 3; break; //@line 57 "src/autolink.c"
    case 8: 
      __label__ = 9; break; //@line 63 "src/autolink.c"
    case 9: 
      var $25=$3; //@line 63 "src/autolink.c"
      var $26=(($25)>>>0) > 0; //@line 63 "src/autolink.c"
      if ($26) { __label__ = 10; break; } else { __label__ = 26; break; } //@line 63 "src/autolink.c"
    case 10: 
      var $28=$3; //@line 64 "src/autolink.c"
      var $29=((($28)-(1))|0); //@line 64 "src/autolink.c"
      var $30=$2; //@line 64 "src/autolink.c"
      var $31=(($30+$29)|0); //@line 64 "src/autolink.c"
      var $32=HEAPU8[($31)]; //@line 64 "src/autolink.c"
      var $33=(($32)&255); //@line 64 "src/autolink.c"
      var $34=_strchr(((STRING_TABLE.__str750)|0), $33); //@line 64 "src/autolink.c"
      var $35=(($34)|0)!=0; //@line 64 "src/autolink.c"
      if ($35) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 64 "src/autolink.c"
    case 11: 
      var $37=$3; //@line 65 "src/autolink.c"
      var $38=((($37)-(1))|0); //@line 65 "src/autolink.c"
      $3=$38; //@line 65 "src/autolink.c"
      __label__ = 25; break; //@line 65 "src/autolink.c"
    case 12: 
      var $40=$3; //@line 67 "src/autolink.c"
      var $41=((($40)-(1))|0); //@line 67 "src/autolink.c"
      var $42=$2; //@line 67 "src/autolink.c"
      var $43=(($42+$41)|0); //@line 67 "src/autolink.c"
      var $44=HEAPU8[($43)]; //@line 67 "src/autolink.c"
      var $45=(($44)&255); //@line 67 "src/autolink.c"
      var $46=(($45)|0)==59; //@line 67 "src/autolink.c"
      if ($46) { __label__ = 13; break; } else { __label__ = 23; break; } //@line 67 "src/autolink.c"
    case 13: 
      var $48=$3; //@line 68 "src/autolink.c"
      var $49=((($48)-(2))|0); //@line 68 "src/autolink.c"
      $new_end=$49; //@line 68 "src/autolink.c"
      __label__ = 14; break; //@line 70 "src/autolink.c"
    case 14: 
      var $51=$new_end; //@line 70 "src/autolink.c"
      var $52=(($51)>>>0) > 0; //@line 70 "src/autolink.c"
      if ($52) { __label__ = 15; break; } else { var $62 = 0;__label__ = 16; break; } //@line 70 "src/autolink.c"
    case 15: 
      var $54=$new_end; //@line 70 "src/autolink.c"
      var $55=$2; //@line 70 "src/autolink.c"
      var $56=(($55+$54)|0); //@line 70 "src/autolink.c"
      var $57=HEAPU8[($56)]; //@line 70 "src/autolink.c"
      var $58=(($57)&255); //@line 70 "src/autolink.c"
      var $59=_isalpha($58); //@line 70 "src/autolink.c"
      var $60=(($59)|0)!=0; //@line 70 "src/autolink.c"
      var $62 = $60;__label__ = 16; break;
    case 16: 
      var $62;
      if ($62) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      var $64=$new_end; //@line 71 "src/autolink.c"
      var $65=((($64)-(1))|0); //@line 71 "src/autolink.c"
      $new_end=$65; //@line 71 "src/autolink.c"
      __label__ = 14; break; //@line 71 "src/autolink.c"
    case 18: 
      var $67=$new_end; //@line 73 "src/autolink.c"
      var $68=$3; //@line 73 "src/autolink.c"
      var $69=((($68)-(2))|0); //@line 73 "src/autolink.c"
      var $70=(($67)>>>0) < (($69)>>>0); //@line 73 "src/autolink.c"
      if ($70) { __label__ = 19; break; } else { __label__ = 21; break; } //@line 73 "src/autolink.c"
    case 19: 
      var $72=$new_end; //@line 73 "src/autolink.c"
      var $73=$2; //@line 73 "src/autolink.c"
      var $74=(($73+$72)|0); //@line 73 "src/autolink.c"
      var $75=HEAPU8[($74)]; //@line 73 "src/autolink.c"
      var $76=(($75)&255); //@line 73 "src/autolink.c"
      var $77=(($76)|0)==38; //@line 73 "src/autolink.c"
      if ($77) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 73 "src/autolink.c"
    case 20: 
      var $79=$new_end; //@line 74 "src/autolink.c"
      $3=$79; //@line 74 "src/autolink.c"
      __label__ = 22; break; //@line 74 "src/autolink.c"
    case 21: 
      var $81=$3; //@line 76 "src/autolink.c"
      var $82=((($81)-(1))|0); //@line 76 "src/autolink.c"
      $3=$82; //@line 76 "src/autolink.c"
      __label__ = 22; break;
    case 22: 
      __label__ = 24; break; //@line 77 "src/autolink.c"
    case 23: 
      __label__ = 26; break; //@line 78 "src/autolink.c"
    case 24: 
      __label__ = 25; break;
    case 25: 
      __label__ = 9; break; //@line 79 "src/autolink.c"
    case 26: 
      var $88=$3; //@line 81 "src/autolink.c"
      var $89=(($88)|0)==0; //@line 81 "src/autolink.c"
      if ($89) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 81 "src/autolink.c"
    case 27: 
      $1=0; //@line 82 "src/autolink.c"
      __label__ = 47; break; //@line 82 "src/autolink.c"
    case 28: 
      var $92=$3; //@line 84 "src/autolink.c"
      var $93=((($92)-(1))|0); //@line 84 "src/autolink.c"
      var $94=$2; //@line 84 "src/autolink.c"
      var $95=(($94+$93)|0); //@line 84 "src/autolink.c"
      var $96=HEAP8[($95)]; //@line 84 "src/autolink.c"
      $cclose=$96; //@line 84 "src/autolink.c"
      var $97=$cclose; //@line 86 "src/autolink.c"
      var $98=(($97)&255); //@line 86 "src/autolink.c"
      if ((($98)|0) == 34) {
        __label__ = 29; break;
      }
      else if ((($98)|0) == 39) {
        __label__ = 30; break;
      }
      else if ((($98)|0) == 41) {
        __label__ = 31; break;
      }
      else if ((($98)|0) == 93) {
        __label__ = 32; break;
      }
      else if ((($98)|0) == 125) {
        __label__ = 33; break;
      }
      else {
      __label__ = 34; break;
      }
      
    case 29: 
      $copen=34; //@line 87 "src/autolink.c"
      __label__ = 34; break; //@line 87 "src/autolink.c"
    case 30: 
      $copen=39; //@line 88 "src/autolink.c"
      __label__ = 34; break; //@line 88 "src/autolink.c"
    case 31: 
      $copen=40; //@line 89 "src/autolink.c"
      __label__ = 34; break; //@line 89 "src/autolink.c"
    case 32: 
      $copen=91; //@line 90 "src/autolink.c"
      __label__ = 34; break; //@line 90 "src/autolink.c"
    case 33: 
      $copen=123; //@line 91 "src/autolink.c"
      __label__ = 34; break; //@line 91 "src/autolink.c"
    case 34: 
      var $105=$copen; //@line 94 "src/autolink.c"
      var $106=(($105)&255); //@line 94 "src/autolink.c"
      var $107=(($106)|0)!=0; //@line 94 "src/autolink.c"
      if ($107) { __label__ = 35; break; } else { __label__ = 46; break; } //@line 94 "src/autolink.c"
    case 35: 
      $closing=0; //@line 95 "src/autolink.c"
      $opening=0; //@line 96 "src/autolink.c"
      $i1=0; //@line 97 "src/autolink.c"
      __label__ = 36; break; //@line 119 "src/autolink.c"
    case 36: 
      var $110=$i1; //@line 119 "src/autolink.c"
      var $111=$3; //@line 119 "src/autolink.c"
      var $112=(($110)>>>0) < (($111)>>>0); //@line 119 "src/autolink.c"
      if ($112) { __label__ = 37; break; } else { __label__ = 43; break; } //@line 119 "src/autolink.c"
    case 37: 
      var $114=$i1; //@line 120 "src/autolink.c"
      var $115=$2; //@line 120 "src/autolink.c"
      var $116=(($115+$114)|0); //@line 120 "src/autolink.c"
      var $117=HEAPU8[($116)]; //@line 120 "src/autolink.c"
      var $118=(($117)&255); //@line 120 "src/autolink.c"
      var $119=$copen; //@line 120 "src/autolink.c"
      var $120=(($119)&255); //@line 120 "src/autolink.c"
      var $121=(($118)|0)==(($120)|0); //@line 120 "src/autolink.c"
      if ($121) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 120 "src/autolink.c"
    case 38: 
      var $123=$opening; //@line 121 "src/autolink.c"
      var $124=((($123)+(1))|0); //@line 121 "src/autolink.c"
      $opening=$124; //@line 121 "src/autolink.c"
      __label__ = 42; break; //@line 121 "src/autolink.c"
    case 39: 
      var $126=$i1; //@line 122 "src/autolink.c"
      var $127=$2; //@line 122 "src/autolink.c"
      var $128=(($127+$126)|0); //@line 122 "src/autolink.c"
      var $129=HEAPU8[($128)]; //@line 122 "src/autolink.c"
      var $130=(($129)&255); //@line 122 "src/autolink.c"
      var $131=$cclose; //@line 122 "src/autolink.c"
      var $132=(($131)&255); //@line 122 "src/autolink.c"
      var $133=(($130)|0)==(($132)|0); //@line 122 "src/autolink.c"
      if ($133) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 122 "src/autolink.c"
    case 40: 
      var $135=$closing; //@line 123 "src/autolink.c"
      var $136=((($135)+(1))|0); //@line 123 "src/autolink.c"
      $closing=$136; //@line 123 "src/autolink.c"
      __label__ = 41; break; //@line 123 "src/autolink.c"
    case 41: 
      __label__ = 42; break;
    case 42: 
      var $139=$i1; //@line 125 "src/autolink.c"
      var $140=((($139)+(1))|0); //@line 125 "src/autolink.c"
      $i1=$140; //@line 125 "src/autolink.c"
      __label__ = 36; break; //@line 126 "src/autolink.c"
    case 43: 
      var $142=$closing; //@line 128 "src/autolink.c"
      var $143=$opening; //@line 128 "src/autolink.c"
      var $144=(($142)|0)!=(($143)|0); //@line 128 "src/autolink.c"
      if ($144) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 128 "src/autolink.c"
    case 44: 
      var $146=$3; //@line 129 "src/autolink.c"
      var $147=((($146)-(1))|0); //@line 129 "src/autolink.c"
      $3=$147; //@line 129 "src/autolink.c"
      __label__ = 45; break; //@line 129 "src/autolink.c"
    case 45: 
      __label__ = 46; break; //@line 130 "src/autolink.c"
    case 46: 
      var $150=$3; //@line 132 "src/autolink.c"
      $1=$150; //@line 132 "src/autolink.c"
      __label__ = 47; break; //@line 132 "src/autolink.c"
    case 47: 
      var $152=$1; //@line 133 "src/autolink.c"
      ;
      return $152; //@line 133 "src/autolink.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_autolink_delim["X"]=1;

function _sd_autolink__email($rewind_p, $link, $data, $max_rewind, $size, $flags) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $7;
      var $link_end;
      var $rewind;
      var $nb;
      var $np;
      var $c;
      var $c1;
      $2=$rewind_p;
      $3=$link;
      $4=$data;
      $5=$max_rewind;
      $6=$size;
      $7=$flags;
      $nb=0; //@line 207 "src/autolink.c"
      $np=0; //@line 207 "src/autolink.c"
      $rewind=0; //@line 209 "src/autolink.c"
      __label__ = 3; break; //@line 209 "src/autolink.c"
    case 3: 
      var $9=$rewind; //@line 209 "src/autolink.c"
      var $10=$5; //@line 209 "src/autolink.c"
      var $11=(($9)>>>0) < (($10)>>>0); //@line 209 "src/autolink.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 209 "src/autolink.c"
    case 4: 
      var $13=$rewind; //@line 210 "src/autolink.c"
      var $14=(((-$13))|0); //@line 210 "src/autolink.c"
      var $15=((($14)-(1))|0); //@line 210 "src/autolink.c"
      var $16=$4; //@line 210 "src/autolink.c"
      var $17=(($16+$15)|0); //@line 210 "src/autolink.c"
      var $18=HEAP8[($17)]; //@line 210 "src/autolink.c"
      $c=$18; //@line 210 "src/autolink.c"
      var $19=$c; //@line 212 "src/autolink.c"
      var $20=(($19)&255); //@line 212 "src/autolink.c"
      var $21=_isalnum($20); //@line 212 "src/autolink.c"
      var $22=(($21)|0)!=0; //@line 212 "src/autolink.c"
      if ($22) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 212 "src/autolink.c"
    case 5: 
      __label__ = 9; break; //@line 213 "src/autolink.c"
    case 6: 
      var $25=$c; //@line 215 "src/autolink.c"
      var $26=(($25)&255); //@line 215 "src/autolink.c"
      var $27=_strchr(((STRING_TABLE.__str649)|0), $26); //@line 215 "src/autolink.c"
      var $28=(($27)|0)!=0; //@line 215 "src/autolink.c"
      if ($28) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 215 "src/autolink.c"
    case 7: 
      __label__ = 9; break; //@line 216 "src/autolink.c"
    case 8: 
      __label__ = 10; break; //@line 218 "src/autolink.c"
    case 9: 
      var $32=$rewind; //@line 209 "src/autolink.c"
      var $33=((($32)+(1))|0); //@line 209 "src/autolink.c"
      $rewind=$33; //@line 209 "src/autolink.c"
      __label__ = 3; break; //@line 209 "src/autolink.c"
    case 10: 
      var $35=$rewind; //@line 221 "src/autolink.c"
      var $36=(($35)|0)==0; //@line 221 "src/autolink.c"
      if ($36) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 221 "src/autolink.c"
    case 11: 
      $1=0; //@line 222 "src/autolink.c"
      __label__ = 35; break; //@line 222 "src/autolink.c"
    case 12: 
      $link_end=0; //@line 224 "src/autolink.c"
      __label__ = 13; break; //@line 224 "src/autolink.c"
    case 13: 
      var $40=$link_end; //@line 224 "src/autolink.c"
      var $41=$6; //@line 224 "src/autolink.c"
      var $42=(($40)>>>0) < (($41)>>>0); //@line 224 "src/autolink.c"
      if ($42) { __label__ = 14; break; } else { __label__ = 28; break; } //@line 224 "src/autolink.c"
    case 14: 
      var $44=$link_end; //@line 225 "src/autolink.c"
      var $45=$4; //@line 225 "src/autolink.c"
      var $46=(($45+$44)|0); //@line 225 "src/autolink.c"
      var $47=HEAP8[($46)]; //@line 225 "src/autolink.c"
      $c1=$47; //@line 225 "src/autolink.c"
      var $48=$c1; //@line 227 "src/autolink.c"
      var $49=(($48)&255); //@line 227 "src/autolink.c"
      var $50=_isalnum($49); //@line 227 "src/autolink.c"
      var $51=(($50)|0)!=0; //@line 227 "src/autolink.c"
      if ($51) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 227 "src/autolink.c"
    case 15: 
      __label__ = 27; break; //@line 228 "src/autolink.c"
    case 16: 
      var $54=$c1; //@line 230 "src/autolink.c"
      var $55=(($54)&255); //@line 230 "src/autolink.c"
      var $56=(($55)|0)==64; //@line 230 "src/autolink.c"
      if ($56) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 230 "src/autolink.c"
    case 17: 
      var $58=$nb; //@line 231 "src/autolink.c"
      var $59=((($58)+(1))|0); //@line 231 "src/autolink.c"
      $nb=$59; //@line 231 "src/autolink.c"
      __label__ = 26; break; //@line 231 "src/autolink.c"
    case 18: 
      var $61=$c1; //@line 232 "src/autolink.c"
      var $62=(($61)&255); //@line 232 "src/autolink.c"
      var $63=(($62)|0)==46; //@line 232 "src/autolink.c"
      if ($63) { __label__ = 19; break; } else { __label__ = 21; break; } //@line 232 "src/autolink.c"
    case 19: 
      var $65=$link_end; //@line 232 "src/autolink.c"
      var $66=$6; //@line 232 "src/autolink.c"
      var $67=((($66)-(1))|0); //@line 232 "src/autolink.c"
      var $68=(($65)>>>0) < (($67)>>>0); //@line 232 "src/autolink.c"
      if ($68) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 232 "src/autolink.c"
    case 20: 
      var $70=$np; //@line 233 "src/autolink.c"
      var $71=((($70)+(1))|0); //@line 233 "src/autolink.c"
      $np=$71; //@line 233 "src/autolink.c"
      __label__ = 25; break; //@line 233 "src/autolink.c"
    case 21: 
      var $73=$c1; //@line 234 "src/autolink.c"
      var $74=(($73)&255); //@line 234 "src/autolink.c"
      var $75=(($74)|0)!=45; //@line 234 "src/autolink.c"
      if ($75) { __label__ = 22; break; } else { __label__ = 24; break; } //@line 234 "src/autolink.c"
    case 22: 
      var $77=$c1; //@line 234 "src/autolink.c"
      var $78=(($77)&255); //@line 234 "src/autolink.c"
      var $79=(($78)|0)!=95; //@line 234 "src/autolink.c"
      if ($79) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 234 "src/autolink.c"
    case 23: 
      __label__ = 28; break; //@line 235 "src/autolink.c"
    case 24: 
      __label__ = 25; break;
    case 25: 
      __label__ = 26; break;
    case 26: 
      __label__ = 27; break; //@line 236 "src/autolink.c"
    case 27: 
      var $85=$link_end; //@line 224 "src/autolink.c"
      var $86=((($85)+(1))|0); //@line 224 "src/autolink.c"
      $link_end=$86; //@line 224 "src/autolink.c"
      __label__ = 13; break; //@line 224 "src/autolink.c"
    case 28: 
      var $88=$link_end; //@line 238 "src/autolink.c"
      var $89=(($88)>>>0) < 2; //@line 238 "src/autolink.c"
      if ($89) { __label__ = 31; break; } else { __label__ = 29; break; } //@line 238 "src/autolink.c"
    case 29: 
      var $91=$nb; //@line 238 "src/autolink.c"
      var $92=(($91)|0)!=1; //@line 238 "src/autolink.c"
      if ($92) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 238 "src/autolink.c"
    case 30: 
      var $94=$np; //@line 238 "src/autolink.c"
      var $95=(($94)|0)==0; //@line 238 "src/autolink.c"
      if ($95) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 238 "src/autolink.c"
    case 31: 
      $1=0; //@line 239 "src/autolink.c"
      __label__ = 35; break; //@line 239 "src/autolink.c"
    case 32: 
      var $98=$4; //@line 241 "src/autolink.c"
      var $99=$link_end; //@line 241 "src/autolink.c"
      var $100=$5; //@line 241 "src/autolink.c"
      var $101=$6; //@line 241 "src/autolink.c"
      var $102=_autolink_delim($98, $99, $100, $101); //@line 241 "src/autolink.c"
      $link_end=$102; //@line 241 "src/autolink.c"
      var $103=$link_end; //@line 243 "src/autolink.c"
      var $104=(($103)|0)==0; //@line 243 "src/autolink.c"
      if ($104) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 243 "src/autolink.c"
    case 33: 
      $1=0; //@line 244 "src/autolink.c"
      __label__ = 35; break; //@line 244 "src/autolink.c"
    case 34: 
      var $107=$3; //@line 246 "src/autolink.c"
      var $108=$4; //@line 246 "src/autolink.c"
      var $109=$rewind; //@line 246 "src/autolink.c"
      var $110=(((-$109))|0); //@line 246 "src/autolink.c"
      var $111=(($108+$110)|0); //@line 246 "src/autolink.c"
      var $112=$link_end; //@line 246 "src/autolink.c"
      var $113=$rewind; //@line 246 "src/autolink.c"
      var $114=((($112)+($113))|0); //@line 246 "src/autolink.c"
      _bufput($107, $111, $114); //@line 246 "src/autolink.c"
      var $115=$rewind; //@line 247 "src/autolink.c"
      var $116=$2; //@line 247 "src/autolink.c"
      HEAP32[(($116)>>2)]=$115; //@line 247 "src/autolink.c"
      var $117=$link_end; //@line 249 "src/autolink.c"
      $1=$117; //@line 249 "src/autolink.c"
      __label__ = 35; break; //@line 249 "src/autolink.c"
    case 35: 
      var $119=$1; //@line 250 "src/autolink.c"
      ;
      return $119; //@line 250 "src/autolink.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sd_autolink__email["X"]=1;

function _sd_autolink__url($rewind_p, $link, $data, $max_rewind, $size, $flags) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $7;
      var $link_end;
      var $rewind;
      var $domain_len;
      $2=$rewind_p;
      $3=$link;
      $4=$data;
      $5=$max_rewind;
      $6=$size;
      $7=$flags;
      $rewind=0; //@line 261 "src/autolink.c"
      var $8=$6; //@line 263 "src/autolink.c"
      var $9=(($8)>>>0) < 4; //@line 263 "src/autolink.c"
      if ($9) { __label__ = 5; break; } else { __label__ = 3; break; } //@line 263 "src/autolink.c"
    case 3: 
      var $11=$4; //@line 263 "src/autolink.c"
      var $12=(($11+1)|0); //@line 263 "src/autolink.c"
      var $13=HEAPU8[($12)]; //@line 263 "src/autolink.c"
      var $14=(($13)&255); //@line 263 "src/autolink.c"
      var $15=(($14)|0)!=47; //@line 263 "src/autolink.c"
      if ($15) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 263 "src/autolink.c"
    case 4: 
      var $17=$4; //@line 263 "src/autolink.c"
      var $18=(($17+2)|0); //@line 263 "src/autolink.c"
      var $19=HEAPU8[($18)]; //@line 263 "src/autolink.c"
      var $20=(($19)&255); //@line 263 "src/autolink.c"
      var $21=(($20)|0)!=47; //@line 263 "src/autolink.c"
      if ($21) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 263 "src/autolink.c"
    case 5: 
      $1=0; //@line 264 "src/autolink.c"
      __label__ = 23; break; //@line 264 "src/autolink.c"
    case 6: 
      __label__ = 7; break; //@line 266 "src/autolink.c"
    case 7: 
      var $25=$rewind; //@line 266 "src/autolink.c"
      var $26=$5; //@line 266 "src/autolink.c"
      var $27=(($25)>>>0) < (($26)>>>0); //@line 266 "src/autolink.c"
      if ($27) { __label__ = 8; break; } else { var $39 = 0;__label__ = 9; break; } //@line 266 "src/autolink.c"
    case 8: 
      var $29=$rewind; //@line 266 "src/autolink.c"
      var $30=(((-$29))|0); //@line 266 "src/autolink.c"
      var $31=((($30)-(1))|0); //@line 266 "src/autolink.c"
      var $32=$4; //@line 266 "src/autolink.c"
      var $33=(($32+$31)|0); //@line 266 "src/autolink.c"
      var $34=HEAPU8[($33)]; //@line 266 "src/autolink.c"
      var $35=(($34)&255); //@line 266 "src/autolink.c"
      var $36=_isalpha($35); //@line 266 "src/autolink.c"
      var $37=(($36)|0)!=0; //@line 266 "src/autolink.c"
      var $39 = $37;__label__ = 9; break;
    case 9: 
      var $39;
      if ($39) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $41=$rewind; //@line 267 "src/autolink.c"
      var $42=((($41)+(1))|0); //@line 267 "src/autolink.c"
      $rewind=$42; //@line 267 "src/autolink.c"
      __label__ = 7; break; //@line 267 "src/autolink.c"
    case 11: 
      var $44=$4; //@line 269 "src/autolink.c"
      var $45=$rewind; //@line 269 "src/autolink.c"
      var $46=(((-$45))|0); //@line 269 "src/autolink.c"
      var $47=(($44+$46)|0); //@line 269 "src/autolink.c"
      var $48=$6; //@line 269 "src/autolink.c"
      var $49=$rewind; //@line 269 "src/autolink.c"
      var $50=((($48)+($49))|0); //@line 269 "src/autolink.c"
      var $51=_sd_autolink_issafe($47, $50); //@line 269 "src/autolink.c"
      var $52=(($51)|0)!=0; //@line 269 "src/autolink.c"
      if ($52) { __label__ = 13; break; } else { __label__ = 12; break; } //@line 269 "src/autolink.c"
    case 12: 
      $1=0; //@line 270 "src/autolink.c"
      __label__ = 23; break; //@line 270 "src/autolink.c"
    case 13: 
      $link_end=3; //@line 272 "src/autolink.c"
      var $55=$4; //@line 274 "src/autolink.c"
      var $56=$link_end; //@line 274 "src/autolink.c"
      var $57=(($55+$56)|0); //@line 274 "src/autolink.c"
      var $58=$6; //@line 274 "src/autolink.c"
      var $59=$link_end; //@line 274 "src/autolink.c"
      var $60=((($58)-($59))|0); //@line 274 "src/autolink.c"
      var $61=$7; //@line 274 "src/autolink.c"
      var $62=$61 & 1; //@line 274 "src/autolink.c"
      var $63=_check_domain($57, $60, $62); //@line 274 "src/autolink.c"
      $domain_len=$63; //@line 274 "src/autolink.c"
      var $64=$domain_len; //@line 279 "src/autolink.c"
      var $65=(($64)|0)==0; //@line 279 "src/autolink.c"
      if ($65) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 279 "src/autolink.c"
    case 14: 
      $1=0; //@line 280 "src/autolink.c"
      __label__ = 23; break; //@line 280 "src/autolink.c"
    case 15: 
      var $68=$domain_len; //@line 282 "src/autolink.c"
      var $69=$link_end; //@line 282 "src/autolink.c"
      var $70=((($69)+($68))|0); //@line 282 "src/autolink.c"
      $link_end=$70; //@line 282 "src/autolink.c"
      __label__ = 16; break; //@line 283 "src/autolink.c"
    case 16: 
      var $72=$link_end; //@line 283 "src/autolink.c"
      var $73=$6; //@line 283 "src/autolink.c"
      var $74=(($72)>>>0) < (($73)>>>0); //@line 283 "src/autolink.c"
      if ($74) { __label__ = 17; break; } else { var $85 = 0;__label__ = 18; break; } //@line 283 "src/autolink.c"
    case 17: 
      var $76=$link_end; //@line 283 "src/autolink.c"
      var $77=$4; //@line 283 "src/autolink.c"
      var $78=(($77+$76)|0); //@line 283 "src/autolink.c"
      var $79=HEAPU8[($78)]; //@line 283 "src/autolink.c"
      var $80=(($79)&255); //@line 283 "src/autolink.c"
      var $81=_isspace($80); //@line 283 "src/autolink.c"
      var $82=(($81)|0)!=0; //@line 283 "src/autolink.c"
      var $83=$82 ^ 1; //@line 283 "src/autolink.c"
      var $85 = $83;__label__ = 18; break;
    case 18: 
      var $85;
      if ($85) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      var $87=$link_end; //@line 284 "src/autolink.c"
      var $88=((($87)+(1))|0); //@line 284 "src/autolink.c"
      $link_end=$88; //@line 284 "src/autolink.c"
      __label__ = 16; break; //@line 284 "src/autolink.c"
    case 20: 
      var $90=$4; //@line 286 "src/autolink.c"
      var $91=$link_end; //@line 286 "src/autolink.c"
      var $92=$5; //@line 286 "src/autolink.c"
      var $93=$6; //@line 286 "src/autolink.c"
      var $94=_autolink_delim($90, $91, $92, $93); //@line 286 "src/autolink.c"
      $link_end=$94; //@line 286 "src/autolink.c"
      var $95=$link_end; //@line 288 "src/autolink.c"
      var $96=(($95)|0)==0; //@line 288 "src/autolink.c"
      if ($96) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 288 "src/autolink.c"
    case 21: 
      $1=0; //@line 289 "src/autolink.c"
      __label__ = 23; break; //@line 289 "src/autolink.c"
    case 22: 
      var $99=$3; //@line 291 "src/autolink.c"
      var $100=$4; //@line 291 "src/autolink.c"
      var $101=$rewind; //@line 291 "src/autolink.c"
      var $102=(((-$101))|0); //@line 291 "src/autolink.c"
      var $103=(($100+$102)|0); //@line 291 "src/autolink.c"
      var $104=$link_end; //@line 291 "src/autolink.c"
      var $105=$rewind; //@line 291 "src/autolink.c"
      var $106=((($104)+($105))|0); //@line 291 "src/autolink.c"
      _bufput($99, $103, $106); //@line 291 "src/autolink.c"
      var $107=$rewind; //@line 292 "src/autolink.c"
      var $108=$2; //@line 292 "src/autolink.c"
      HEAP32[(($108)>>2)]=$107; //@line 292 "src/autolink.c"
      var $109=$link_end; //@line 294 "src/autolink.c"
      $1=$109; //@line 294 "src/autolink.c"
      __label__ = 23; break; //@line 294 "src/autolink.c"
    case 23: 
      var $111=$1; //@line 295 "src/autolink.c"
      ;
      return $111; //@line 295 "src/autolink.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sd_autolink__url["X"]=1;

function _sdhtml_is_tag($tag_data, $tag_size, $tagname) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $closed;
      $2=$tag_data;
      $3=$tag_size;
      $4=$tagname;
      $closed=0; //@line 34 "html/html.c"
      var $5=$3; //@line 36 "html/html.c"
      var $6=(($5)>>>0) < 3; //@line 36 "html/html.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 36 "html/html.c"
    case 3: 
      var $8=$2; //@line 36 "html/html.c"
      var $9=(($8)|0); //@line 36 "html/html.c"
      var $10=HEAPU8[($9)]; //@line 36 "html/html.c"
      var $11=(($10)&255); //@line 36 "html/html.c"
      var $12=(($11)|0)!=60; //@line 36 "html/html.c"
      if ($12) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 36 "html/html.c"
    case 4: 
      $1=0; //@line 37 "html/html.c"
      __label__ = 21; break; //@line 37 "html/html.c"
    case 5: 
      $i=1; //@line 39 "html/html.c"
      var $15=$i; //@line 41 "html/html.c"
      var $16=$2; //@line 41 "html/html.c"
      var $17=(($16+$15)|0); //@line 41 "html/html.c"
      var $18=HEAPU8[($17)]; //@line 41 "html/html.c"
      var $19=(($18)&255); //@line 41 "html/html.c"
      var $20=(($19)|0)==47; //@line 41 "html/html.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 41 "html/html.c"
    case 6: 
      $closed=1; //@line 42 "html/html.c"
      var $22=$i; //@line 43 "html/html.c"
      var $23=((($22)+(1))|0); //@line 43 "html/html.c"
      $i=$23; //@line 43 "html/html.c"
      __label__ = 7; break; //@line 44 "html/html.c"
    case 7: 
      __label__ = 8; break; //@line 46 "html/html.c"
    case 8: 
      var $26=$i; //@line 46 "html/html.c"
      var $27=$3; //@line 46 "html/html.c"
      var $28=(($26)>>>0) < (($27)>>>0); //@line 46 "html/html.c"
      if ($28) { __label__ = 9; break; } else { __label__ = 15; break; } //@line 46 "html/html.c"
    case 9: 
      var $30=$4; //@line 47 "html/html.c"
      var $31=HEAP8[($30)]; //@line 47 "html/html.c"
      var $32=(($31 << 24) >> 24); //@line 47 "html/html.c"
      var $33=(($32)|0)==0; //@line 47 "html/html.c"
      if ($33) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 47 "html/html.c"
    case 10: 
      __label__ = 15; break; //@line 48 "html/html.c"
    case 11: 
      var $36=$i; //@line 50 "html/html.c"
      var $37=$2; //@line 50 "html/html.c"
      var $38=(($37+$36)|0); //@line 50 "html/html.c"
      var $39=HEAPU8[($38)]; //@line 50 "html/html.c"
      var $40=(($39)&255); //@line 50 "html/html.c"
      var $41=$4; //@line 50 "html/html.c"
      var $42=HEAP8[($41)]; //@line 50 "html/html.c"
      var $43=(($42 << 24) >> 24); //@line 50 "html/html.c"
      var $44=(($40)|0)!=(($43)|0); //@line 50 "html/html.c"
      if ($44) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 50 "html/html.c"
    case 12: 
      $1=0; //@line 51 "html/html.c"
      __label__ = 21; break; //@line 51 "html/html.c"
    case 13: 
      __label__ = 14; break; //@line 52 "html/html.c"
    case 14: 
      var $48=$i; //@line 46 "html/html.c"
      var $49=((($48)+(1))|0); //@line 46 "html/html.c"
      $i=$49; //@line 46 "html/html.c"
      var $50=$4; //@line 46 "html/html.c"
      var $51=(($50+1)|0); //@line 46 "html/html.c"
      $4=$51; //@line 46 "html/html.c"
      __label__ = 8; break; //@line 46 "html/html.c"
    case 15: 
      var $53=$i; //@line 54 "html/html.c"
      var $54=$3; //@line 54 "html/html.c"
      var $55=(($53)|0)==(($54)|0); //@line 54 "html/html.c"
      if ($55) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 54 "html/html.c"
    case 16: 
      $1=0; //@line 55 "html/html.c"
      __label__ = 21; break; //@line 55 "html/html.c"
    case 17: 
      var $58=$i; //@line 57 "html/html.c"
      var $59=$2; //@line 57 "html/html.c"
      var $60=(($59+$58)|0); //@line 57 "html/html.c"
      var $61=HEAPU8[($60)]; //@line 57 "html/html.c"
      var $62=(($61)&255); //@line 57 "html/html.c"
      var $63=_isspace($62); //@line 57 "html/html.c"
      var $64=(($63)|0)!=0; //@line 57 "html/html.c"
      if ($64) { __label__ = 19; break; } else { __label__ = 18; break; } //@line 57 "html/html.c"
    case 18: 
      var $66=$i; //@line 57 "html/html.c"
      var $67=$2; //@line 57 "html/html.c"
      var $68=(($67+$66)|0); //@line 57 "html/html.c"
      var $69=HEAPU8[($68)]; //@line 57 "html/html.c"
      var $70=(($69)&255); //@line 57 "html/html.c"
      var $71=(($70)|0)==62; //@line 57 "html/html.c"
      if ($71) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 57 "html/html.c"
    case 19: 
      var $73=$closed; //@line 58 "html/html.c"
      var $74=(($73)|0)!=0; //@line 58 "html/html.c"
      var $75=$74 ? 2 : 1; //@line 58 "html/html.c"
      $1=$75; //@line 58 "html/html.c"
      __label__ = 21; break; //@line 58 "html/html.c"
    case 20: 
      $1=0; //@line 60 "html/html.c"
      __label__ = 21; break; //@line 60 "html/html.c"
    case 21: 
      var $78=$1; //@line 61 "html/html.c"
      ;
      return $78; //@line 61 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sdhtml_is_tag["X"]=1;

function _sdhtml_toc_renderer($callbacks, $options) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$callbacks;
  $2=$options;
  var $3=$2; //@line 577 "html/html.c"
  var $4=$3; //@line 577 "html/html.c"
  HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; HEAP32[((($4)+(8))>>2)]=0; HEAP32[((($4)+(12))>>2)]=0; HEAP32[((($4)+(16))>>2)]=0; //@line 577 "html/html.c"
  var $5=$2; //@line 578 "html/html.c"
  var $6=(($5+12)|0); //@line 578 "html/html.c"
  HEAP32[(($6)>>2)]=64; //@line 578 "html/html.c"
  var $7=$1; //@line 580 "html/html.c"
  var $8=$7; //@line 580 "html/html.c"
  assert(104 % 1 === 0, 'memcpy given ' + 104 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');for (var $$src = _sdhtml_toc_renderer_cb_default>>2, $$dest = $8>>2, $$stop = $$src + 26; $$src < $$stop; $$src++, $$dest++) {
    HEAP32[$$dest] = HEAP32[$$src]
  }; //@line 580 "html/html.c"
  ;
  return; //@line 581 "html/html.c"
}


function _toc_header($ob, $text, $level, $opaque) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $options;
      $1=$ob;
      $2=$text;
      $3=$level;
      $4=$opaque;
      var $5=$4; //@line 492 "html/html.c"
      var $6=$5; //@line 492 "html/html.c"
      $options=$6; //@line 492 "html/html.c"
      var $7=$options; //@line 496 "html/html.c"
      var $8=(($7)|0); //@line 496 "html/html.c"
      var $9=(($8+4)|0); //@line 496 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 496 "html/html.c"
      var $11=(($10)|0)==0; //@line 496 "html/html.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 496 "html/html.c"
    case 3: 
      var $13=$3; //@line 497 "html/html.c"
      var $14=((($13)-(1))|0); //@line 497 "html/html.c"
      var $15=$options; //@line 497 "html/html.c"
      var $16=(($15)|0); //@line 497 "html/html.c"
      var $17=(($16+8)|0); //@line 497 "html/html.c"
      HEAP32[(($17)>>2)]=$14; //@line 497 "html/html.c"
      __label__ = 4; break; //@line 498 "html/html.c"
    case 4: 
      var $19=$options; //@line 499 "html/html.c"
      var $20=(($19)|0); //@line 499 "html/html.c"
      var $21=(($20+8)|0); //@line 499 "html/html.c"
      var $22=HEAP32[(($21)>>2)]; //@line 499 "html/html.c"
      var $23=$3; //@line 499 "html/html.c"
      var $24=((($23)-($22))|0); //@line 499 "html/html.c"
      $3=$24; //@line 499 "html/html.c"
      var $25=$3; //@line 501 "html/html.c"
      var $26=$options; //@line 501 "html/html.c"
      var $27=(($26)|0); //@line 501 "html/html.c"
      var $28=(($27+4)|0); //@line 501 "html/html.c"
      var $29=HEAP32[(($28)>>2)]; //@line 501 "html/html.c"
      var $30=(($25)|0) > (($29)|0); //@line 501 "html/html.c"
      if ($30) { __label__ = 5; break; } else { __label__ = 9; break; } //@line 501 "html/html.c"
    case 5: 
      __label__ = 6; break; //@line 502 "html/html.c"
    case 6: 
      var $33=$3; //@line 502 "html/html.c"
      var $34=$options; //@line 502 "html/html.c"
      var $35=(($34)|0); //@line 502 "html/html.c"
      var $36=(($35+4)|0); //@line 502 "html/html.c"
      var $37=HEAP32[(($36)>>2)]; //@line 502 "html/html.c"
      var $38=(($33)|0) > (($37)|0); //@line 502 "html/html.c"
      if ($38) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 502 "html/html.c"
    case 7: 
      var $40=$1; //@line 503 "html/html.c"
      _bufput($40, ((STRING_TABLE.__str5790)|0), 10); //@line 503 "html/html.c"
      var $41=$options; //@line 504 "html/html.c"
      var $42=(($41)|0); //@line 504 "html/html.c"
      var $43=(($42+4)|0); //@line 504 "html/html.c"
      var $44=HEAP32[(($43)>>2)]; //@line 504 "html/html.c"
      var $45=((($44)+(1))|0); //@line 504 "html/html.c"
      HEAP32[(($43)>>2)]=$45; //@line 504 "html/html.c"
      __label__ = 6; break; //@line 505 "html/html.c"
    case 8: 
      __label__ = 16; break; //@line 506 "html/html.c"
    case 9: 
      var $48=$3; //@line 506 "html/html.c"
      var $49=$options; //@line 506 "html/html.c"
      var $50=(($49)|0); //@line 506 "html/html.c"
      var $51=(($50+4)|0); //@line 506 "html/html.c"
      var $52=HEAP32[(($51)>>2)]; //@line 506 "html/html.c"
      var $53=(($48)|0) < (($52)|0); //@line 506 "html/html.c"
      if ($53) { __label__ = 10; break; } else { __label__ = 14; break; } //@line 506 "html/html.c"
    case 10: 
      var $55=$1; //@line 507 "html/html.c"
      _bufput($55, ((STRING_TABLE.__str2986)|0), 6); //@line 507 "html/html.c"
      __label__ = 11; break; //@line 508 "html/html.c"
    case 11: 
      var $57=$3; //@line 508 "html/html.c"
      var $58=$options; //@line 508 "html/html.c"
      var $59=(($58)|0); //@line 508 "html/html.c"
      var $60=(($59+4)|0); //@line 508 "html/html.c"
      var $61=HEAP32[(($60)>>2)]; //@line 508 "html/html.c"
      var $62=(($57)|0) < (($61)|0); //@line 508 "html/html.c"
      if ($62) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 508 "html/html.c"
    case 12: 
      var $64=$1; //@line 509 "html/html.c"
      _bufput($64, ((STRING_TABLE.__str58)|0), 12); //@line 509 "html/html.c"
      var $65=$options; //@line 510 "html/html.c"
      var $66=(($65)|0); //@line 510 "html/html.c"
      var $67=(($66+4)|0); //@line 510 "html/html.c"
      var $68=HEAP32[(($67)>>2)]; //@line 510 "html/html.c"
      var $69=((($68)-(1))|0); //@line 510 "html/html.c"
      HEAP32[(($67)>>2)]=$69; //@line 510 "html/html.c"
      __label__ = 11; break; //@line 511 "html/html.c"
    case 13: 
      var $71=$1; //@line 512 "html/html.c"
      _bufput($71, ((STRING_TABLE.__str59)|0), 5); //@line 512 "html/html.c"
      __label__ = 15; break; //@line 513 "html/html.c"
    case 14: 
      var $73=$1; //@line 514 "html/html.c"
      _bufput($73, ((STRING_TABLE.__str60)|0), 11); //@line 514 "html/html.c"
      __label__ = 15; break;
    case 15: 
      __label__ = 16; break;
    case 16: 
      var $76=$1; //@line 517 "html/html.c"
      var $77=$options; //@line 517 "html/html.c"
      var $78=(($77)|0); //@line 517 "html/html.c"
      var $79=(($78)|0); //@line 517 "html/html.c"
      var $80=HEAP32[(($79)>>2)]; //@line 517 "html/html.c"
      var $81=((($80)+(1))|0); //@line 517 "html/html.c"
      HEAP32[(($79)>>2)]=$81; //@line 517 "html/html.c"
      _bufprintf($76, ((STRING_TABLE.__str61)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$80,tempInt)); //@line 517 "html/html.c"
      var $82=$2; //@line 518 "html/html.c"
      var $83=(($82)|0)!=0; //@line 518 "html/html.c"
      if ($83) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 518 "html/html.c"
    case 17: 
      var $85=$1; //@line 519 "html/html.c"
      var $86=$2; //@line 519 "html/html.c"
      var $87=(($86)|0); //@line 519 "html/html.c"
      var $88=HEAP32[(($87)>>2)]; //@line 519 "html/html.c"
      var $89=$2; //@line 519 "html/html.c"
      var $90=(($89+4)|0); //@line 519 "html/html.c"
      var $91=HEAP32[(($90)>>2)]; //@line 519 "html/html.c"
      _escape_html($85, $88, $91); //@line 519 "html/html.c"
      __label__ = 18; break; //@line 519 "html/html.c"
    case 18: 
      var $93=$1; //@line 520 "html/html.c"
      _bufput($93, ((STRING_TABLE.__str62)|0), 5); //@line 520 "html/html.c"
      STACKTOP = __stackBase__;
      return; //@line 521 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_toc_header["X"]=1;

function _rndr_codespan($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$ob;
      $2=$text;
      $3=$opaque;
      var $4=$1; //@line 166 "html/html.c"
      _bufput($4, ((STRING_TABLE.__str55)|0), 6); //@line 166 "html/html.c"
      var $5=$2; //@line 167 "html/html.c"
      var $6=(($5)|0)!=0; //@line 167 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 167 "html/html.c"
    case 3: 
      var $8=$1; //@line 167 "html/html.c"
      var $9=$2; //@line 167 "html/html.c"
      var $10=(($9)|0); //@line 167 "html/html.c"
      var $11=HEAP32[(($10)>>2)]; //@line 167 "html/html.c"
      var $12=$2; //@line 167 "html/html.c"
      var $13=(($12+4)|0); //@line 167 "html/html.c"
      var $14=HEAP32[(($13)>>2)]; //@line 167 "html/html.c"
      _escape_html($8, $11, $14); //@line 167 "html/html.c"
      __label__ = 4; break; //@line 167 "html/html.c"
    case 4: 
      var $16=$1; //@line 168 "html/html.c"
      _bufput($16, ((STRING_TABLE.__str56)|0), 7); //@line 168 "html/html.c"
      ;
      return 1; //@line 169 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_double_emphasis($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $2=$ob;
      $3=$text;
      $4=$opaque;
      var $5=$3; //@line 187 "html/html.c"
      var $6=(($5)|0)!=0; //@line 187 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 187 "html/html.c"
    case 3: 
      var $8=$3; //@line 187 "html/html.c"
      var $9=(($8+4)|0); //@line 187 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 187 "html/html.c"
      var $11=(($10)|0)!=0; //@line 187 "html/html.c"
      if ($11) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 187 "html/html.c"
    case 4: 
      $1=0; //@line 188 "html/html.c"
      __label__ = 6; break; //@line 188 "html/html.c"
    case 5: 
      var $14=$2; //@line 190 "html/html.c"
      _bufput($14, ((STRING_TABLE.__str53)|0), 8); //@line 190 "html/html.c"
      var $15=$2; //@line 191 "html/html.c"
      var $16=$3; //@line 191 "html/html.c"
      var $17=(($16)|0); //@line 191 "html/html.c"
      var $18=HEAP32[(($17)>>2)]; //@line 191 "html/html.c"
      var $19=$3; //@line 191 "html/html.c"
      var $20=(($19+4)|0); //@line 191 "html/html.c"
      var $21=HEAP32[(($20)>>2)]; //@line 191 "html/html.c"
      _bufput($15, $18, $21); //@line 191 "html/html.c"
      var $22=$2; //@line 192 "html/html.c"
      _bufput($22, ((STRING_TABLE.__str54)|0), 9); //@line 192 "html/html.c"
      $1=1; //@line 194 "html/html.c"
      __label__ = 6; break; //@line 194 "html/html.c"
    case 6: 
      var $24=$1; //@line 195 "html/html.c"
      ;
      return $24; //@line 195 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_emphasis($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $2=$ob;
      $3=$text;
      $4=$opaque;
      var $5=$3; //@line 200 "html/html.c"
      var $6=(($5)|0)!=0; //@line 200 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 200 "html/html.c"
    case 3: 
      var $8=$3; //@line 200 "html/html.c"
      var $9=(($8+4)|0); //@line 200 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 200 "html/html.c"
      var $11=(($10)|0)!=0; //@line 200 "html/html.c"
      if ($11) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 200 "html/html.c"
    case 4: 
      $1=0; //@line 200 "html/html.c"
      __label__ = 8; break; //@line 200 "html/html.c"
    case 5: 
      var $14=$2; //@line 201 "html/html.c"
      _bufput($14, ((STRING_TABLE.__str51)|0), 4); //@line 201 "html/html.c"
      var $15=$3; //@line 202 "html/html.c"
      var $16=(($15)|0)!=0; //@line 202 "html/html.c"
      if ($16) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 202 "html/html.c"
    case 6: 
      var $18=$2; //@line 202 "html/html.c"
      var $19=$3; //@line 202 "html/html.c"
      var $20=(($19)|0); //@line 202 "html/html.c"
      var $21=HEAP32[(($20)>>2)]; //@line 202 "html/html.c"
      var $22=$3; //@line 202 "html/html.c"
      var $23=(($22+4)|0); //@line 202 "html/html.c"
      var $24=HEAP32[(($23)>>2)]; //@line 202 "html/html.c"
      _bufput($18, $21, $24); //@line 202 "html/html.c"
      __label__ = 7; break; //@line 202 "html/html.c"
    case 7: 
      var $26=$2; //@line 203 "html/html.c"
      _bufput($26, ((STRING_TABLE.__str52)|0), 5); //@line 203 "html/html.c"
      $1=1; //@line 204 "html/html.c"
      __label__ = 8; break; //@line 204 "html/html.c"
    case 8: 
      var $28=$1; //@line 205 "html/html.c"
      ;
      return $28; //@line 205 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _toc_link($ob, $link, $title, $content, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      $1=$ob;
      $2=$link;
      $3=$title;
      $4=$content;
      $5=$opaque;
      var $6=$4; //@line 526 "html/html.c"
      var $7=(($6)|0)!=0; //@line 526 "html/html.c"
      if ($7) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 526 "html/html.c"
    case 3: 
      var $9=$4; //@line 526 "html/html.c"
      var $10=(($9+4)|0); //@line 526 "html/html.c"
      var $11=HEAP32[(($10)>>2)]; //@line 526 "html/html.c"
      var $12=(($11)|0)!=0; //@line 526 "html/html.c"
      if ($12) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 526 "html/html.c"
    case 4: 
      var $14=$1; //@line 527 "html/html.c"
      var $15=$4; //@line 527 "html/html.c"
      var $16=(($15)|0); //@line 527 "html/html.c"
      var $17=HEAP32[(($16)>>2)]; //@line 527 "html/html.c"
      var $18=$4; //@line 527 "html/html.c"
      var $19=(($18+4)|0); //@line 527 "html/html.c"
      var $20=HEAP32[(($19)>>2)]; //@line 527 "html/html.c"
      _bufput($14, $17, $20); //@line 527 "html/html.c"
      __label__ = 5; break; //@line 527 "html/html.c"
    case 5: 
      ;
      return 1; //@line 528 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_triple_emphasis($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $2=$ob;
      $3=$text;
      $4=$opaque;
      var $5=$3; //@line 347 "html/html.c"
      var $6=(($5)|0)!=0; //@line 347 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 347 "html/html.c"
    case 3: 
      var $8=$3; //@line 347 "html/html.c"
      var $9=(($8+4)|0); //@line 347 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 347 "html/html.c"
      var $11=(($10)|0)!=0; //@line 347 "html/html.c"
      if ($11) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 347 "html/html.c"
    case 4: 
      $1=0; //@line 347 "html/html.c"
      __label__ = 6; break; //@line 347 "html/html.c"
    case 5: 
      var $14=$2; //@line 348 "html/html.c"
      _bufput($14, ((STRING_TABLE.__str49)|0), 12); //@line 348 "html/html.c"
      var $15=$2; //@line 349 "html/html.c"
      var $16=$3; //@line 349 "html/html.c"
      var $17=(($16)|0); //@line 349 "html/html.c"
      var $18=HEAP32[(($17)>>2)]; //@line 349 "html/html.c"
      var $19=$3; //@line 349 "html/html.c"
      var $20=(($19+4)|0); //@line 349 "html/html.c"
      var $21=HEAP32[(($20)>>2)]; //@line 349 "html/html.c"
      _bufput($15, $18, $21); //@line 349 "html/html.c"
      var $22=$2; //@line 350 "html/html.c"
      _bufput($22, ((STRING_TABLE.__str50)|0), 14); //@line 350 "html/html.c"
      $1=1; //@line 351 "html/html.c"
      __label__ = 6; break; //@line 351 "html/html.c"
    case 6: 
      var $24=$1; //@line 352 "html/html.c"
      ;
      return $24; //@line 352 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_strikethrough($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $2=$ob;
      $3=$text;
      $4=$opaque;
      var $5=$3; //@line 175 "html/html.c"
      var $6=(($5)|0)!=0; //@line 175 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 175 "html/html.c"
    case 3: 
      var $8=$3; //@line 175 "html/html.c"
      var $9=(($8+4)|0); //@line 175 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 175 "html/html.c"
      var $11=(($10)|0)!=0; //@line 175 "html/html.c"
      if ($11) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 175 "html/html.c"
    case 4: 
      $1=0; //@line 176 "html/html.c"
      __label__ = 6; break; //@line 176 "html/html.c"
    case 5: 
      var $14=$2; //@line 178 "html/html.c"
      _bufput($14, ((STRING_TABLE.__str47)|0), 5); //@line 178 "html/html.c"
      var $15=$2; //@line 179 "html/html.c"
      var $16=$3; //@line 179 "html/html.c"
      var $17=(($16)|0); //@line 179 "html/html.c"
      var $18=HEAP32[(($17)>>2)]; //@line 179 "html/html.c"
      var $19=$3; //@line 179 "html/html.c"
      var $20=(($19+4)|0); //@line 179 "html/html.c"
      var $21=HEAP32[(($20)>>2)]; //@line 179 "html/html.c"
      _bufput($15, $18, $21); //@line 179 "html/html.c"
      var $22=$2; //@line 180 "html/html.c"
      _bufput($22, ((STRING_TABLE.__str48)|0), 6); //@line 180 "html/html.c"
      $1=1; //@line 181 "html/html.c"
      __label__ = 6; break; //@line 181 "html/html.c"
    case 6: 
      var $24=$1; //@line 182 "html/html.c"
      ;
      return $24; //@line 182 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_superscript($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $2=$ob;
      $3=$text;
      $4=$opaque;
      var $5=$3; //@line 475 "html/html.c"
      var $6=(($5)|0)!=0; //@line 475 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 475 "html/html.c"
    case 3: 
      var $8=$3; //@line 475 "html/html.c"
      var $9=(($8+4)|0); //@line 475 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 475 "html/html.c"
      var $11=(($10)|0)!=0; //@line 475 "html/html.c"
      if ($11) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 475 "html/html.c"
    case 4: 
      $1=0; //@line 475 "html/html.c"
      __label__ = 6; break; //@line 475 "html/html.c"
    case 5: 
      var $14=$2; //@line 476 "html/html.c"
      _bufput($14, ((STRING_TABLE.__str45)|0), 5); //@line 476 "html/html.c"
      var $15=$2; //@line 477 "html/html.c"
      var $16=$3; //@line 477 "html/html.c"
      var $17=(($16)|0); //@line 477 "html/html.c"
      var $18=HEAP32[(($17)>>2)]; //@line 477 "html/html.c"
      var $19=$3; //@line 477 "html/html.c"
      var $20=(($19+4)|0); //@line 477 "html/html.c"
      var $21=HEAP32[(($20)>>2)]; //@line 477 "html/html.c"
      _bufput($15, $18, $21); //@line 477 "html/html.c"
      var $22=$2; //@line 478 "html/html.c"
      _bufput($22, ((STRING_TABLE.__str46)|0), 6); //@line 478 "html/html.c"
      $1=1; //@line 479 "html/html.c"
      __label__ = 6; break; //@line 479 "html/html.c"
    case 6: 
      var $24=$1; //@line 480 "html/html.c"
      ;
      return $24; //@line 480 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _toc_finalize($ob, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $options;
      $1=$ob;
      $2=$opaque;
      var $3=$2; //@line 534 "html/html.c"
      var $4=$3; //@line 534 "html/html.c"
      $options=$4; //@line 534 "html/html.c"
      __label__ = 3; break; //@line 536 "html/html.c"
    case 3: 
      var $6=$options; //@line 536 "html/html.c"
      var $7=(($6)|0); //@line 536 "html/html.c"
      var $8=(($7+4)|0); //@line 536 "html/html.c"
      var $9=HEAP32[(($8)>>2)]; //@line 536 "html/html.c"
      var $10=(($9)|0) > 0; //@line 536 "html/html.c"
      if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 536 "html/html.c"
    case 4: 
      var $12=$1; //@line 537 "html/html.c"
      _bufput($12, ((STRING_TABLE.__str44)|0), 12); //@line 537 "html/html.c"
      var $13=$options; //@line 538 "html/html.c"
      var $14=(($13)|0); //@line 538 "html/html.c"
      var $15=(($14+4)|0); //@line 538 "html/html.c"
      var $16=HEAP32[(($15)>>2)]; //@line 538 "html/html.c"
      var $17=((($16)-(1))|0); //@line 538 "html/html.c"
      HEAP32[(($15)>>2)]=$17; //@line 538 "html/html.c"
      __label__ = 3; break; //@line 539 "html/html.c"
    case 5: 
      ;
      return; //@line 540 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _sdhtml_renderer($callbacks, $options, $render_flags) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$callbacks;
      $2=$options;
      $3=$render_flags;
      var $4=$2; //@line 619 "html/html.c"
      var $5=$4; //@line 619 "html/html.c"
      HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0; HEAP32[((($5)+(12))>>2)]=0; HEAP32[((($5)+(16))>>2)]=0; //@line 619 "html/html.c"
      var $6=$3; //@line 620 "html/html.c"
      var $7=$2; //@line 620 "html/html.c"
      var $8=(($7+12)|0); //@line 620 "html/html.c"
      HEAP32[(($8)>>2)]=$6; //@line 620 "html/html.c"
      var $9=$1; //@line 623 "html/html.c"
      var $10=$9; //@line 623 "html/html.c"
      assert(104 % 1 === 0, 'memcpy given ' + 104 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');for (var $$src = _sdhtml_renderer_cb_default>>2, $$dest = $10>>2, $$stop = $$src + 26; $$src < $$stop; $$src++, $$dest++) {
        HEAP32[$$dest] = HEAP32[$$src]
      }; //@line 623 "html/html.c"
      var $11=$3; //@line 625 "html/html.c"
      var $12=$11 & 4; //@line 625 "html/html.c"
      var $13=(($12)|0)!=0; //@line 625 "html/html.c"
      if ($13) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 625 "html/html.c"
    case 3: 
      var $15=$1; //@line 626 "html/html.c"
      var $16=(($15+60)|0); //@line 626 "html/html.c"
      HEAP32[(($16)>>2)]=0; //@line 626 "html/html.c"
      __label__ = 4; break; //@line 626 "html/html.c"
    case 4: 
      var $18=$3; //@line 628 "html/html.c"
      var $19=$18 & 8; //@line 628 "html/html.c"
      var $20=(($19)|0)!=0; //@line 628 "html/html.c"
      if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 628 "html/html.c"
    case 5: 
      var $22=$1; //@line 629 "html/html.c"
      var $23=(($22+68)|0); //@line 629 "html/html.c"
      HEAP32[(($23)>>2)]=0; //@line 629 "html/html.c"
      var $24=$1; //@line 630 "html/html.c"
      var $25=(($24+44)|0); //@line 630 "html/html.c"
      HEAP32[(($25)>>2)]=0; //@line 630 "html/html.c"
      __label__ = 6; break; //@line 631 "html/html.c"
    case 6: 
      var $27=$3; //@line 633 "html/html.c"
      var $28=$27 & 1; //@line 633 "html/html.c"
      var $29=(($28)|0)!=0; //@line 633 "html/html.c"
      if ($29) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 633 "html/html.c"
    case 7: 
      var $31=$3; //@line 633 "html/html.c"
      var $32=$31 & 512; //@line 633 "html/html.c"
      var $33=(($32)|0)!=0; //@line 633 "html/html.c"
      if ($33) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 633 "html/html.c"
    case 8: 
      var $35=$1; //@line 634 "html/html.c"
      var $36=(($35+8)|0); //@line 634 "html/html.c"
      HEAP32[(($36)>>2)]=0; //@line 634 "html/html.c"
      __label__ = 9; break; //@line 634 "html/html.c"
    case 9: 
      ;
      return; //@line 635 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_blockcode($ob, $text, $lang, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $cls;
      var $org;
      $1=$ob;
      $2=$text;
      $3=$lang;
      $4=$opaque;
      var $5=$1; //@line 121 "html/html.c"
      var $6=(($5+4)|0); //@line 121 "html/html.c"
      var $7=HEAP32[(($6)>>2)]; //@line 121 "html/html.c"
      var $8=(($7)|0)!=0; //@line 121 "html/html.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 121 "html/html.c"
    case 3: 
      var $10=$1; //@line 121 "html/html.c"
      _bufputc($10, 10); //@line 121 "html/html.c"
      __label__ = 4; break; //@line 121 "html/html.c"
    case 4: 
      var $12=$3; //@line 123 "html/html.c"
      var $13=(($12)|0)!=0; //@line 123 "html/html.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 27; break; } //@line 123 "html/html.c"
    case 5: 
      var $15=$3; //@line 123 "html/html.c"
      var $16=(($15+4)|0); //@line 123 "html/html.c"
      var $17=HEAP32[(($16)>>2)]; //@line 123 "html/html.c"
      var $18=(($17)|0)!=0; //@line 123 "html/html.c"
      if ($18) { __label__ = 6; break; } else { __label__ = 27; break; } //@line 123 "html/html.c"
    case 6: 
      var $20=$1; //@line 125 "html/html.c"
      _bufput($20, ((STRING_TABLE.__str41)|0), 18); //@line 125 "html/html.c"
      $i=0; //@line 127 "html/html.c"
      $cls=0; //@line 127 "html/html.c"
      __label__ = 7; break; //@line 127 "html/html.c"
    case 7: 
      var $22=$i; //@line 127 "html/html.c"
      var $23=$3; //@line 127 "html/html.c"
      var $24=(($23+4)|0); //@line 127 "html/html.c"
      var $25=HEAPU32[(($24)>>2)]; //@line 127 "html/html.c"
      var $26=(($22)>>>0) < (($25)>>>0); //@line 127 "html/html.c"
      if ($26) { __label__ = 8; break; } else { __label__ = 26; break; } //@line 127 "html/html.c"
    case 8: 
      __label__ = 9; break; //@line 128 "html/html.c"
    case 9: 
      var $29=$i; //@line 128 "html/html.c"
      var $30=$3; //@line 128 "html/html.c"
      var $31=(($30+4)|0); //@line 128 "html/html.c"
      var $32=HEAPU32[(($31)>>2)]; //@line 128 "html/html.c"
      var $33=(($29)>>>0) < (($32)>>>0); //@line 128 "html/html.c"
      if ($33) { __label__ = 10; break; } else { var $45 = 0;__label__ = 11; break; } //@line 128 "html/html.c"
    case 10: 
      var $35=$i; //@line 128 "html/html.c"
      var $36=$3; //@line 128 "html/html.c"
      var $37=(($36)|0); //@line 128 "html/html.c"
      var $38=HEAP32[(($37)>>2)]; //@line 128 "html/html.c"
      var $39=(($38+$35)|0); //@line 128 "html/html.c"
      var $40=HEAPU8[($39)]; //@line 128 "html/html.c"
      var $41=(($40)&255); //@line 128 "html/html.c"
      var $42=_isspace($41); //@line 128 "html/html.c"
      var $43=(($42)|0)!=0; //@line 128 "html/html.c"
      var $45 = $43;__label__ = 11; break;
    case 11: 
      var $45;
      if ($45) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $47=$i; //@line 129 "html/html.c"
      var $48=((($47)+(1))|0); //@line 129 "html/html.c"
      $i=$48; //@line 129 "html/html.c"
      __label__ = 9; break; //@line 129 "html/html.c"
    case 13: 
      var $50=$i; //@line 131 "html/html.c"
      var $51=$3; //@line 131 "html/html.c"
      var $52=(($51+4)|0); //@line 131 "html/html.c"
      var $53=HEAPU32[(($52)>>2)]; //@line 131 "html/html.c"
      var $54=(($50)>>>0) < (($53)>>>0); //@line 131 "html/html.c"
      if ($54) { __label__ = 14; break; } else { __label__ = 24; break; } //@line 131 "html/html.c"
    case 14: 
      var $56=$i; //@line 132 "html/html.c"
      $org=$56; //@line 132 "html/html.c"
      __label__ = 15; break; //@line 133 "html/html.c"
    case 15: 
      var $58=$i; //@line 133 "html/html.c"
      var $59=$3; //@line 133 "html/html.c"
      var $60=(($59+4)|0); //@line 133 "html/html.c"
      var $61=HEAPU32[(($60)>>2)]; //@line 133 "html/html.c"
      var $62=(($58)>>>0) < (($61)>>>0); //@line 133 "html/html.c"
      if ($62) { __label__ = 16; break; } else { var $75 = 0;__label__ = 17; break; } //@line 133 "html/html.c"
    case 16: 
      var $64=$i; //@line 133 "html/html.c"
      var $65=$3; //@line 133 "html/html.c"
      var $66=(($65)|0); //@line 133 "html/html.c"
      var $67=HEAP32[(($66)>>2)]; //@line 133 "html/html.c"
      var $68=(($67+$64)|0); //@line 133 "html/html.c"
      var $69=HEAPU8[($68)]; //@line 133 "html/html.c"
      var $70=(($69)&255); //@line 133 "html/html.c"
      var $71=_isspace($70); //@line 133 "html/html.c"
      var $72=(($71)|0)!=0; //@line 133 "html/html.c"
      var $73=$72 ^ 1; //@line 133 "html/html.c"
      var $75 = $73;__label__ = 17; break;
    case 17: 
      var $75;
      if ($75) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $77=$i; //@line 134 "html/html.c"
      var $78=((($77)+(1))|0); //@line 134 "html/html.c"
      $i=$78; //@line 134 "html/html.c"
      __label__ = 15; break; //@line 134 "html/html.c"
    case 19: 
      var $80=$org; //@line 136 "html/html.c"
      var $81=$3; //@line 136 "html/html.c"
      var $82=(($81)|0); //@line 136 "html/html.c"
      var $83=HEAP32[(($82)>>2)]; //@line 136 "html/html.c"
      var $84=(($83+$80)|0); //@line 136 "html/html.c"
      var $85=HEAPU8[($84)]; //@line 136 "html/html.c"
      var $86=(($85)&255); //@line 136 "html/html.c"
      var $87=(($86)|0)==46; //@line 136 "html/html.c"
      if ($87) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 136 "html/html.c"
    case 20: 
      var $89=$org; //@line 137 "html/html.c"
      var $90=((($89)+(1))|0); //@line 137 "html/html.c"
      $org=$90; //@line 137 "html/html.c"
      __label__ = 21; break; //@line 137 "html/html.c"
    case 21: 
      var $92=$cls; //@line 139 "html/html.c"
      var $93=(($92)|0)!=0; //@line 139 "html/html.c"
      if ($93) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 139 "html/html.c"
    case 22: 
      var $95=$1; //@line 139 "html/html.c"
      _bufputc($95, 32); //@line 139 "html/html.c"
      __label__ = 23; break; //@line 139 "html/html.c"
    case 23: 
      var $97=$1; //@line 140 "html/html.c"
      var $98=$3; //@line 140 "html/html.c"
      var $99=(($98)|0); //@line 140 "html/html.c"
      var $100=HEAP32[(($99)>>2)]; //@line 140 "html/html.c"
      var $101=$org; //@line 140 "html/html.c"
      var $102=(($100+$101)|0); //@line 140 "html/html.c"
      var $103=$i; //@line 140 "html/html.c"
      var $104=$org; //@line 140 "html/html.c"
      var $105=((($103)-($104))|0); //@line 140 "html/html.c"
      _escape_html($97, $102, $105); //@line 140 "html/html.c"
      __label__ = 24; break; //@line 141 "html/html.c"
    case 24: 
      __label__ = 25; break; //@line 142 "html/html.c"
    case 25: 
      var $108=$i; //@line 127 "html/html.c"
      var $109=((($108)+(1))|0); //@line 127 "html/html.c"
      $i=$109; //@line 127 "html/html.c"
      var $110=$cls; //@line 127 "html/html.c"
      var $111=((($110)+(1))|0); //@line 127 "html/html.c"
      $cls=$111; //@line 127 "html/html.c"
      __label__ = 7; break; //@line 127 "html/html.c"
    case 26: 
      var $113=$1; //@line 144 "html/html.c"
      _bufput($113, ((STRING_TABLE.__str562)|0), 2); //@line 144 "html/html.c"
      __label__ = 28; break; //@line 145 "html/html.c"
    case 27: 
      var $115=$1; //@line 146 "html/html.c"
      _bufput($115, ((STRING_TABLE.__str42)|0), 11); //@line 146 "html/html.c"
      __label__ = 28; break;
    case 28: 
      var $117=$2; //@line 148 "html/html.c"
      var $118=(($117)|0)!=0; //@line 148 "html/html.c"
      if ($118) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 148 "html/html.c"
    case 29: 
      var $120=$1; //@line 149 "html/html.c"
      var $121=$2; //@line 149 "html/html.c"
      var $122=(($121)|0); //@line 149 "html/html.c"
      var $123=HEAP32[(($122)>>2)]; //@line 149 "html/html.c"
      var $124=$2; //@line 149 "html/html.c"
      var $125=(($124+4)|0); //@line 149 "html/html.c"
      var $126=HEAP32[(($125)>>2)]; //@line 149 "html/html.c"
      _escape_html($120, $123, $126); //@line 149 "html/html.c"
      __label__ = 30; break; //@line 149 "html/html.c"
    case 30: 
      var $128=$1; //@line 151 "html/html.c"
      _bufput($128, ((STRING_TABLE.__str4389)|0), 14); //@line 151 "html/html.c"
      ;
      return; //@line 152 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_blockcode["X"]=1;

function _rndr_blockquote($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$ob;
      $2=$text;
      $3=$opaque;
      var $4=$1; //@line 157 "html/html.c"
      var $5=(($4+4)|0); //@line 157 "html/html.c"
      var $6=HEAP32[(($5)>>2)]; //@line 157 "html/html.c"
      var $7=(($6)|0)!=0; //@line 157 "html/html.c"
      if ($7) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 157 "html/html.c"
    case 3: 
      var $9=$1; //@line 157 "html/html.c"
      _bufputc($9, 10); //@line 157 "html/html.c"
      __label__ = 4; break; //@line 157 "html/html.c"
    case 4: 
      var $11=$1; //@line 158 "html/html.c"
      _bufput($11, ((STRING_TABLE.__str39)|0), 13); //@line 158 "html/html.c"
      var $12=$2; //@line 159 "html/html.c"
      var $13=(($12)|0)!=0; //@line 159 "html/html.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 159 "html/html.c"
    case 5: 
      var $15=$1; //@line 159 "html/html.c"
      var $16=$2; //@line 159 "html/html.c"
      var $17=(($16)|0); //@line 159 "html/html.c"
      var $18=HEAP32[(($17)>>2)]; //@line 159 "html/html.c"
      var $19=$2; //@line 159 "html/html.c"
      var $20=(($19+4)|0); //@line 159 "html/html.c"
      var $21=HEAP32[(($20)>>2)]; //@line 159 "html/html.c"
      _bufput($15, $18, $21); //@line 159 "html/html.c"
      __label__ = 6; break; //@line 159 "html/html.c"
    case 6: 
      var $23=$1; //@line 160 "html/html.c"
      _bufput($23, ((STRING_TABLE.__str40)|0), 14); //@line 160 "html/html.c"
      ;
      return; //@line 161 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_raw_block($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $org;
      var $sz;
      $1=$ob;
      $2=$text;
      $3=$opaque;
      var $4=$2; //@line 333 "html/html.c"
      var $5=(($4)|0)!=0; //@line 333 "html/html.c"
      if ($5) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 333 "html/html.c"
    case 3: 
      __label__ = 19; break; //@line 333 "html/html.c"
    case 4: 
      var $8=$2; //@line 334 "html/html.c"
      var $9=(($8+4)|0); //@line 334 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 334 "html/html.c"
      $sz=$10; //@line 334 "html/html.c"
      __label__ = 5; break; //@line 335 "html/html.c"
    case 5: 
      var $12=$sz; //@line 335 "html/html.c"
      var $13=(($12)>>>0) > 0; //@line 335 "html/html.c"
      if ($13) { __label__ = 6; break; } else { var $25 = 0;__label__ = 7; break; } //@line 335 "html/html.c"
    case 6: 
      var $15=$sz; //@line 335 "html/html.c"
      var $16=((($15)-(1))|0); //@line 335 "html/html.c"
      var $17=$2; //@line 335 "html/html.c"
      var $18=(($17)|0); //@line 335 "html/html.c"
      var $19=HEAP32[(($18)>>2)]; //@line 335 "html/html.c"
      var $20=(($19+$16)|0); //@line 335 "html/html.c"
      var $21=HEAPU8[($20)]; //@line 335 "html/html.c"
      var $22=(($21)&255); //@line 335 "html/html.c"
      var $23=(($22)|0)==10; //@line 335 "html/html.c"
      var $25 = $23;__label__ = 7; break;
    case 7: 
      var $25;
      if ($25) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $27=$sz; //@line 335 "html/html.c"
      var $28=((($27)-(1))|0); //@line 335 "html/html.c"
      $sz=$28; //@line 335 "html/html.c"
      __label__ = 5; break; //@line 335 "html/html.c"
    case 9: 
      $org=0; //@line 336 "html/html.c"
      __label__ = 10; break; //@line 337 "html/html.c"
    case 10: 
      var $31=$org; //@line 337 "html/html.c"
      var $32=$sz; //@line 337 "html/html.c"
      var $33=(($31)>>>0) < (($32)>>>0); //@line 337 "html/html.c"
      if ($33) { __label__ = 11; break; } else { var $44 = 0;__label__ = 12; break; } //@line 337 "html/html.c"
    case 11: 
      var $35=$org; //@line 337 "html/html.c"
      var $36=$2; //@line 337 "html/html.c"
      var $37=(($36)|0); //@line 337 "html/html.c"
      var $38=HEAP32[(($37)>>2)]; //@line 337 "html/html.c"
      var $39=(($38+$35)|0); //@line 337 "html/html.c"
      var $40=HEAPU8[($39)]; //@line 337 "html/html.c"
      var $41=(($40)&255); //@line 337 "html/html.c"
      var $42=(($41)|0)==10; //@line 337 "html/html.c"
      var $44 = $42;__label__ = 12; break;
    case 12: 
      var $44;
      if ($44) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      var $46=$org; //@line 337 "html/html.c"
      var $47=((($46)+(1))|0); //@line 337 "html/html.c"
      $org=$47; //@line 337 "html/html.c"
      __label__ = 10; break; //@line 337 "html/html.c"
    case 14: 
      var $49=$org; //@line 338 "html/html.c"
      var $50=$sz; //@line 338 "html/html.c"
      var $51=(($49)>>>0) >= (($50)>>>0); //@line 338 "html/html.c"
      if ($51) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 338 "html/html.c"
    case 15: 
      __label__ = 19; break; //@line 338 "html/html.c"
    case 16: 
      var $54=$1; //@line 339 "html/html.c"
      var $55=(($54+4)|0); //@line 339 "html/html.c"
      var $56=HEAP32[(($55)>>2)]; //@line 339 "html/html.c"
      var $57=(($56)|0)!=0; //@line 339 "html/html.c"
      if ($57) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 339 "html/html.c"
    case 17: 
      var $59=$1; //@line 339 "html/html.c"
      _bufputc($59, 10); //@line 339 "html/html.c"
      __label__ = 18; break; //@line 339 "html/html.c"
    case 18: 
      var $61=$1; //@line 340 "html/html.c"
      var $62=$2; //@line 340 "html/html.c"
      var $63=(($62)|0); //@line 340 "html/html.c"
      var $64=HEAP32[(($63)>>2)]; //@line 340 "html/html.c"
      var $65=$org; //@line 340 "html/html.c"
      var $66=(($64+$65)|0); //@line 340 "html/html.c"
      var $67=$sz; //@line 340 "html/html.c"
      var $68=$org; //@line 340 "html/html.c"
      var $69=((($67)-($68))|0); //@line 340 "html/html.c"
      _bufput($61, $66, $69); //@line 340 "html/html.c"
      var $70=$1; //@line 341 "html/html.c"
      _bufputc($70, 10); //@line 341 "html/html.c"
      __label__ = 19; break; //@line 342 "html/html.c"
    case 19: 
      ;
      return; //@line 342 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_raw_block["X"]=1;

function _rndr_header($ob, $text, $level, $opaque) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $options;
      $1=$ob;
      $2=$text;
      $3=$level;
      $4=$opaque;
      var $5=$4; //@line 218 "html/html.c"
      var $6=$5; //@line 218 "html/html.c"
      $options=$6; //@line 218 "html/html.c"
      var $7=$1; //@line 220 "html/html.c"
      var $8=(($7+4)|0); //@line 220 "html/html.c"
      var $9=HEAP32[(($8)>>2)]; //@line 220 "html/html.c"
      var $10=(($9)|0)!=0; //@line 220 "html/html.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 220 "html/html.c"
    case 3: 
      var $12=$1; //@line 221 "html/html.c"
      _bufputc($12, 10); //@line 221 "html/html.c"
      __label__ = 4; break; //@line 221 "html/html.c"
    case 4: 
      var $14=$options; //@line 223 "html/html.c"
      var $15=(($14+12)|0); //@line 223 "html/html.c"
      var $16=HEAP32[(($15)>>2)]; //@line 223 "html/html.c"
      var $17=$16 & 64; //@line 223 "html/html.c"
      var $18=(($17)|0)!=0; //@line 223 "html/html.c"
      if ($18) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 223 "html/html.c"
    case 5: 
      var $20=$1; //@line 224 "html/html.c"
      var $21=$3; //@line 224 "html/html.c"
      var $22=$options; //@line 224 "html/html.c"
      var $23=(($22)|0); //@line 224 "html/html.c"
      var $24=(($23)|0); //@line 224 "html/html.c"
      var $25=HEAP32[(($24)>>2)]; //@line 224 "html/html.c"
      var $26=((($25)+(1))|0); //@line 224 "html/html.c"
      HEAP32[(($24)>>2)]=$26; //@line 224 "html/html.c"
      _bufprintf($20, ((STRING_TABLE.__str36)|0), (tempInt=STACKTOP,STACKTOP += 8,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$21,HEAP32[(((tempInt)+(4))>>2)]=$25,tempInt)); //@line 224 "html/html.c"
      __label__ = 7; break; //@line 224 "html/html.c"
    case 6: 
      var $28=$1; //@line 226 "html/html.c"
      var $29=$3; //@line 226 "html/html.c"
      _bufprintf($28, ((STRING_TABLE.__str37)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$29,tempInt)); //@line 226 "html/html.c"
      __label__ = 7; break;
    case 7: 
      var $31=$2; //@line 228 "html/html.c"
      var $32=(($31)|0)!=0; //@line 228 "html/html.c"
      if ($32) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 228 "html/html.c"
    case 8: 
      var $34=$1; //@line 228 "html/html.c"
      var $35=$2; //@line 228 "html/html.c"
      var $36=(($35)|0); //@line 228 "html/html.c"
      var $37=HEAP32[(($36)>>2)]; //@line 228 "html/html.c"
      var $38=$2; //@line 228 "html/html.c"
      var $39=(($38+4)|0); //@line 228 "html/html.c"
      var $40=HEAP32[(($39)>>2)]; //@line 228 "html/html.c"
      _bufput($34, $37, $40); //@line 228 "html/html.c"
      __label__ = 9; break; //@line 228 "html/html.c"
    case 9: 
      var $42=$1; //@line 229 "html/html.c"
      var $43=$3; //@line 229 "html/html.c"
      _bufprintf($42, ((STRING_TABLE.__str38)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$43,tempInt)); //@line 229 "html/html.c"
      STACKTOP = __stackBase__;
      return; //@line 230 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_header["X"]=1;

function _rndr_hrule($ob, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $options;
      $1=$ob;
      $2=$opaque;
      var $3=$2; //@line 357 "html/html.c"
      var $4=$3; //@line 357 "html/html.c"
      $options=$4; //@line 357 "html/html.c"
      var $5=$1; //@line 358 "html/html.c"
      var $6=(($5+4)|0); //@line 358 "html/html.c"
      var $7=HEAP32[(($6)>>2)]; //@line 358 "html/html.c"
      var $8=(($7)|0)!=0; //@line 358 "html/html.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 358 "html/html.c"
    case 3: 
      var $10=$1; //@line 358 "html/html.c"
      _bufputc($10, 10); //@line 358 "html/html.c"
      __label__ = 4; break; //@line 358 "html/html.c"
    case 4: 
      var $12=$1; //@line 359 "html/html.c"
      var $13=$options; //@line 359 "html/html.c"
      var $14=(($13+12)|0); //@line 359 "html/html.c"
      var $15=HEAP32[(($14)>>2)]; //@line 359 "html/html.c"
      var $16=$15 & 256; //@line 359 "html/html.c"
      var $17=(($16)|0)!=0; //@line 359 "html/html.c"
      var $18=$17 ? (((STRING_TABLE.__str34)|0)) : (((STRING_TABLE.__str35)|0)); //@line 359 "html/html.c"
      _bufputs($12, $18); //@line 359 "html/html.c"
      ;
      return; //@line 360 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_list($ob, $text, $flags, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$ob;
      $2=$text;
      $3=$flags;
      $4=$opaque;
      var $5=$1; //@line 266 "html/html.c"
      var $6=(($5+4)|0); //@line 266 "html/html.c"
      var $7=HEAP32[(($6)>>2)]; //@line 266 "html/html.c"
      var $8=(($7)|0)!=0; //@line 266 "html/html.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 266 "html/html.c"
    case 3: 
      var $10=$1; //@line 266 "html/html.c"
      _bufputc($10, 10); //@line 266 "html/html.c"
      __label__ = 4; break; //@line 266 "html/html.c"
    case 4: 
      var $12=$1; //@line 267 "html/html.c"
      var $13=$3; //@line 267 "html/html.c"
      var $14=$13 & 1; //@line 267 "html/html.c"
      var $15=(($14)|0)!=0; //@line 267 "html/html.c"
      var $16=$15 ? (((STRING_TABLE.__str3087)|0)) : (((STRING_TABLE.__str3188)|0)); //@line 267 "html/html.c"
      _bufput($12, $16, 5); //@line 267 "html/html.c"
      var $17=$2; //@line 268 "html/html.c"
      var $18=(($17)|0)!=0; //@line 268 "html/html.c"
      if ($18) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 268 "html/html.c"
    case 5: 
      var $20=$1; //@line 268 "html/html.c"
      var $21=$2; //@line 268 "html/html.c"
      var $22=(($21)|0); //@line 268 "html/html.c"
      var $23=HEAP32[(($22)>>2)]; //@line 268 "html/html.c"
      var $24=$2; //@line 268 "html/html.c"
      var $25=(($24+4)|0); //@line 268 "html/html.c"
      var $26=HEAP32[(($25)>>2)]; //@line 268 "html/html.c"
      _bufput($20, $23, $26); //@line 268 "html/html.c"
      __label__ = 6; break; //@line 268 "html/html.c"
    case 6: 
      var $28=$1; //@line 269 "html/html.c"
      var $29=$3; //@line 269 "html/html.c"
      var $30=$29 & 1; //@line 269 "html/html.c"
      var $31=(($30)|0)!=0; //@line 269 "html/html.c"
      var $32=$31 ? (((STRING_TABLE.__str32)|0)) : (((STRING_TABLE.__str33)|0)); //@line 269 "html/html.c"
      _bufput($28, $32, 6); //@line 269 "html/html.c"
      ;
      return; //@line 270 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_listitem($ob, $text, $flags, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $size;
      $1=$ob;
      $2=$text;
      $3=$flags;
      $4=$opaque;
      var $5=$1; //@line 275 "html/html.c"
      _bufput($5, ((STRING_TABLE.__str2885)|0), 4); //@line 275 "html/html.c"
      var $6=$2; //@line 276 "html/html.c"
      var $7=(($6)|0)!=0; //@line 276 "html/html.c"
      if ($7) { __label__ = 3; break; } else { __label__ = 9; break; } //@line 276 "html/html.c"
    case 3: 
      var $9=$2; //@line 277 "html/html.c"
      var $10=(($9+4)|0); //@line 277 "html/html.c"
      var $11=HEAP32[(($10)>>2)]; //@line 277 "html/html.c"
      $size=$11; //@line 277 "html/html.c"
      __label__ = 4; break; //@line 278 "html/html.c"
    case 4: 
      var $13=$size; //@line 278 "html/html.c"
      var $14=(($13)|0)!=0; //@line 278 "html/html.c"
      if ($14) { __label__ = 5; break; } else { var $26 = 0;__label__ = 6; break; } //@line 278 "html/html.c"
    case 5: 
      var $16=$size; //@line 278 "html/html.c"
      var $17=((($16)-(1))|0); //@line 278 "html/html.c"
      var $18=$2; //@line 278 "html/html.c"
      var $19=(($18)|0); //@line 278 "html/html.c"
      var $20=HEAP32[(($19)>>2)]; //@line 278 "html/html.c"
      var $21=(($20+$17)|0); //@line 278 "html/html.c"
      var $22=HEAPU8[($21)]; //@line 278 "html/html.c"
      var $23=(($22)&255); //@line 278 "html/html.c"
      var $24=(($23)|0)==10; //@line 278 "html/html.c"
      var $26 = $24;__label__ = 6; break;
    case 6: 
      var $26;
      if ($26) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      var $28=$size; //@line 279 "html/html.c"
      var $29=((($28)-(1))|0); //@line 279 "html/html.c"
      $size=$29; //@line 279 "html/html.c"
      __label__ = 4; break; //@line 279 "html/html.c"
    case 8: 
      var $31=$1; //@line 281 "html/html.c"
      var $32=$2; //@line 281 "html/html.c"
      var $33=(($32)|0); //@line 281 "html/html.c"
      var $34=HEAP32[(($33)>>2)]; //@line 281 "html/html.c"
      var $35=$size; //@line 281 "html/html.c"
      _bufput($31, $34, $35); //@line 281 "html/html.c"
      __label__ = 9; break; //@line 282 "html/html.c"
    case 9: 
      var $37=$1; //@line 283 "html/html.c"
      _bufput($37, ((STRING_TABLE.__str2986)|0), 6); //@line 283 "html/html.c"
      ;
      return; //@line 284 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_paragraph($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $options;
      var $i;
      var $org;
      $1=$ob;
      $2=$text;
      $3=$opaque;
      var $4=$3; //@line 289 "html/html.c"
      var $5=$4; //@line 289 "html/html.c"
      $options=$5; //@line 289 "html/html.c"
      $i=0; //@line 290 "html/html.c"
      var $6=$1; //@line 292 "html/html.c"
      var $7=(($6+4)|0); //@line 292 "html/html.c"
      var $8=HEAP32[(($7)>>2)]; //@line 292 "html/html.c"
      var $9=(($8)|0)!=0; //@line 292 "html/html.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 292 "html/html.c"
    case 3: 
      var $11=$1; //@line 292 "html/html.c"
      _bufputc($11, 10); //@line 292 "html/html.c"
      __label__ = 4; break; //@line 292 "html/html.c"
    case 4: 
      var $13=$2; //@line 294 "html/html.c"
      var $14=(($13)|0)!=0; //@line 294 "html/html.c"
      if ($14) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 294 "html/html.c"
    case 5: 
      var $16=$2; //@line 294 "html/html.c"
      var $17=(($16+4)|0); //@line 294 "html/html.c"
      var $18=HEAP32[(($17)>>2)]; //@line 294 "html/html.c"
      var $19=(($18)|0)!=0; //@line 294 "html/html.c"
      if ($19) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 294 "html/html.c"
    case 6: 
      __label__ = 30; break; //@line 295 "html/html.c"
    case 7: 
      __label__ = 8; break; //@line 297 "html/html.c"
    case 8: 
      var $23=$i; //@line 297 "html/html.c"
      var $24=$2; //@line 297 "html/html.c"
      var $25=(($24+4)|0); //@line 297 "html/html.c"
      var $26=HEAPU32[(($25)>>2)]; //@line 297 "html/html.c"
      var $27=(($23)>>>0) < (($26)>>>0); //@line 297 "html/html.c"
      if ($27) { __label__ = 9; break; } else { var $39 = 0;__label__ = 10; break; } //@line 297 "html/html.c"
    case 9: 
      var $29=$i; //@line 297 "html/html.c"
      var $30=$2; //@line 297 "html/html.c"
      var $31=(($30)|0); //@line 297 "html/html.c"
      var $32=HEAP32[(($31)>>2)]; //@line 297 "html/html.c"
      var $33=(($32+$29)|0); //@line 297 "html/html.c"
      var $34=HEAPU8[($33)]; //@line 297 "html/html.c"
      var $35=(($34)&255); //@line 297 "html/html.c"
      var $36=_isspace($35); //@line 297 "html/html.c"
      var $37=(($36)|0)!=0; //@line 297 "html/html.c"
      var $39 = $37;__label__ = 10; break;
    case 10: 
      var $39;
      if ($39) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      var $41=$i; //@line 297 "html/html.c"
      var $42=((($41)+(1))|0); //@line 297 "html/html.c"
      $i=$42; //@line 297 "html/html.c"
      __label__ = 8; break; //@line 297 "html/html.c"
    case 12: 
      var $44=$i; //@line 299 "html/html.c"
      var $45=$2; //@line 299 "html/html.c"
      var $46=(($45+4)|0); //@line 299 "html/html.c"
      var $47=HEAP32[(($46)>>2)]; //@line 299 "html/html.c"
      var $48=(($44)|0)==(($47)|0); //@line 299 "html/html.c"
      if ($48) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 299 "html/html.c"
    case 13: 
      __label__ = 30; break; //@line 300 "html/html.c"
    case 14: 
      var $51=$1; //@line 302 "html/html.c"
      _bufput($51, ((STRING_TABLE.__str2683)|0), 3); //@line 302 "html/html.c"
      var $52=$options; //@line 303 "html/html.c"
      var $53=(($52+12)|0); //@line 303 "html/html.c"
      var $54=HEAP32[(($53)>>2)]; //@line 303 "html/html.c"
      var $55=$54 & 128; //@line 303 "html/html.c"
      var $56=(($55)|0)!=0; //@line 303 "html/html.c"
      if ($56) { __label__ = 15; break; } else { __label__ = 28; break; } //@line 303 "html/html.c"
    case 15: 
      __label__ = 16; break; //@line 305 "html/html.c"
    case 16: 
      var $59=$i; //@line 305 "html/html.c"
      var $60=$2; //@line 305 "html/html.c"
      var $61=(($60+4)|0); //@line 305 "html/html.c"
      var $62=HEAPU32[(($61)>>2)]; //@line 305 "html/html.c"
      var $63=(($59)>>>0) < (($62)>>>0); //@line 305 "html/html.c"
      if ($63) { __label__ = 17; break; } else { __label__ = 27; break; } //@line 305 "html/html.c"
    case 17: 
      var $65=$i; //@line 306 "html/html.c"
      $org=$65; //@line 306 "html/html.c"
      __label__ = 18; break; //@line 307 "html/html.c"
    case 18: 
      var $67=$i; //@line 307 "html/html.c"
      var $68=$2; //@line 307 "html/html.c"
      var $69=(($68+4)|0); //@line 307 "html/html.c"
      var $70=HEAPU32[(($69)>>2)]; //@line 307 "html/html.c"
      var $71=(($67)>>>0) < (($70)>>>0); //@line 307 "html/html.c"
      if ($71) { __label__ = 19; break; } else { var $82 = 0;__label__ = 20; break; } //@line 307 "html/html.c"
    case 19: 
      var $73=$i; //@line 307 "html/html.c"
      var $74=$2; //@line 307 "html/html.c"
      var $75=(($74)|0); //@line 307 "html/html.c"
      var $76=HEAP32[(($75)>>2)]; //@line 307 "html/html.c"
      var $77=(($76+$73)|0); //@line 307 "html/html.c"
      var $78=HEAPU8[($77)]; //@line 307 "html/html.c"
      var $79=(($78)&255); //@line 307 "html/html.c"
      var $80=(($79)|0)!=10; //@line 307 "html/html.c"
      var $82 = $80;__label__ = 20; break;
    case 20: 
      var $82;
      if ($82) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $84=$i; //@line 308 "html/html.c"
      var $85=((($84)+(1))|0); //@line 308 "html/html.c"
      $i=$85; //@line 308 "html/html.c"
      __label__ = 18; break; //@line 308 "html/html.c"
    case 22: 
      var $87=$i; //@line 310 "html/html.c"
      var $88=$org; //@line 310 "html/html.c"
      var $89=(($87)>>>0) > (($88)>>>0); //@line 310 "html/html.c"
      if ($89) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 310 "html/html.c"
    case 23: 
      var $91=$1; //@line 311 "html/html.c"
      var $92=$2; //@line 311 "html/html.c"
      var $93=(($92)|0); //@line 311 "html/html.c"
      var $94=HEAP32[(($93)>>2)]; //@line 311 "html/html.c"
      var $95=$org; //@line 311 "html/html.c"
      var $96=(($94+$95)|0); //@line 311 "html/html.c"
      var $97=$i; //@line 311 "html/html.c"
      var $98=$org; //@line 311 "html/html.c"
      var $99=((($97)-($98))|0); //@line 311 "html/html.c"
      _bufput($91, $96, $99); //@line 311 "html/html.c"
      __label__ = 24; break; //@line 311 "html/html.c"
    case 24: 
      var $101=$i; //@line 317 "html/html.c"
      var $102=$2; //@line 317 "html/html.c"
      var $103=(($102+4)|0); //@line 317 "html/html.c"
      var $104=HEAP32[(($103)>>2)]; //@line 317 "html/html.c"
      var $105=((($104)-(1))|0); //@line 317 "html/html.c"
      var $106=(($101)>>>0) >= (($105)>>>0); //@line 317 "html/html.c"
      if ($106) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 317 "html/html.c"
    case 25: 
      __label__ = 27; break; //@line 318 "html/html.c"
    case 26: 
      var $109=$1; //@line 320 "html/html.c"
      var $110=$3; //@line 320 "html/html.c"
      var $111=_rndr_linebreak($109, $110); //@line 320 "html/html.c"
      var $112=$i; //@line 321 "html/html.c"
      var $113=((($112)+(1))|0); //@line 321 "html/html.c"
      $i=$113; //@line 321 "html/html.c"
      __label__ = 16; break; //@line 322 "html/html.c"
    case 27: 
      __label__ = 29; break; //@line 323 "html/html.c"
    case 28: 
      var $116=$1; //@line 324 "html/html.c"
      var $117=$i; //@line 324 "html/html.c"
      var $118=$2; //@line 324 "html/html.c"
      var $119=(($118)|0); //@line 324 "html/html.c"
      var $120=HEAP32[(($119)>>2)]; //@line 324 "html/html.c"
      var $121=(($120+$117)|0); //@line 324 "html/html.c"
      var $122=$2; //@line 324 "html/html.c"
      var $123=(($122+4)|0); //@line 324 "html/html.c"
      var $124=HEAP32[(($123)>>2)]; //@line 324 "html/html.c"
      var $125=$i; //@line 324 "html/html.c"
      var $126=((($124)-($125))|0); //@line 324 "html/html.c"
      _bufput($116, $121, $126); //@line 324 "html/html.c"
      __label__ = 29; break;
    case 29: 
      var $128=$1; //@line 326 "html/html.c"
      _bufput($128, ((STRING_TABLE.__str2784)|0), 5); //@line 326 "html/html.c"
      __label__ = 30; break; //@line 327 "html/html.c"
    case 30: 
      ;
      return; //@line 327 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_paragraph["X"]=1;

function _rndr_table($ob, $header, $body, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$ob;
      $2=$header;
      $3=$body;
      $4=$opaque;
      var $5=$1; //@line 417 "html/html.c"
      var $6=(($5+4)|0); //@line 417 "html/html.c"
      var $7=HEAP32[(($6)>>2)]; //@line 417 "html/html.c"
      var $8=(($7)|0)!=0; //@line 417 "html/html.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 417 "html/html.c"
    case 3: 
      var $10=$1; //@line 417 "html/html.c"
      _bufputc($10, 10); //@line 417 "html/html.c"
      __label__ = 4; break; //@line 417 "html/html.c"
    case 4: 
      var $12=$1; //@line 418 "html/html.c"
      _bufput($12, ((STRING_TABLE.__str2380)|0), 15); //@line 418 "html/html.c"
      var $13=$2; //@line 419 "html/html.c"
      var $14=(($13)|0)!=0; //@line 419 "html/html.c"
      if ($14) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 419 "html/html.c"
    case 5: 
      var $16=$1; //@line 420 "html/html.c"
      var $17=$2; //@line 420 "html/html.c"
      var $18=(($17)|0); //@line 420 "html/html.c"
      var $19=HEAP32[(($18)>>2)]; //@line 420 "html/html.c"
      var $20=$2; //@line 420 "html/html.c"
      var $21=(($20+4)|0); //@line 420 "html/html.c"
      var $22=HEAP32[(($21)>>2)]; //@line 420 "html/html.c"
      _bufput($16, $19, $22); //@line 420 "html/html.c"
      __label__ = 6; break; //@line 420 "html/html.c"
    case 6: 
      var $24=$1; //@line 421 "html/html.c"
      _bufput($24, ((STRING_TABLE.__str2481)|0), 16); //@line 421 "html/html.c"
      var $25=$3; //@line 422 "html/html.c"
      var $26=(($25)|0)!=0; //@line 422 "html/html.c"
      if ($26) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 422 "html/html.c"
    case 7: 
      var $28=$1; //@line 423 "html/html.c"
      var $29=$3; //@line 423 "html/html.c"
      var $30=(($29)|0); //@line 423 "html/html.c"
      var $31=HEAP32[(($30)>>2)]; //@line 423 "html/html.c"
      var $32=$3; //@line 423 "html/html.c"
      var $33=(($32+4)|0); //@line 423 "html/html.c"
      var $34=HEAP32[(($33)>>2)]; //@line 423 "html/html.c"
      _bufput($28, $31, $34); //@line 423 "html/html.c"
      __label__ = 8; break; //@line 423 "html/html.c"
    case 8: 
      var $36=$1; //@line 424 "html/html.c"
      _bufput($36, ((STRING_TABLE.__str2582)|0), 17); //@line 424 "html/html.c"
      ;
      return; //@line 425 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_tablerow($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$ob;
      $2=$text;
      $3=$opaque;
      var $4=$1; //@line 430 "html/html.c"
      _bufput($4, ((STRING_TABLE.__str2178)|0), 5); //@line 430 "html/html.c"
      var $5=$2; //@line 431 "html/html.c"
      var $6=(($5)|0)!=0; //@line 431 "html/html.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 431 "html/html.c"
    case 3: 
      var $8=$1; //@line 432 "html/html.c"
      var $9=$2; //@line 432 "html/html.c"
      var $10=(($9)|0); //@line 432 "html/html.c"
      var $11=HEAP32[(($10)>>2)]; //@line 432 "html/html.c"
      var $12=$2; //@line 432 "html/html.c"
      var $13=(($12+4)|0); //@line 432 "html/html.c"
      var $14=HEAP32[(($13)>>2)]; //@line 432 "html/html.c"
      _bufput($8, $11, $14); //@line 432 "html/html.c"
      __label__ = 4; break; //@line 432 "html/html.c"
    case 4: 
      var $16=$1; //@line 433 "html/html.c"
      _bufput($16, ((STRING_TABLE.__str2279)|0), 6); //@line 433 "html/html.c"
      ;
      return; //@line 434 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _rndr_tablecell($ob, $text, $flags, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$ob;
      $2=$text;
      $3=$flags;
      $4=$opaque;
      var $5=$3; //@line 439 "html/html.c"
      var $6=$5 & 4; //@line 439 "html/html.c"
      var $7=(($6)|0)!=0; //@line 439 "html/html.c"
      if ($7) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 439 "html/html.c"
    case 3: 
      var $9=$1; //@line 440 "html/html.c"
      _bufput($9, ((STRING_TABLE.__str1370)|0), 3); //@line 440 "html/html.c"
      __label__ = 5; break; //@line 441 "html/html.c"
    case 4: 
      var $11=$1; //@line 442 "html/html.c"
      _bufput($11, ((STRING_TABLE.__str1471)|0), 3); //@line 442 "html/html.c"
      __label__ = 5; break;
    case 5: 
      var $13=$3; //@line 445 "html/html.c"
      var $14=$13 & 3; //@line 445 "html/html.c"
      if ((($14)|0) == 3) {
        __label__ = 6; break;
      }
      else if ((($14)|0) == 1) {
        __label__ = 7; break;
      }
      else if ((($14)|0) == 2) {
        __label__ = 8; break;
      }
      else {
      __label__ = 9; break;
      }
      
    case 6: 
      var $16=$1; //@line 447 "html/html.c"
      _bufput($16, ((STRING_TABLE.__str1572)|0), 16); //@line 447 "html/html.c"
      __label__ = 10; break; //@line 448 "html/html.c"
    case 7: 
      var $18=$1; //@line 451 "html/html.c"
      _bufput($18, ((STRING_TABLE.__str1673)|0), 14); //@line 451 "html/html.c"
      __label__ = 10; break; //@line 452 "html/html.c"
    case 8: 
      var $20=$1; //@line 455 "html/html.c"
      _bufput($20, ((STRING_TABLE.__str1774)|0), 15); //@line 455 "html/html.c"
      __label__ = 10; break; //@line 456 "html/html.c"
    case 9: 
      var $22=$1; //@line 459 "html/html.c"
      _bufput($22, ((STRING_TABLE.__str1875)|0), 1); //@line 459 "html/html.c"
      __label__ = 10; break; //@line 460 "html/html.c"
    case 10: 
      var $24=$2; //@line 462 "html/html.c"
      var $25=(($24)|0)!=0; //@line 462 "html/html.c"
      if ($25) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 462 "html/html.c"
    case 11: 
      var $27=$1; //@line 463 "html/html.c"
      var $28=$2; //@line 463 "html/html.c"
      var $29=(($28)|0); //@line 463 "html/html.c"
      var $30=HEAP32[(($29)>>2)]; //@line 463 "html/html.c"
      var $31=$2; //@line 463 "html/html.c"
      var $32=(($31+4)|0); //@line 463 "html/html.c"
      var $33=HEAP32[(($32)>>2)]; //@line 463 "html/html.c"
      _bufput($27, $30, $33); //@line 463 "html/html.c"
      __label__ = 12; break; //@line 463 "html/html.c"
    case 12: 
      var $35=$3; //@line 465 "html/html.c"
      var $36=$35 & 4; //@line 465 "html/html.c"
      var $37=(($36)|0)!=0; //@line 465 "html/html.c"
      if ($37) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 465 "html/html.c"
    case 13: 
      var $39=$1; //@line 466 "html/html.c"
      _bufput($39, ((STRING_TABLE.__str1976)|0), 6); //@line 466 "html/html.c"
      __label__ = 15; break; //@line 467 "html/html.c"
    case 14: 
      var $41=$1; //@line 468 "html/html.c"
      _bufput($41, ((STRING_TABLE.__str2077)|0), 6); //@line 468 "html/html.c"
      __label__ = 15; break;
    case 15: 
      ;
      return; //@line 470 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_tablecell["X"]=1;

function _rndr_autolink($ob, $link, $type, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $options;
      $2=$ob;
      $3=$link;
      $4=$type;
      $5=$opaque;
      var $6=$5; //@line 79 "html/html.c"
      var $7=$6; //@line 79 "html/html.c"
      $options=$7; //@line 79 "html/html.c"
      var $8=$3; //@line 81 "html/html.c"
      var $9=(($8)|0)!=0; //@line 81 "html/html.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 81 "html/html.c"
    case 3: 
      var $11=$3; //@line 81 "html/html.c"
      var $12=(($11+4)|0); //@line 81 "html/html.c"
      var $13=HEAP32[(($12)>>2)]; //@line 81 "html/html.c"
      var $14=(($13)|0)!=0; //@line 81 "html/html.c"
      if ($14) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 81 "html/html.c"
    case 4: 
      $1=0; //@line 82 "html/html.c"
      __label__ = 18; break; //@line 82 "html/html.c"
    case 5: 
      var $17=$options; //@line 84 "html/html.c"
      var $18=(($17+12)|0); //@line 84 "html/html.c"
      var $19=HEAP32[(($18)>>2)]; //@line 84 "html/html.c"
      var $20=$19 & 32; //@line 84 "html/html.c"
      var $21=(($20)|0)!=0; //@line 84 "html/html.c"
      if ($21) { __label__ = 6; break; } else { __label__ = 9; break; } //@line 84 "html/html.c"
    case 6: 
      var $23=$3; //@line 85 "html/html.c"
      var $24=(($23)|0); //@line 85 "html/html.c"
      var $25=HEAP32[(($24)>>2)]; //@line 85 "html/html.c"
      var $26=$3; //@line 85 "html/html.c"
      var $27=(($26+4)|0); //@line 85 "html/html.c"
      var $28=HEAP32[(($27)>>2)]; //@line 85 "html/html.c"
      var $29=_sd_autolink_issafe($25, $28); //@line 85 "html/html.c"
      var $30=(($29)|0)!=0; //@line 85 "html/html.c"
      if ($30) { __label__ = 9; break; } else { __label__ = 7; break; } //@line 85 "html/html.c"
    case 7: 
      var $32=$4; //@line 85 "html/html.c"
      var $33=(($32)|0)!=2; //@line 85 "html/html.c"
      if ($33) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 85 "html/html.c"
    case 8: 
      $1=0; //@line 87 "html/html.c"
      __label__ = 18; break; //@line 87 "html/html.c"
    case 9: 
      var $36=$2; //@line 89 "html/html.c"
      _bufput($36, ((STRING_TABLE.__str360)|0), 9); //@line 89 "html/html.c"
      var $37=$4; //@line 90 "html/html.c"
      var $38=(($37)|0)==2; //@line 90 "html/html.c"
      if ($38) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 90 "html/html.c"
    case 10: 
      var $40=$2; //@line 91 "html/html.c"
      _bufput($40, ((STRING_TABLE.__str1269)|0), 7); //@line 91 "html/html.c"
      __label__ = 11; break; //@line 91 "html/html.c"
    case 11: 
      var $42=$2; //@line 92 "html/html.c"
      var $43=$3; //@line 92 "html/html.c"
      var $44=(($43)|0); //@line 92 "html/html.c"
      var $45=HEAP32[(($44)>>2)]; //@line 92 "html/html.c"
      var $46=$3; //@line 92 "html/html.c"
      var $47=(($46+4)|0); //@line 92 "html/html.c"
      var $48=HEAP32[(($47)>>2)]; //@line 92 "html/html.c"
      _escape_href($42, $45, $48); //@line 92 "html/html.c"
      var $49=$options; //@line 94 "html/html.c"
      var $50=(($49+16)|0); //@line 94 "html/html.c"
      var $51=HEAP32[(($50)>>2)]; //@line 94 "html/html.c"
      var $52=(($51)|0)!=0; //@line 94 "html/html.c"
      if ($52) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 94 "html/html.c"
    case 12: 
      var $54=$2; //@line 95 "html/html.c"
      _bufputc($54, 34); //@line 95 "html/html.c"
      var $55=$options; //@line 96 "html/html.c"
      var $56=(($55+16)|0); //@line 96 "html/html.c"
      var $57=HEAP32[(($56)>>2)]; //@line 96 "html/html.c"
      var $58=$2; //@line 96 "html/html.c"
      var $59=$3; //@line 96 "html/html.c"
      var $60=$5; //@line 96 "html/html.c"
      FUNCTION_TABLE[$57]($58, $59, $60); //@line 96 "html/html.c"
      var $61=$2; //@line 97 "html/html.c"
      _bufputc($61, 62); //@line 97 "html/html.c"
      __label__ = 14; break; //@line 98 "html/html.c"
    case 13: 
      var $63=$2; //@line 99 "html/html.c"
      _bufput($63, ((STRING_TABLE.__str562)|0), 2); //@line 99 "html/html.c"
      __label__ = 14; break;
    case 14: 
      var $65=$3; //@line 107 "html/html.c"
      var $66=_bufprefix($65, ((STRING_TABLE.__str1269)|0)); //@line 107 "html/html.c"
      var $67=(($66)|0)==0; //@line 107 "html/html.c"
      if ($67) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 107 "html/html.c"
    case 15: 
      var $69=$2; //@line 108 "html/html.c"
      var $70=$3; //@line 108 "html/html.c"
      var $71=(($70)|0); //@line 108 "html/html.c"
      var $72=HEAP32[(($71)>>2)]; //@line 108 "html/html.c"
      var $73=(($72+7)|0); //@line 108 "html/html.c"
      var $74=$3; //@line 108 "html/html.c"
      var $75=(($74+4)|0); //@line 108 "html/html.c"
      var $76=HEAP32[(($75)>>2)]; //@line 108 "html/html.c"
      var $77=((($76)-(7))|0); //@line 108 "html/html.c"
      _escape_html($69, $73, $77); //@line 108 "html/html.c"
      __label__ = 17; break; //@line 109 "html/html.c"
    case 16: 
      var $79=$2; //@line 110 "html/html.c"
      var $80=$3; //@line 110 "html/html.c"
      var $81=(($80)|0); //@line 110 "html/html.c"
      var $82=HEAP32[(($81)>>2)]; //@line 110 "html/html.c"
      var $83=$3; //@line 110 "html/html.c"
      var $84=(($83+4)|0); //@line 110 "html/html.c"
      var $85=HEAP32[(($84)>>2)]; //@line 110 "html/html.c"
      _escape_html($79, $82, $85); //@line 110 "html/html.c"
      __label__ = 17; break;
    case 17: 
      var $87=$2; //@line 113 "html/html.c"
      _bufput($87, ((STRING_TABLE.__str663)|0), 4); //@line 113 "html/html.c"
      $1=1; //@line 115 "html/html.c"
      __label__ = 18; break; //@line 115 "html/html.c"
    case 18: 
      var $89=$1; //@line 116 "html/html.c"
      ;
      return $89; //@line 116 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_autolink["X"]=1;

function _rndr_image($ob, $link, $title, $alt, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $options;
      $2=$ob;
      $3=$link;
      $4=$title;
      $5=$alt;
      $6=$opaque;
      var $7=$6; //@line 365 "html/html.c"
      var $8=$7; //@line 365 "html/html.c"
      $options=$8; //@line 365 "html/html.c"
      var $9=$3; //@line 366 "html/html.c"
      var $10=(($9)|0)!=0; //@line 366 "html/html.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 366 "html/html.c"
    case 3: 
      var $12=$3; //@line 366 "html/html.c"
      var $13=(($12+4)|0); //@line 366 "html/html.c"
      var $14=HEAP32[(($13)>>2)]; //@line 366 "html/html.c"
      var $15=(($14)|0)!=0; //@line 366 "html/html.c"
      if ($15) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 366 "html/html.c"
    case 4: 
      $1=0; //@line 366 "html/html.c"
      __label__ = 12; break; //@line 366 "html/html.c"
    case 5: 
      var $18=$2; //@line 368 "html/html.c"
      _bufput($18, ((STRING_TABLE.__str966)|0), 10); //@line 368 "html/html.c"
      var $19=$2; //@line 369 "html/html.c"
      var $20=$3; //@line 369 "html/html.c"
      var $21=(($20)|0); //@line 369 "html/html.c"
      var $22=HEAP32[(($21)>>2)]; //@line 369 "html/html.c"
      var $23=$3; //@line 369 "html/html.c"
      var $24=(($23+4)|0); //@line 369 "html/html.c"
      var $25=HEAP32[(($24)>>2)]; //@line 369 "html/html.c"
      _escape_href($19, $22, $25); //@line 369 "html/html.c"
      var $26=$2; //@line 370 "html/html.c"
      _bufput($26, ((STRING_TABLE.__str1067)|0), 7); //@line 370 "html/html.c"
      var $27=$5; //@line 372 "html/html.c"
      var $28=(($27)|0)!=0; //@line 372 "html/html.c"
      if ($28) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 372 "html/html.c"
    case 6: 
      var $30=$5; //@line 372 "html/html.c"
      var $31=(($30+4)|0); //@line 372 "html/html.c"
      var $32=HEAP32[(($31)>>2)]; //@line 372 "html/html.c"
      var $33=(($32)|0)!=0; //@line 372 "html/html.c"
      if ($33) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 372 "html/html.c"
    case 7: 
      var $35=$2; //@line 373 "html/html.c"
      var $36=$5; //@line 373 "html/html.c"
      var $37=(($36)|0); //@line 373 "html/html.c"
      var $38=HEAP32[(($37)>>2)]; //@line 373 "html/html.c"
      var $39=$5; //@line 373 "html/html.c"
      var $40=(($39+4)|0); //@line 373 "html/html.c"
      var $41=HEAP32[(($40)>>2)]; //@line 373 "html/html.c"
      _escape_html($35, $38, $41); //@line 373 "html/html.c"
      __label__ = 8; break; //@line 373 "html/html.c"
    case 8: 
      var $43=$4; //@line 375 "html/html.c"
      var $44=(($43)|0)!=0; //@line 375 "html/html.c"
      if ($44) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 375 "html/html.c"
    case 9: 
      var $46=$4; //@line 375 "html/html.c"
      var $47=(($46+4)|0); //@line 375 "html/html.c"
      var $48=HEAP32[(($47)>>2)]; //@line 375 "html/html.c"
      var $49=(($48)|0)!=0; //@line 375 "html/html.c"
      if ($49) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 375 "html/html.c"
    case 10: 
      var $51=$2; //@line 376 "html/html.c"
      _bufput($51, ((STRING_TABLE.__str461)|0), 9); //@line 376 "html/html.c"
      var $52=$2; //@line 377 "html/html.c"
      var $53=$4; //@line 377 "html/html.c"
      var $54=(($53)|0); //@line 377 "html/html.c"
      var $55=HEAP32[(($54)>>2)]; //@line 377 "html/html.c"
      var $56=$4; //@line 377 "html/html.c"
      var $57=(($56+4)|0); //@line 377 "html/html.c"
      var $58=HEAP32[(($57)>>2)]; //@line 377 "html/html.c"
      _escape_html($52, $55, $58); //@line 377 "html/html.c"
      __label__ = 11; break; //@line 377 "html/html.c"
    case 11: 
      var $60=$2; //@line 379 "html/html.c"
      var $61=$options; //@line 379 "html/html.c"
      var $62=(($61+12)|0); //@line 379 "html/html.c"
      var $63=HEAP32[(($62)>>2)]; //@line 379 "html/html.c"
      var $64=$63 & 256; //@line 379 "html/html.c"
      var $65=(($64)|0)!=0; //@line 379 "html/html.c"
      var $66=$65 ? (((STRING_TABLE.__str1168)|0)) : (((STRING_TABLE.__str562)|0)); //@line 379 "html/html.c"
      _bufputs($60, $66); //@line 379 "html/html.c"
      $1=1; //@line 380 "html/html.c"
      __label__ = 12; break; //@line 380 "html/html.c"
    case 12: 
      var $68=$1; //@line 381 "html/html.c"
      ;
      return $68; //@line 381 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_image["X"]=1;

function _rndr_linebreak($ob, $opaque) {
  ;
  var __label__;

  var $1;
  var $2;
  var $options;
  $1=$ob;
  $2=$opaque;
  var $3=$2; //@line 210 "html/html.c"
  var $4=$3; //@line 210 "html/html.c"
  $options=$4; //@line 210 "html/html.c"
  var $5=$1; //@line 211 "html/html.c"
  var $6=$options; //@line 211 "html/html.c"
  var $7=(($6+12)|0); //@line 211 "html/html.c"
  var $8=HEAP32[(($7)>>2)]; //@line 211 "html/html.c"
  var $9=$8 & 256; //@line 211 "html/html.c"
  var $10=(($9)|0)!=0; //@line 211 "html/html.c"
  var $11=$10 ? (((STRING_TABLE.__str764)|0)) : (((STRING_TABLE.__str865)|0)); //@line 211 "html/html.c"
  _bufputs($5, $11); //@line 211 "html/html.c"
  ;
  return 1; //@line 212 "html/html.c"
}


function _rndr_link($ob, $link, $title, $content, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $options;
      $2=$ob;
      $3=$link;
      $4=$title;
      $5=$content;
      $6=$opaque;
      var $7=$6; //@line 235 "html/html.c"
      var $8=$7; //@line 235 "html/html.c"
      $options=$8; //@line 235 "html/html.c"
      var $9=$3; //@line 237 "html/html.c"
      var $10=(($9)|0)!=0; //@line 237 "html/html.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 237 "html/html.c"
    case 3: 
      var $12=$options; //@line 237 "html/html.c"
      var $13=(($12+12)|0); //@line 237 "html/html.c"
      var $14=HEAP32[(($13)>>2)]; //@line 237 "html/html.c"
      var $15=$14 & 32; //@line 237 "html/html.c"
      var $16=(($15)|0)!=0; //@line 237 "html/html.c"
      if ($16) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 237 "html/html.c"
    case 4: 
      var $18=$3; //@line 237 "html/html.c"
      var $19=(($18)|0); //@line 237 "html/html.c"
      var $20=HEAP32[(($19)>>2)]; //@line 237 "html/html.c"
      var $21=$3; //@line 237 "html/html.c"
      var $22=(($21+4)|0); //@line 237 "html/html.c"
      var $23=HEAP32[(($22)>>2)]; //@line 237 "html/html.c"
      var $24=_sd_autolink_issafe($20, $23); //@line 237 "html/html.c"
      var $25=(($24)|0)!=0; //@line 237 "html/html.c"
      if ($25) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 237 "html/html.c"
    case 5: 
      $1=0; //@line 238 "html/html.c"
      __label__ = 19; break; //@line 238 "html/html.c"
    case 6: 
      var $28=$2; //@line 240 "html/html.c"
      _bufput($28, ((STRING_TABLE.__str360)|0), 9); //@line 240 "html/html.c"
      var $29=$3; //@line 242 "html/html.c"
      var $30=(($29)|0)!=0; //@line 242 "html/html.c"
      if ($30) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 242 "html/html.c"
    case 7: 
      var $32=$3; //@line 242 "html/html.c"
      var $33=(($32+4)|0); //@line 242 "html/html.c"
      var $34=HEAP32[(($33)>>2)]; //@line 242 "html/html.c"
      var $35=(($34)|0)!=0; //@line 242 "html/html.c"
      if ($35) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 242 "html/html.c"
    case 8: 
      var $37=$2; //@line 243 "html/html.c"
      var $38=$3; //@line 243 "html/html.c"
      var $39=(($38)|0); //@line 243 "html/html.c"
      var $40=HEAP32[(($39)>>2)]; //@line 243 "html/html.c"
      var $41=$3; //@line 243 "html/html.c"
      var $42=(($41+4)|0); //@line 243 "html/html.c"
      var $43=HEAP32[(($42)>>2)]; //@line 243 "html/html.c"
      _escape_href($37, $40, $43); //@line 243 "html/html.c"
      __label__ = 9; break; //@line 243 "html/html.c"
    case 9: 
      var $45=$4; //@line 245 "html/html.c"
      var $46=(($45)|0)!=0; //@line 245 "html/html.c"
      if ($46) { __label__ = 10; break; } else { __label__ = 12; break; } //@line 245 "html/html.c"
    case 10: 
      var $48=$4; //@line 245 "html/html.c"
      var $49=(($48+4)|0); //@line 245 "html/html.c"
      var $50=HEAP32[(($49)>>2)]; //@line 245 "html/html.c"
      var $51=(($50)|0)!=0; //@line 245 "html/html.c"
      if ($51) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 245 "html/html.c"
    case 11: 
      var $53=$2; //@line 246 "html/html.c"
      _bufput($53, ((STRING_TABLE.__str461)|0), 9); //@line 246 "html/html.c"
      var $54=$2; //@line 247 "html/html.c"
      var $55=$4; //@line 247 "html/html.c"
      var $56=(($55)|0); //@line 247 "html/html.c"
      var $57=HEAP32[(($56)>>2)]; //@line 247 "html/html.c"
      var $58=$4; //@line 247 "html/html.c"
      var $59=(($58+4)|0); //@line 247 "html/html.c"
      var $60=HEAP32[(($59)>>2)]; //@line 247 "html/html.c"
      _escape_html($54, $57, $60); //@line 247 "html/html.c"
      __label__ = 12; break; //@line 248 "html/html.c"
    case 12: 
      var $62=$options; //@line 250 "html/html.c"
      var $63=(($62+16)|0); //@line 250 "html/html.c"
      var $64=HEAP32[(($63)>>2)]; //@line 250 "html/html.c"
      var $65=(($64)|0)!=0; //@line 250 "html/html.c"
      if ($65) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 250 "html/html.c"
    case 13: 
      var $67=$2; //@line 251 "html/html.c"
      _bufputc($67, 34); //@line 251 "html/html.c"
      var $68=$options; //@line 252 "html/html.c"
      var $69=(($68+16)|0); //@line 252 "html/html.c"
      var $70=HEAP32[(($69)>>2)]; //@line 252 "html/html.c"
      var $71=$2; //@line 252 "html/html.c"
      var $72=$3; //@line 252 "html/html.c"
      var $73=$6; //@line 252 "html/html.c"
      FUNCTION_TABLE[$70]($71, $72, $73); //@line 252 "html/html.c"
      var $74=$2; //@line 253 "html/html.c"
      _bufputc($74, 62); //@line 253 "html/html.c"
      __label__ = 15; break; //@line 254 "html/html.c"
    case 14: 
      var $76=$2; //@line 255 "html/html.c"
      _bufput($76, ((STRING_TABLE.__str562)|0), 2); //@line 255 "html/html.c"
      __label__ = 15; break;
    case 15: 
      var $78=$5; //@line 258 "html/html.c"
      var $79=(($78)|0)!=0; //@line 258 "html/html.c"
      if ($79) { __label__ = 16; break; } else { __label__ = 18; break; } //@line 258 "html/html.c"
    case 16: 
      var $81=$5; //@line 258 "html/html.c"
      var $82=(($81+4)|0); //@line 258 "html/html.c"
      var $83=HEAP32[(($82)>>2)]; //@line 258 "html/html.c"
      var $84=(($83)|0)!=0; //@line 258 "html/html.c"
      if ($84) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 258 "html/html.c"
    case 17: 
      var $86=$2; //@line 258 "html/html.c"
      var $87=$5; //@line 258 "html/html.c"
      var $88=(($87)|0); //@line 258 "html/html.c"
      var $89=HEAP32[(($88)>>2)]; //@line 258 "html/html.c"
      var $90=$5; //@line 258 "html/html.c"
      var $91=(($90+4)|0); //@line 258 "html/html.c"
      var $92=HEAP32[(($91)>>2)]; //@line 258 "html/html.c"
      _bufput($86, $89, $92); //@line 258 "html/html.c"
      __label__ = 18; break; //@line 258 "html/html.c"
    case 18: 
      var $94=$2; //@line 259 "html/html.c"
      _bufput($94, ((STRING_TABLE.__str663)|0), 4); //@line 259 "html/html.c"
      $1=1; //@line 260 "html/html.c"
      __label__ = 19; break; //@line 260 "html/html.c"
    case 19: 
      var $96=$1; //@line 261 "html/html.c"
      ;
      return $96; //@line 261 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_link["X"]=1;

function _rndr_raw_html($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $options;
      $2=$ob;
      $3=$text;
      $4=$opaque;
      var $5=$4; //@line 386 "html/html.c"
      var $6=$5; //@line 386 "html/html.c"
      $options=$6; //@line 386 "html/html.c"
      var $7=$options; //@line 390 "html/html.c"
      var $8=(($7+12)|0); //@line 390 "html/html.c"
      var $9=HEAP32[(($8)>>2)]; //@line 390 "html/html.c"
      var $10=$9 & 512; //@line 390 "html/html.c"
      var $11=(($10)|0)!=0; //@line 390 "html/html.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 390 "html/html.c"
    case 3: 
      var $13=$2; //@line 391 "html/html.c"
      var $14=$3; //@line 391 "html/html.c"
      var $15=(($14)|0); //@line 391 "html/html.c"
      var $16=HEAP32[(($15)>>2)]; //@line 391 "html/html.c"
      var $17=$3; //@line 391 "html/html.c"
      var $18=(($17+4)|0); //@line 391 "html/html.c"
      var $19=HEAP32[(($18)>>2)]; //@line 391 "html/html.c"
      _escape_html($13, $16, $19); //@line 391 "html/html.c"
      $1=1; //@line 392 "html/html.c"
      __label__ = 16; break; //@line 392 "html/html.c"
    case 4: 
      var $21=$options; //@line 395 "html/html.c"
      var $22=(($21+12)|0); //@line 395 "html/html.c"
      var $23=HEAP32[(($22)>>2)]; //@line 395 "html/html.c"
      var $24=$23 & 1; //@line 395 "html/html.c"
      var $25=(($24)|0)!=0; //@line 395 "html/html.c"
      if ($25) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 395 "html/html.c"
    case 5: 
      $1=1; //@line 396 "html/html.c"
      __label__ = 16; break; //@line 396 "html/html.c"
    case 6: 
      var $28=$options; //@line 398 "html/html.c"
      var $29=(($28+12)|0); //@line 398 "html/html.c"
      var $30=HEAP32[(($29)>>2)]; //@line 398 "html/html.c"
      var $31=$30 & 2; //@line 398 "html/html.c"
      var $32=(($31)|0)!=0; //@line 398 "html/html.c"
      if ($32) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 398 "html/html.c"
    case 7: 
      var $34=$3; //@line 399 "html/html.c"
      var $35=(($34)|0); //@line 399 "html/html.c"
      var $36=HEAP32[(($35)>>2)]; //@line 399 "html/html.c"
      var $37=$3; //@line 399 "html/html.c"
      var $38=(($37+4)|0); //@line 399 "html/html.c"
      var $39=HEAP32[(($38)>>2)]; //@line 399 "html/html.c"
      var $40=_sdhtml_is_tag($36, $39, ((STRING_TABLE.__str57)|0)); //@line 399 "html/html.c"
      var $41=(($40)|0)!=0; //@line 399 "html/html.c"
      if ($41) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 399 "html/html.c"
    case 8: 
      $1=1; //@line 400 "html/html.c"
      __label__ = 16; break; //@line 400 "html/html.c"
    case 9: 
      var $44=$options; //@line 402 "html/html.c"
      var $45=(($44+12)|0); //@line 402 "html/html.c"
      var $46=HEAP32[(($45)>>2)]; //@line 402 "html/html.c"
      var $47=$46 & 8; //@line 402 "html/html.c"
      var $48=(($47)|0)!=0; //@line 402 "html/html.c"
      if ($48) { __label__ = 10; break; } else { __label__ = 12; break; } //@line 402 "html/html.c"
    case 10: 
      var $50=$3; //@line 403 "html/html.c"
      var $51=(($50)|0); //@line 403 "html/html.c"
      var $52=HEAP32[(($51)>>2)]; //@line 403 "html/html.c"
      var $53=$3; //@line 403 "html/html.c"
      var $54=(($53+4)|0); //@line 403 "html/html.c"
      var $55=HEAP32[(($54)>>2)]; //@line 403 "html/html.c"
      var $56=_sdhtml_is_tag($52, $55, ((STRING_TABLE.__str158)|0)); //@line 403 "html/html.c"
      var $57=(($56)|0)!=0; //@line 403 "html/html.c"
      if ($57) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 403 "html/html.c"
    case 11: 
      $1=1; //@line 404 "html/html.c"
      __label__ = 16; break; //@line 404 "html/html.c"
    case 12: 
      var $60=$options; //@line 406 "html/html.c"
      var $61=(($60+12)|0); //@line 406 "html/html.c"
      var $62=HEAP32[(($61)>>2)]; //@line 406 "html/html.c"
      var $63=$62 & 4; //@line 406 "html/html.c"
      var $64=(($63)|0)!=0; //@line 406 "html/html.c"
      if ($64) { __label__ = 13; break; } else { __label__ = 15; break; } //@line 406 "html/html.c"
    case 13: 
      var $66=$3; //@line 407 "html/html.c"
      var $67=(($66)|0); //@line 407 "html/html.c"
      var $68=HEAP32[(($67)>>2)]; //@line 407 "html/html.c"
      var $69=$3; //@line 407 "html/html.c"
      var $70=(($69+4)|0); //@line 407 "html/html.c"
      var $71=HEAP32[(($70)>>2)]; //@line 407 "html/html.c"
      var $72=_sdhtml_is_tag($68, $71, ((STRING_TABLE.__str259)|0)); //@line 407 "html/html.c"
      var $73=(($72)|0)!=0; //@line 407 "html/html.c"
      if ($73) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 407 "html/html.c"
    case 14: 
      $1=1; //@line 408 "html/html.c"
      __label__ = 16; break; //@line 408 "html/html.c"
    case 15: 
      var $76=$2; //@line 410 "html/html.c"
      var $77=$3; //@line 410 "html/html.c"
      var $78=(($77)|0); //@line 410 "html/html.c"
      var $79=HEAP32[(($78)>>2)]; //@line 410 "html/html.c"
      var $80=$3; //@line 410 "html/html.c"
      var $81=(($80+4)|0); //@line 410 "html/html.c"
      var $82=HEAP32[(($81)>>2)]; //@line 410 "html/html.c"
      _bufput($76, $79, $82); //@line 410 "html/html.c"
      $1=1; //@line 411 "html/html.c"
      __label__ = 16; break; //@line 411 "html/html.c"
    case 16: 
      var $84=$1; //@line 412 "html/html.c"
      ;
      return $84; //@line 412 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_rndr_raw_html["X"]=1;

function _rndr_normal_text($ob, $text, $opaque) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$ob;
      $2=$text;
      $3=$opaque;
      var $4=$2; //@line 485 "html/html.c"
      var $5=(($4)|0)!=0; //@line 485 "html/html.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 485 "html/html.c"
    case 3: 
      var $7=$1; //@line 486 "html/html.c"
      var $8=$2; //@line 486 "html/html.c"
      var $9=(($8)|0); //@line 486 "html/html.c"
      var $10=HEAP32[(($9)>>2)]; //@line 486 "html/html.c"
      var $11=$2; //@line 486 "html/html.c"
      var $12=(($11+4)|0); //@line 486 "html/html.c"
      var $13=HEAP32[(($12)>>2)]; //@line 486 "html/html.c"
      _escape_html($7, $10, $13); //@line 486 "html/html.c"
      __label__ = 4; break; //@line 486 "html/html.c"
    case 4: 
      ;
      return; //@line 487 "html/html.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _escape_html($ob, $source, $length) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$ob;
  $2=$source;
  $3=$length;
  var $4=$1; //@line 65 "html/html.c"
  var $5=$2; //@line 65 "html/html.c"
  var $6=$3; //@line 65 "html/html.c"
  _houdini_escape_html0($4, $5, $6, 0); //@line 65 "html/html.c"
  ;
  return; //@line 66 "html/html.c"
}


function _escape_href($ob, $source, $length) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$ob;
  $2=$source;
  $3=$length;
  var $4=$1; //@line 70 "html/html.c"
  var $5=$2; //@line 70 "html/html.c"
  var $6=$3; //@line 70 "html/html.c"
  _houdini_escape_href($4, $5, $6); //@line 70 "html/html.c"
  ;
  return; //@line 71 "html/html.c"
}


function _sdhtml_smartypants($ob, $text, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 8; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $smrt=__stackBase__;
      var $org;
      var $action;
      $1=$ob;
      $2=$text;
      $3=$size;
      var $4=$smrt; //@line 364 "html/html_smartypants.c"
      HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; //@line 364 "html/html_smartypants.c"
      var $5=$2; //@line 366 "html/html_smartypants.c"
      var $6=(($5)|0)!=0; //@line 366 "html/html_smartypants.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 366 "html/html_smartypants.c"
    case 3: 
      __label__ = 20; break; //@line 367 "html/html_smartypants.c"
    case 4: 
      var $9=$1; //@line 369 "html/html_smartypants.c"
      var $10=$3; //@line 369 "html/html_smartypants.c"
      var $11=_bufgrow($9, $10); //@line 369 "html/html_smartypants.c"
      $i=0; //@line 371 "html/html_smartypants.c"
      __label__ = 5; break; //@line 371 "html/html_smartypants.c"
    case 5: 
      var $13=$i; //@line 371 "html/html_smartypants.c"
      var $14=$3; //@line 371 "html/html_smartypants.c"
      var $15=(($13)>>>0) < (($14)>>>0); //@line 371 "html/html_smartypants.c"
      if ($15) { __label__ = 6; break; } else { __label__ = 20; break; } //@line 371 "html/html_smartypants.c"
    case 6: 
      $action=0; //@line 373 "html/html_smartypants.c"
      var $17=$i; //@line 375 "html/html_smartypants.c"
      $org=$17; //@line 375 "html/html_smartypants.c"
      __label__ = 7; break; //@line 376 "html/html_smartypants.c"
    case 7: 
      var $19=$i; //@line 376 "html/html_smartypants.c"
      var $20=$3; //@line 376 "html/html_smartypants.c"
      var $21=(($19)>>>0) < (($20)>>>0); //@line 376 "html/html_smartypants.c"
      if ($21) { __label__ = 8; break; } else { var $33 = 0;__label__ = 9; break; } //@line 376 "html/html_smartypants.c"
    case 8: 
      var $23=$i; //@line 376 "html/html_smartypants.c"
      var $24=$2; //@line 376 "html/html_smartypants.c"
      var $25=(($24+$23)|0); //@line 376 "html/html_smartypants.c"
      var $26=HEAPU8[($25)]; //@line 376 "html/html_smartypants.c"
      var $27=(($26)&255); //@line 376 "html/html_smartypants.c"
      var $28=((STRING_TABLE._smartypants_cb_chars+$27)|0); //@line 376 "html/html_smartypants.c"
      var $29=HEAPU8[($28)]; //@line 376 "html/html_smartypants.c"
      $action=$29; //@line 376 "html/html_smartypants.c"
      var $30=(($29)&255); //@line 376 "html/html_smartypants.c"
      var $31=(($30)|0)==0; //@line 376 "html/html_smartypants.c"
      var $33 = $31;__label__ = 9; break;
    case 9: 
      var $33;
      if ($33) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $35=$i; //@line 377 "html/html_smartypants.c"
      var $36=((($35)+(1))|0); //@line 377 "html/html_smartypants.c"
      $i=$36; //@line 377 "html/html_smartypants.c"
      __label__ = 7; break; //@line 377 "html/html_smartypants.c"
    case 11: 
      var $38=$i; //@line 379 "html/html_smartypants.c"
      var $39=$org; //@line 379 "html/html_smartypants.c"
      var $40=(($38)>>>0) > (($39)>>>0); //@line 379 "html/html_smartypants.c"
      if ($40) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 379 "html/html_smartypants.c"
    case 12: 
      var $42=$1; //@line 380 "html/html_smartypants.c"
      var $43=$2; //@line 380 "html/html_smartypants.c"
      var $44=$org; //@line 380 "html/html_smartypants.c"
      var $45=(($43+$44)|0); //@line 380 "html/html_smartypants.c"
      var $46=$i; //@line 380 "html/html_smartypants.c"
      var $47=$org; //@line 380 "html/html_smartypants.c"
      var $48=((($46)-($47))|0); //@line 380 "html/html_smartypants.c"
      _bufput($42, $45, $48); //@line 380 "html/html_smartypants.c"
      __label__ = 13; break; //@line 380 "html/html_smartypants.c"
    case 13: 
      var $50=$i; //@line 382 "html/html_smartypants.c"
      var $51=$3; //@line 382 "html/html_smartypants.c"
      var $52=(($50)>>>0) < (($51)>>>0); //@line 382 "html/html_smartypants.c"
      if ($52) { __label__ = 14; break; } else { __label__ = 18; break; } //@line 382 "html/html_smartypants.c"
    case 14: 
      var $54=$action; //@line 383 "html/html_smartypants.c"
      var $55=(($54)&255); //@line 383 "html/html_smartypants.c"
      var $56=((_smartypants_cb_ptrs+($55<<2))|0); //@line 383 "html/html_smartypants.c"
      var $57=HEAP32[(($56)>>2)]; //@line 383 "html/html_smartypants.c"
      var $58=$1; //@line 383 "html/html_smartypants.c"
      var $59=$i; //@line 383 "html/html_smartypants.c"
      var $60=(($59)|0)!=0; //@line 383 "html/html_smartypants.c"
      if ($60) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 383 "html/html_smartypants.c"
    case 15: 
      var $62=$i; //@line 383 "html/html_smartypants.c"
      var $63=((($62)-(1))|0); //@line 383 "html/html_smartypants.c"
      var $64=$2; //@line 383 "html/html_smartypants.c"
      var $65=(($64+$63)|0); //@line 383 "html/html_smartypants.c"
      var $66=HEAPU8[($65)]; //@line 383 "html/html_smartypants.c"
      var $67=(($66)&255); //@line 383 "html/html_smartypants.c"
      var $70 = $67;__label__ = 17; break; //@line 383 "html/html_smartypants.c"
    case 16: 
      var $70 = 0;__label__ = 17; break; //@line 383 "html/html_smartypants.c"
    case 17: 
      var $70; //@line 383 "html/html_smartypants.c"
      var $71=(($70) & 255); //@line 383 "html/html_smartypants.c"
      var $72=$2; //@line 383 "html/html_smartypants.c"
      var $73=$i; //@line 383 "html/html_smartypants.c"
      var $74=(($72+$73)|0); //@line 383 "html/html_smartypants.c"
      var $75=$3; //@line 383 "html/html_smartypants.c"
      var $76=$i; //@line 383 "html/html_smartypants.c"
      var $77=((($75)-($76))|0); //@line 383 "html/html_smartypants.c"
      var $78=FUNCTION_TABLE[$57]($58, $smrt, $71, $74, $77); //@line 383 "html/html_smartypants.c"
      var $79=$i; //@line 383 "html/html_smartypants.c"
      var $80=((($79)+($78))|0); //@line 383 "html/html_smartypants.c"
      $i=$80; //@line 383 "html/html_smartypants.c"
      __label__ = 18; break; //@line 385 "html/html_smartypants.c"
    case 18: 
      __label__ = 19; break; //@line 386 "html/html_smartypants.c"
    case 19: 
      var $83=$i; //@line 371 "html/html_smartypants.c"
      var $84=((($83)+(1))|0); //@line 371 "html/html_smartypants.c"
      $i=$84; //@line 371 "html/html_smartypants.c"
      __label__ = 5; break; //@line 371 "html/html_smartypants.c"
    case 20: 
      STACKTOP = __stackBase__;
      return; //@line 387 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sdhtml_smartypants["X"]=1;

function _smartypants_cb__dash($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 170 "html/html_smartypants.c"
      var $8=(($7)>>>0) >= 3; //@line 170 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 170 "html/html_smartypants.c"
    case 3: 
      var $10=$5; //@line 170 "html/html_smartypants.c"
      var $11=(($10+1)|0); //@line 170 "html/html_smartypants.c"
      var $12=HEAPU8[($11)]; //@line 170 "html/html_smartypants.c"
      var $13=(($12)&255); //@line 170 "html/html_smartypants.c"
      var $14=(($13)|0)==45; //@line 170 "html/html_smartypants.c"
      if ($14) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 170 "html/html_smartypants.c"
    case 4: 
      var $16=$5; //@line 170 "html/html_smartypants.c"
      var $17=(($16+2)|0); //@line 170 "html/html_smartypants.c"
      var $18=HEAPU8[($17)]; //@line 170 "html/html_smartypants.c"
      var $19=(($18)&255); //@line 170 "html/html_smartypants.c"
      var $20=(($19)|0)==45; //@line 170 "html/html_smartypants.c"
      if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 170 "html/html_smartypants.c"
    case 5: 
      var $22=$2; //@line 171 "html/html_smartypants.c"
      _bufput($22, ((STRING_TABLE.__str19110)|0), 7); //@line 171 "html/html_smartypants.c"
      $1=2; //@line 172 "html/html_smartypants.c"
      __label__ = 10; break; //@line 172 "html/html_smartypants.c"
    case 6: 
      var $24=$6; //@line 175 "html/html_smartypants.c"
      var $25=(($24)>>>0) >= 2; //@line 175 "html/html_smartypants.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 175 "html/html_smartypants.c"
    case 7: 
      var $27=$5; //@line 175 "html/html_smartypants.c"
      var $28=(($27+1)|0); //@line 175 "html/html_smartypants.c"
      var $29=HEAPU8[($28)]; //@line 175 "html/html_smartypants.c"
      var $30=(($29)&255); //@line 175 "html/html_smartypants.c"
      var $31=(($30)|0)==45; //@line 175 "html/html_smartypants.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 175 "html/html_smartypants.c"
    case 8: 
      var $33=$2; //@line 176 "html/html_smartypants.c"
      _bufput($33, ((STRING_TABLE.__str20111)|0), 7); //@line 176 "html/html_smartypants.c"
      $1=1; //@line 177 "html/html_smartypants.c"
      __label__ = 10; break; //@line 177 "html/html_smartypants.c"
    case 9: 
      var $35=$2; //@line 180 "html/html_smartypants.c"
      var $36=$5; //@line 180 "html/html_smartypants.c"
      var $37=(($36)|0); //@line 180 "html/html_smartypants.c"
      var $38=HEAPU8[($37)]; //@line 180 "html/html_smartypants.c"
      var $39=(($38)&255); //@line 180 "html/html_smartypants.c"
      _bufputc($35, $39); //@line 180 "html/html_smartypants.c"
      $1=0; //@line 181 "html/html_smartypants.c"
      __label__ = 10; break; //@line 181 "html/html_smartypants.c"
    case 10: 
      var $41=$1; //@line 182 "html/html_smartypants.c"
      ;
      return $41; //@line 182 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__dash["X"]=1;

function _smartypants_cb__parens($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $t1;
      var $t2;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 143 "html/html_smartypants.c"
      var $8=(($7)>>>0) >= 3; //@line 143 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 15; break; } //@line 143 "html/html_smartypants.c"
    case 3: 
      var $10=$5; //@line 144 "html/html_smartypants.c"
      var $11=(($10+1)|0); //@line 144 "html/html_smartypants.c"
      var $12=HEAPU8[($11)]; //@line 144 "html/html_smartypants.c"
      var $13=(($12)&255); //@line 144 "html/html_smartypants.c"
      var $14=_tolower($13); //@line 144 "html/html_smartypants.c"
      var $15=(($14) & 255); //@line 144 "html/html_smartypants.c"
      $t1=$15; //@line 144 "html/html_smartypants.c"
      var $16=$5; //@line 145 "html/html_smartypants.c"
      var $17=(($16+2)|0); //@line 145 "html/html_smartypants.c"
      var $18=HEAPU8[($17)]; //@line 145 "html/html_smartypants.c"
      var $19=(($18)&255); //@line 145 "html/html_smartypants.c"
      var $20=_tolower($19); //@line 145 "html/html_smartypants.c"
      var $21=(($20) & 255); //@line 145 "html/html_smartypants.c"
      $t2=$21; //@line 145 "html/html_smartypants.c"
      var $22=$t1; //@line 147 "html/html_smartypants.c"
      var $23=(($22)&255); //@line 147 "html/html_smartypants.c"
      var $24=(($23)|0)==99; //@line 147 "html/html_smartypants.c"
      if ($24) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 147 "html/html_smartypants.c"
    case 4: 
      var $26=$t2; //@line 147 "html/html_smartypants.c"
      var $27=(($26)&255); //@line 147 "html/html_smartypants.c"
      var $28=(($27)|0)==41; //@line 147 "html/html_smartypants.c"
      if ($28) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 147 "html/html_smartypants.c"
    case 5: 
      var $30=$2; //@line 148 "html/html_smartypants.c"
      _bufput($30, ((STRING_TABLE.__str16107)|0), 6); //@line 148 "html/html_smartypants.c"
      $1=2; //@line 149 "html/html_smartypants.c"
      __label__ = 16; break; //@line 149 "html/html_smartypants.c"
    case 6: 
      var $32=$t1; //@line 152 "html/html_smartypants.c"
      var $33=(($32)&255); //@line 152 "html/html_smartypants.c"
      var $34=(($33)|0)==114; //@line 152 "html/html_smartypants.c"
      if ($34) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 152 "html/html_smartypants.c"
    case 7: 
      var $36=$t2; //@line 152 "html/html_smartypants.c"
      var $37=(($36)&255); //@line 152 "html/html_smartypants.c"
      var $38=(($37)|0)==41; //@line 152 "html/html_smartypants.c"
      if ($38) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 152 "html/html_smartypants.c"
    case 8: 
      var $40=$2; //@line 153 "html/html_smartypants.c"
      _bufput($40, ((STRING_TABLE.__str17108)|0), 5); //@line 153 "html/html_smartypants.c"
      $1=2; //@line 154 "html/html_smartypants.c"
      __label__ = 16; break; //@line 154 "html/html_smartypants.c"
    case 9: 
      var $42=$6; //@line 157 "html/html_smartypants.c"
      var $43=(($42)>>>0) >= 4; //@line 157 "html/html_smartypants.c"
      if ($43) { __label__ = 10; break; } else { __label__ = 14; break; } //@line 157 "html/html_smartypants.c"
    case 10: 
      var $45=$t1; //@line 157 "html/html_smartypants.c"
      var $46=(($45)&255); //@line 157 "html/html_smartypants.c"
      var $47=(($46)|0)==116; //@line 157 "html/html_smartypants.c"
      if ($47) { __label__ = 11; break; } else { __label__ = 14; break; } //@line 157 "html/html_smartypants.c"
    case 11: 
      var $49=$t2; //@line 157 "html/html_smartypants.c"
      var $50=(($49)&255); //@line 157 "html/html_smartypants.c"
      var $51=(($50)|0)==109; //@line 157 "html/html_smartypants.c"
      if ($51) { __label__ = 12; break; } else { __label__ = 14; break; } //@line 157 "html/html_smartypants.c"
    case 12: 
      var $53=$5; //@line 157 "html/html_smartypants.c"
      var $54=(($53+3)|0); //@line 157 "html/html_smartypants.c"
      var $55=HEAPU8[($54)]; //@line 157 "html/html_smartypants.c"
      var $56=(($55)&255); //@line 157 "html/html_smartypants.c"
      var $57=(($56)|0)==41; //@line 157 "html/html_smartypants.c"
      if ($57) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 157 "html/html_smartypants.c"
    case 13: 
      var $59=$2; //@line 158 "html/html_smartypants.c"
      _bufput($59, ((STRING_TABLE.__str18109)|0), 7); //@line 158 "html/html_smartypants.c"
      $1=3; //@line 159 "html/html_smartypants.c"
      __label__ = 16; break; //@line 159 "html/html_smartypants.c"
    case 14: 
      __label__ = 15; break; //@line 161 "html/html_smartypants.c"
    case 15: 
      var $62=$2; //@line 163 "html/html_smartypants.c"
      var $63=$5; //@line 163 "html/html_smartypants.c"
      var $64=(($63)|0); //@line 163 "html/html_smartypants.c"
      var $65=HEAPU8[($64)]; //@line 163 "html/html_smartypants.c"
      var $66=(($65)&255); //@line 163 "html/html_smartypants.c"
      _bufputc($62, $66); //@line 163 "html/html_smartypants.c"
      $1=0; //@line 164 "html/html_smartypants.c"
      __label__ = 16; break; //@line 164 "html/html_smartypants.c"
    case 16: 
      var $68=$1; //@line 165 "html/html_smartypants.c"
      ;
      return $68; //@line 165 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__parens["X"]=1;

function _smartypants_cb__squote($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $t1;
      var $t2;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 106 "html/html_smartypants.c"
      var $8=(($7)>>>0) >= 2; //@line 106 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 29; break; } //@line 106 "html/html_smartypants.c"
    case 3: 
      var $10=$5; //@line 107 "html/html_smartypants.c"
      var $11=(($10+1)|0); //@line 107 "html/html_smartypants.c"
      var $12=HEAPU8[($11)]; //@line 107 "html/html_smartypants.c"
      var $13=(($12)&255); //@line 107 "html/html_smartypants.c"
      var $14=_tolower($13); //@line 107 "html/html_smartypants.c"
      var $15=(($14) & 255); //@line 107 "html/html_smartypants.c"
      $t1=$15; //@line 107 "html/html_smartypants.c"
      var $16=$t1; //@line 109 "html/html_smartypants.c"
      var $17=(($16)&255); //@line 109 "html/html_smartypants.c"
      var $18=(($17)|0)==39; //@line 109 "html/html_smartypants.c"
      if ($18) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 109 "html/html_smartypants.c"
    case 4: 
      var $20=$2; //@line 110 "html/html_smartypants.c"
      var $21=$4; //@line 110 "html/html_smartypants.c"
      var $22=$6; //@line 110 "html/html_smartypants.c"
      var $23=(($22)>>>0) >= 3; //@line 110 "html/html_smartypants.c"
      if ($23) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 110 "html/html_smartypants.c"
    case 5: 
      var $25=$5; //@line 110 "html/html_smartypants.c"
      var $26=(($25+2)|0); //@line 110 "html/html_smartypants.c"
      var $27=HEAPU8[($26)]; //@line 110 "html/html_smartypants.c"
      var $28=(($27)&255); //@line 110 "html/html_smartypants.c"
      var $31 = $28;__label__ = 7; break; //@line 110 "html/html_smartypants.c"
    case 6: 
      var $31 = 0;__label__ = 7; break; //@line 110 "html/html_smartypants.c"
    case 7: 
      var $31; //@line 110 "html/html_smartypants.c"
      var $32=(($31) & 255); //@line 110 "html/html_smartypants.c"
      var $33=$3; //@line 110 "html/html_smartypants.c"
      var $34=(($33+4)|0); //@line 110 "html/html_smartypants.c"
      var $35=_smartypants_quotes($20, $21, $32, 100, $34); //@line 110 "html/html_smartypants.c"
      var $36=(($35)|0)!=0; //@line 110 "html/html_smartypants.c"
      if ($36) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 110 "html/html_smartypants.c"
    case 8: 
      $1=1; //@line 111 "html/html_smartypants.c"
      __label__ = 35; break; //@line 111 "html/html_smartypants.c"
    case 9: 
      __label__ = 10; break; //@line 112 "html/html_smartypants.c"
    case 10: 
      var $40=$t1; //@line 114 "html/html_smartypants.c"
      var $41=(($40)&255); //@line 114 "html/html_smartypants.c"
      var $42=(($41)|0)==115; //@line 114 "html/html_smartypants.c"
      if ($42) { __label__ = 14; break; } else { __label__ = 11; break; } //@line 114 "html/html_smartypants.c"
    case 11: 
      var $44=$t1; //@line 114 "html/html_smartypants.c"
      var $45=(($44)&255); //@line 114 "html/html_smartypants.c"
      var $46=(($45)|0)==116; //@line 114 "html/html_smartypants.c"
      if ($46) { __label__ = 14; break; } else { __label__ = 12; break; } //@line 114 "html/html_smartypants.c"
    case 12: 
      var $48=$t1; //@line 114 "html/html_smartypants.c"
      var $49=(($48)&255); //@line 114 "html/html_smartypants.c"
      var $50=(($49)|0)==109; //@line 114 "html/html_smartypants.c"
      if ($50) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 114 "html/html_smartypants.c"
    case 13: 
      var $52=$t1; //@line 114 "html/html_smartypants.c"
      var $53=(($52)&255); //@line 114 "html/html_smartypants.c"
      var $54=(($53)|0)==100; //@line 114 "html/html_smartypants.c"
      if ($54) { __label__ = 14; break; } else { __label__ = 17; break; } //@line 114 "html/html_smartypants.c"
    case 14: 
      var $56=$6; //@line 114 "html/html_smartypants.c"
      var $57=(($56)|0)==3; //@line 114 "html/html_smartypants.c"
      if ($57) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 114 "html/html_smartypants.c"
    case 15: 
      var $59=$5; //@line 115 "html/html_smartypants.c"
      var $60=(($59+2)|0); //@line 115 "html/html_smartypants.c"
      var $61=HEAP8[($60)]; //@line 115 "html/html_smartypants.c"
      var $62=_word_boundary($61); //@line 115 "html/html_smartypants.c"
      var $63=(($62)|0)!=0; //@line 115 "html/html_smartypants.c"
      if ($63) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 115 "html/html_smartypants.c"
    case 16: 
      var $65=$2; //@line 116 "html/html_smartypants.c"
      _bufput($65, ((STRING_TABLE.__str15106)|0), 7); //@line 116 "html/html_smartypants.c"
      $1=0; //@line 117 "html/html_smartypants.c"
      __label__ = 35; break; //@line 117 "html/html_smartypants.c"
    case 17: 
      var $67=$6; //@line 120 "html/html_smartypants.c"
      var $68=(($67)>>>0) >= 3; //@line 120 "html/html_smartypants.c"
      if ($68) { __label__ = 18; break; } else { __label__ = 28; break; } //@line 120 "html/html_smartypants.c"
    case 18: 
      var $70=$5; //@line 121 "html/html_smartypants.c"
      var $71=(($70+2)|0); //@line 121 "html/html_smartypants.c"
      var $72=HEAPU8[($71)]; //@line 121 "html/html_smartypants.c"
      var $73=(($72)&255); //@line 121 "html/html_smartypants.c"
      var $74=_tolower($73); //@line 121 "html/html_smartypants.c"
      var $75=(($74) & 255); //@line 121 "html/html_smartypants.c"
      $t2=$75; //@line 121 "html/html_smartypants.c"
      var $76=$t1; //@line 123 "html/html_smartypants.c"
      var $77=(($76)&255); //@line 123 "html/html_smartypants.c"
      var $78=(($77)|0)==114; //@line 123 "html/html_smartypants.c"
      if ($78) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 123 "html/html_smartypants.c"
    case 19: 
      var $80=$t2; //@line 123 "html/html_smartypants.c"
      var $81=(($80)&255); //@line 123 "html/html_smartypants.c"
      var $82=(($81)|0)==101; //@line 123 "html/html_smartypants.c"
      if ($82) { __label__ = 24; break; } else { __label__ = 20; break; } //@line 123 "html/html_smartypants.c"
    case 20: 
      var $84=$t1; //@line 123 "html/html_smartypants.c"
      var $85=(($84)&255); //@line 123 "html/html_smartypants.c"
      var $86=(($85)|0)==108; //@line 123 "html/html_smartypants.c"
      if ($86) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 123 "html/html_smartypants.c"
    case 21: 
      var $88=$t2; //@line 123 "html/html_smartypants.c"
      var $89=(($88)&255); //@line 123 "html/html_smartypants.c"
      var $90=(($89)|0)==108; //@line 123 "html/html_smartypants.c"
      if ($90) { __label__ = 24; break; } else { __label__ = 22; break; } //@line 123 "html/html_smartypants.c"
    case 22: 
      var $92=$t1; //@line 123 "html/html_smartypants.c"
      var $93=(($92)&255); //@line 123 "html/html_smartypants.c"
      var $94=(($93)|0)==118; //@line 123 "html/html_smartypants.c"
      if ($94) { __label__ = 23; break; } else { __label__ = 27; break; } //@line 123 "html/html_smartypants.c"
    case 23: 
      var $96=$t2; //@line 123 "html/html_smartypants.c"
      var $97=(($96)&255); //@line 123 "html/html_smartypants.c"
      var $98=(($97)|0)==101; //@line 123 "html/html_smartypants.c"
      if ($98) { __label__ = 24; break; } else { __label__ = 27; break; } //@line 123 "html/html_smartypants.c"
    case 24: 
      var $100=$6; //@line 123 "html/html_smartypants.c"
      var $101=(($100)|0)==4; //@line 123 "html/html_smartypants.c"
      if ($101) { __label__ = 26; break; } else { __label__ = 25; break; } //@line 123 "html/html_smartypants.c"
    case 25: 
      var $103=$5; //@line 126 "html/html_smartypants.c"
      var $104=(($103+3)|0); //@line 126 "html/html_smartypants.c"
      var $105=HEAP8[($104)]; //@line 126 "html/html_smartypants.c"
      var $106=_word_boundary($105); //@line 126 "html/html_smartypants.c"
      var $107=(($106)|0)!=0; //@line 126 "html/html_smartypants.c"
      if ($107) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 126 "html/html_smartypants.c"
    case 26: 
      var $109=$2; //@line 127 "html/html_smartypants.c"
      _bufput($109, ((STRING_TABLE.__str15106)|0), 7); //@line 127 "html/html_smartypants.c"
      $1=0; //@line 128 "html/html_smartypants.c"
      __label__ = 35; break; //@line 128 "html/html_smartypants.c"
    case 27: 
      __label__ = 28; break; //@line 130 "html/html_smartypants.c"
    case 28: 
      __label__ = 29; break; //@line 131 "html/html_smartypants.c"
    case 29: 
      var $113=$2; //@line 133 "html/html_smartypants.c"
      var $114=$4; //@line 133 "html/html_smartypants.c"
      var $115=$6; //@line 133 "html/html_smartypants.c"
      var $116=(($115)>>>0) > 0; //@line 133 "html/html_smartypants.c"
      if ($116) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 133 "html/html_smartypants.c"
    case 30: 
      var $118=$5; //@line 133 "html/html_smartypants.c"
      var $119=(($118+1)|0); //@line 133 "html/html_smartypants.c"
      var $120=HEAPU8[($119)]; //@line 133 "html/html_smartypants.c"
      var $121=(($120)&255); //@line 133 "html/html_smartypants.c"
      var $124 = $121;__label__ = 32; break; //@line 133 "html/html_smartypants.c"
    case 31: 
      var $124 = 0;__label__ = 32; break; //@line 133 "html/html_smartypants.c"
    case 32: 
      var $124; //@line 133 "html/html_smartypants.c"
      var $125=(($124) & 255); //@line 133 "html/html_smartypants.c"
      var $126=$3; //@line 133 "html/html_smartypants.c"
      var $127=(($126)|0); //@line 133 "html/html_smartypants.c"
      var $128=_smartypants_quotes($113, $114, $125, 115, $127); //@line 133 "html/html_smartypants.c"
      var $129=(($128)|0)!=0; //@line 133 "html/html_smartypants.c"
      if ($129) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 133 "html/html_smartypants.c"
    case 33: 
      $1=0; //@line 134 "html/html_smartypants.c"
      __label__ = 35; break; //@line 134 "html/html_smartypants.c"
    case 34: 
      var $132=$2; //@line 136 "html/html_smartypants.c"
      var $133=$5; //@line 136 "html/html_smartypants.c"
      var $134=(($133)|0); //@line 136 "html/html_smartypants.c"
      var $135=HEAPU8[($134)]; //@line 136 "html/html_smartypants.c"
      var $136=(($135)&255); //@line 136 "html/html_smartypants.c"
      _bufputc($132, $136); //@line 136 "html/html_smartypants.c"
      $1=0; //@line 137 "html/html_smartypants.c"
      __label__ = 35; break; //@line 137 "html/html_smartypants.c"
    case 35: 
      var $138=$1; //@line 138 "html/html_smartypants.c"
      ;
      return $138; //@line 138 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__squote["X"]=1;

function _smartypants_cb__dquote($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      $1=$ob;
      $2=$smrt;
      $3=$previous_char;
      $4=$text;
      $5=$size;
      var $6=$1; //@line 262 "html/html_smartypants.c"
      var $7=$3; //@line 262 "html/html_smartypants.c"
      var $8=$5; //@line 262 "html/html_smartypants.c"
      var $9=(($8)>>>0) > 0; //@line 262 "html/html_smartypants.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 262 "html/html_smartypants.c"
    case 3: 
      var $11=$4; //@line 262 "html/html_smartypants.c"
      var $12=(($11+1)|0); //@line 262 "html/html_smartypants.c"
      var $13=HEAPU8[($12)]; //@line 262 "html/html_smartypants.c"
      var $14=(($13)&255); //@line 262 "html/html_smartypants.c"
      var $17 = $14;__label__ = 5; break; //@line 262 "html/html_smartypants.c"
    case 4: 
      var $17 = 0;__label__ = 5; break; //@line 262 "html/html_smartypants.c"
    case 5: 
      var $17; //@line 262 "html/html_smartypants.c"
      var $18=(($17) & 255); //@line 262 "html/html_smartypants.c"
      var $19=$2; //@line 262 "html/html_smartypants.c"
      var $20=(($19+4)|0); //@line 262 "html/html_smartypants.c"
      var $21=_smartypants_quotes($6, $7, $18, 100, $20); //@line 262 "html/html_smartypants.c"
      var $22=(($21)|0)!=0; //@line 262 "html/html_smartypants.c"
      if ($22) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 262 "html/html_smartypants.c"
    case 6: 
      var $24=$1; //@line 263 "html/html_smartypants.c"
      _bufput($24, ((STRING_TABLE.__str13104)|0), 6); //@line 263 "html/html_smartypants.c"
      __label__ = 7; break; //@line 263 "html/html_smartypants.c"
    case 7: 
      ;
      return 0; //@line 265 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _smartypants_cb__amp($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 187 "html/html_smartypants.c"
      var $8=(($7)>>>0) >= 6; //@line 187 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 10; break; } //@line 187 "html/html_smartypants.c"
    case 3: 
      var $10=$5; //@line 187 "html/html_smartypants.c"
      var $11=_memcmp($10, ((STRING_TABLE.__str13104)|0), 6); //@line 187 "html/html_smartypants.c"
      var $12=(($11)|0)==0; //@line 187 "html/html_smartypants.c"
      if ($12) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 187 "html/html_smartypants.c"
    case 4: 
      var $14=$2; //@line 188 "html/html_smartypants.c"
      var $15=$4; //@line 188 "html/html_smartypants.c"
      var $16=$6; //@line 188 "html/html_smartypants.c"
      var $17=(($16)>>>0) >= 7; //@line 188 "html/html_smartypants.c"
      if ($17) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 188 "html/html_smartypants.c"
    case 5: 
      var $19=$5; //@line 188 "html/html_smartypants.c"
      var $20=(($19+6)|0); //@line 188 "html/html_smartypants.c"
      var $21=HEAPU8[($20)]; //@line 188 "html/html_smartypants.c"
      var $22=(($21)&255); //@line 188 "html/html_smartypants.c"
      var $25 = $22;__label__ = 7; break; //@line 188 "html/html_smartypants.c"
    case 6: 
      var $25 = 0;__label__ = 7; break; //@line 188 "html/html_smartypants.c"
    case 7: 
      var $25; //@line 188 "html/html_smartypants.c"
      var $26=(($25) & 255); //@line 188 "html/html_smartypants.c"
      var $27=$3; //@line 188 "html/html_smartypants.c"
      var $28=(($27+4)|0); //@line 188 "html/html_smartypants.c"
      var $29=_smartypants_quotes($14, $15, $26, 100, $28); //@line 188 "html/html_smartypants.c"
      var $30=(($29)|0)!=0; //@line 188 "html/html_smartypants.c"
      if ($30) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 188 "html/html_smartypants.c"
    case 8: 
      $1=5; //@line 189 "html/html_smartypants.c"
      __label__ = 14; break; //@line 189 "html/html_smartypants.c"
    case 9: 
      __label__ = 10; break; //@line 190 "html/html_smartypants.c"
    case 10: 
      var $34=$6; //@line 192 "html/html_smartypants.c"
      var $35=(($34)>>>0) >= 4; //@line 192 "html/html_smartypants.c"
      if ($35) { __label__ = 11; break; } else { __label__ = 13; break; } //@line 192 "html/html_smartypants.c"
    case 11: 
      var $37=$5; //@line 192 "html/html_smartypants.c"
      var $38=_memcmp($37, ((STRING_TABLE.__str14105)|0), 4); //@line 192 "html/html_smartypants.c"
      var $39=(($38)|0)==0; //@line 192 "html/html_smartypants.c"
      if ($39) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 192 "html/html_smartypants.c"
    case 12: 
      $1=3; //@line 193 "html/html_smartypants.c"
      __label__ = 14; break; //@line 193 "html/html_smartypants.c"
    case 13: 
      var $42=$2; //@line 195 "html/html_smartypants.c"
      _bufputc($42, 38); //@line 195 "html/html_smartypants.c"
      $1=0; //@line 196 "html/html_smartypants.c"
      __label__ = 14; break; //@line 196 "html/html_smartypants.c"
    case 14: 
      var $44=$1; //@line 197 "html/html_smartypants.c"
      ;
      return $44; //@line 197 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__amp["X"]=1;

function _smartypants_cb__period($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 202 "html/html_smartypants.c"
      var $8=(($7)>>>0) >= 3; //@line 202 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 202 "html/html_smartypants.c"
    case 3: 
      var $10=$5; //@line 202 "html/html_smartypants.c"
      var $11=(($10+1)|0); //@line 202 "html/html_smartypants.c"
      var $12=HEAPU8[($11)]; //@line 202 "html/html_smartypants.c"
      var $13=(($12)&255); //@line 202 "html/html_smartypants.c"
      var $14=(($13)|0)==46; //@line 202 "html/html_smartypants.c"
      if ($14) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 202 "html/html_smartypants.c"
    case 4: 
      var $16=$5; //@line 202 "html/html_smartypants.c"
      var $17=(($16+2)|0); //@line 202 "html/html_smartypants.c"
      var $18=HEAPU8[($17)]; //@line 202 "html/html_smartypants.c"
      var $19=(($18)&255); //@line 202 "html/html_smartypants.c"
      var $20=(($19)|0)==46; //@line 202 "html/html_smartypants.c"
      if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 202 "html/html_smartypants.c"
    case 5: 
      var $22=$2; //@line 203 "html/html_smartypants.c"
      _bufput($22, ((STRING_TABLE.__str12103)|0), 8); //@line 203 "html/html_smartypants.c"
      $1=2; //@line 204 "html/html_smartypants.c"
      __label__ = 13; break; //@line 204 "html/html_smartypants.c"
    case 6: 
      var $24=$6; //@line 207 "html/html_smartypants.c"
      var $25=(($24)>>>0) >= 5; //@line 207 "html/html_smartypants.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 12; break; } //@line 207 "html/html_smartypants.c"
    case 7: 
      var $27=$5; //@line 207 "html/html_smartypants.c"
      var $28=(($27+1)|0); //@line 207 "html/html_smartypants.c"
      var $29=HEAPU8[($28)]; //@line 207 "html/html_smartypants.c"
      var $30=(($29)&255); //@line 207 "html/html_smartypants.c"
      var $31=(($30)|0)==32; //@line 207 "html/html_smartypants.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 12; break; } //@line 207 "html/html_smartypants.c"
    case 8: 
      var $33=$5; //@line 207 "html/html_smartypants.c"
      var $34=(($33+2)|0); //@line 207 "html/html_smartypants.c"
      var $35=HEAPU8[($34)]; //@line 207 "html/html_smartypants.c"
      var $36=(($35)&255); //@line 207 "html/html_smartypants.c"
      var $37=(($36)|0)==46; //@line 207 "html/html_smartypants.c"
      if ($37) { __label__ = 9; break; } else { __label__ = 12; break; } //@line 207 "html/html_smartypants.c"
    case 9: 
      var $39=$5; //@line 207 "html/html_smartypants.c"
      var $40=(($39+3)|0); //@line 207 "html/html_smartypants.c"
      var $41=HEAPU8[($40)]; //@line 207 "html/html_smartypants.c"
      var $42=(($41)&255); //@line 207 "html/html_smartypants.c"
      var $43=(($42)|0)==32; //@line 207 "html/html_smartypants.c"
      if ($43) { __label__ = 10; break; } else { __label__ = 12; break; } //@line 207 "html/html_smartypants.c"
    case 10: 
      var $45=$5; //@line 207 "html/html_smartypants.c"
      var $46=(($45+4)|0); //@line 207 "html/html_smartypants.c"
      var $47=HEAPU8[($46)]; //@line 207 "html/html_smartypants.c"
      var $48=(($47)&255); //@line 207 "html/html_smartypants.c"
      var $49=(($48)|0)==46; //@line 207 "html/html_smartypants.c"
      if ($49) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 207 "html/html_smartypants.c"
    case 11: 
      var $51=$2; //@line 208 "html/html_smartypants.c"
      _bufput($51, ((STRING_TABLE.__str12103)|0), 8); //@line 208 "html/html_smartypants.c"
      $1=4; //@line 209 "html/html_smartypants.c"
      __label__ = 13; break; //@line 209 "html/html_smartypants.c"
    case 12: 
      var $53=$2; //@line 212 "html/html_smartypants.c"
      var $54=$5; //@line 212 "html/html_smartypants.c"
      var $55=(($54)|0); //@line 212 "html/html_smartypants.c"
      var $56=HEAPU8[($55)]; //@line 212 "html/html_smartypants.c"
      var $57=(($56)&255); //@line 212 "html/html_smartypants.c"
      _bufputc($53, $57); //@line 212 "html/html_smartypants.c"
      $1=0; //@line 213 "html/html_smartypants.c"
      __label__ = 13; break; //@line 213 "html/html_smartypants.c"
    case 13: 
      var $59=$1; //@line 214 "html/html_smartypants.c"
      ;
      return $59; //@line 214 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__period["X"]=1;

function _smartypants_cb__number($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$4; //@line 230 "html/html_smartypants.c"
      var $8=_word_boundary($7); //@line 230 "html/html_smartypants.c"
      var $9=(($8)|0)!=0; //@line 230 "html/html_smartypants.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 33; break; } //@line 230 "html/html_smartypants.c"
    case 3: 
      var $11=$6; //@line 230 "html/html_smartypants.c"
      var $12=(($11)>>>0) >= 3; //@line 230 "html/html_smartypants.c"
      if ($12) { __label__ = 4; break; } else { __label__ = 33; break; } //@line 230 "html/html_smartypants.c"
    case 4: 
      var $14=$5; //@line 231 "html/html_smartypants.c"
      var $15=(($14)|0); //@line 231 "html/html_smartypants.c"
      var $16=HEAPU8[($15)]; //@line 231 "html/html_smartypants.c"
      var $17=(($16)&255); //@line 231 "html/html_smartypants.c"
      var $18=(($17)|0)==49; //@line 231 "html/html_smartypants.c"
      if ($18) { __label__ = 5; break; } else { __label__ = 11; break; } //@line 231 "html/html_smartypants.c"
    case 5: 
      var $20=$5; //@line 231 "html/html_smartypants.c"
      var $21=(($20+1)|0); //@line 231 "html/html_smartypants.c"
      var $22=HEAPU8[($21)]; //@line 231 "html/html_smartypants.c"
      var $23=(($22)&255); //@line 231 "html/html_smartypants.c"
      var $24=(($23)|0)==47; //@line 231 "html/html_smartypants.c"
      if ($24) { __label__ = 6; break; } else { __label__ = 11; break; } //@line 231 "html/html_smartypants.c"
    case 6: 
      var $26=$5; //@line 231 "html/html_smartypants.c"
      var $27=(($26+2)|0); //@line 231 "html/html_smartypants.c"
      var $28=HEAPU8[($27)]; //@line 231 "html/html_smartypants.c"
      var $29=(($28)&255); //@line 231 "html/html_smartypants.c"
      var $30=(($29)|0)==50; //@line 231 "html/html_smartypants.c"
      if ($30) { __label__ = 7; break; } else { __label__ = 11; break; } //@line 231 "html/html_smartypants.c"
    case 7: 
      var $32=$6; //@line 232 "html/html_smartypants.c"
      var $33=(($32)|0)==3; //@line 232 "html/html_smartypants.c"
      if ($33) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 232 "html/html_smartypants.c"
    case 8: 
      var $35=$5; //@line 232 "html/html_smartypants.c"
      var $36=(($35+3)|0); //@line 232 "html/html_smartypants.c"
      var $37=HEAP8[($36)]; //@line 232 "html/html_smartypants.c"
      var $38=_word_boundary($37); //@line 232 "html/html_smartypants.c"
      var $39=(($38)|0)!=0; //@line 232 "html/html_smartypants.c"
      if ($39) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 232 "html/html_smartypants.c"
    case 9: 
      var $41=$2; //@line 233 "html/html_smartypants.c"
      _bufput($41, ((STRING_TABLE.__str9100)|0), 8); //@line 233 "html/html_smartypants.c"
      $1=2; //@line 234 "html/html_smartypants.c"
      __label__ = 34; break; //@line 234 "html/html_smartypants.c"
    case 10: 
      __label__ = 11; break; //@line 236 "html/html_smartypants.c"
    case 11: 
      var $44=$5; //@line 238 "html/html_smartypants.c"
      var $45=(($44)|0); //@line 238 "html/html_smartypants.c"
      var $46=HEAPU8[($45)]; //@line 238 "html/html_smartypants.c"
      var $47=(($46)&255); //@line 238 "html/html_smartypants.c"
      var $48=(($47)|0)==49; //@line 238 "html/html_smartypants.c"
      if ($48) { __label__ = 12; break; } else { __label__ = 21; break; } //@line 238 "html/html_smartypants.c"
    case 12: 
      var $50=$5; //@line 238 "html/html_smartypants.c"
      var $51=(($50+1)|0); //@line 238 "html/html_smartypants.c"
      var $52=HEAPU8[($51)]; //@line 238 "html/html_smartypants.c"
      var $53=(($52)&255); //@line 238 "html/html_smartypants.c"
      var $54=(($53)|0)==47; //@line 238 "html/html_smartypants.c"
      if ($54) { __label__ = 13; break; } else { __label__ = 21; break; } //@line 238 "html/html_smartypants.c"
    case 13: 
      var $56=$5; //@line 238 "html/html_smartypants.c"
      var $57=(($56+2)|0); //@line 238 "html/html_smartypants.c"
      var $58=HEAPU8[($57)]; //@line 238 "html/html_smartypants.c"
      var $59=(($58)&255); //@line 238 "html/html_smartypants.c"
      var $60=(($59)|0)==52; //@line 238 "html/html_smartypants.c"
      if ($60) { __label__ = 14; break; } else { __label__ = 21; break; } //@line 238 "html/html_smartypants.c"
    case 14: 
      var $62=$6; //@line 239 "html/html_smartypants.c"
      var $63=(($62)|0)==3; //@line 239 "html/html_smartypants.c"
      if ($63) { __label__ = 19; break; } else { __label__ = 15; break; } //@line 239 "html/html_smartypants.c"
    case 15: 
      var $65=$5; //@line 239 "html/html_smartypants.c"
      var $66=(($65+3)|0); //@line 239 "html/html_smartypants.c"
      var $67=HEAP8[($66)]; //@line 239 "html/html_smartypants.c"
      var $68=_word_boundary($67); //@line 239 "html/html_smartypants.c"
      var $69=(($68)|0)!=0; //@line 239 "html/html_smartypants.c"
      if ($69) { __label__ = 19; break; } else { __label__ = 16; break; } //@line 239 "html/html_smartypants.c"
    case 16: 
      var $71=$6; //@line 239 "html/html_smartypants.c"
      var $72=(($71)>>>0) >= 5; //@line 239 "html/html_smartypants.c"
      if ($72) { __label__ = 17; break; } else { __label__ = 20; break; } //@line 239 "html/html_smartypants.c"
    case 17: 
      var $74=$5; //@line 240 "html/html_smartypants.c"
      var $75=(($74+3)|0); //@line 240 "html/html_smartypants.c"
      var $76=HEAPU8[($75)]; //@line 240 "html/html_smartypants.c"
      var $77=(($76)&255); //@line 240 "html/html_smartypants.c"
      var $78=_tolower($77); //@line 240 "html/html_smartypants.c"
      var $79=(($78)|0)==116; //@line 240 "html/html_smartypants.c"
      if ($79) { __label__ = 18; break; } else { __label__ = 20; break; } //@line 240 "html/html_smartypants.c"
    case 18: 
      var $81=$5; //@line 240 "html/html_smartypants.c"
      var $82=(($81+4)|0); //@line 240 "html/html_smartypants.c"
      var $83=HEAPU8[($82)]; //@line 240 "html/html_smartypants.c"
      var $84=(($83)&255); //@line 240 "html/html_smartypants.c"
      var $85=_tolower($84); //@line 240 "html/html_smartypants.c"
      var $86=(($85)|0)==104; //@line 240 "html/html_smartypants.c"
      if ($86) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 240 "html/html_smartypants.c"
    case 19: 
      var $88=$2; //@line 241 "html/html_smartypants.c"
      _bufput($88, ((STRING_TABLE.__str10101)|0), 8); //@line 241 "html/html_smartypants.c"
      $1=2; //@line 242 "html/html_smartypants.c"
      __label__ = 34; break; //@line 242 "html/html_smartypants.c"
    case 20: 
      __label__ = 21; break; //@line 244 "html/html_smartypants.c"
    case 21: 
      var $91=$5; //@line 246 "html/html_smartypants.c"
      var $92=(($91)|0); //@line 246 "html/html_smartypants.c"
      var $93=HEAPU8[($92)]; //@line 246 "html/html_smartypants.c"
      var $94=(($93)&255); //@line 246 "html/html_smartypants.c"
      var $95=(($94)|0)==51; //@line 246 "html/html_smartypants.c"
      if ($95) { __label__ = 22; break; } else { __label__ = 32; break; } //@line 246 "html/html_smartypants.c"
    case 22: 
      var $97=$5; //@line 246 "html/html_smartypants.c"
      var $98=(($97+1)|0); //@line 246 "html/html_smartypants.c"
      var $99=HEAPU8[($98)]; //@line 246 "html/html_smartypants.c"
      var $100=(($99)&255); //@line 246 "html/html_smartypants.c"
      var $101=(($100)|0)==47; //@line 246 "html/html_smartypants.c"
      if ($101) { __label__ = 23; break; } else { __label__ = 32; break; } //@line 246 "html/html_smartypants.c"
    case 23: 
      var $103=$5; //@line 246 "html/html_smartypants.c"
      var $104=(($103+2)|0); //@line 246 "html/html_smartypants.c"
      var $105=HEAPU8[($104)]; //@line 246 "html/html_smartypants.c"
      var $106=(($105)&255); //@line 246 "html/html_smartypants.c"
      var $107=(($106)|0)==52; //@line 246 "html/html_smartypants.c"
      if ($107) { __label__ = 24; break; } else { __label__ = 32; break; } //@line 246 "html/html_smartypants.c"
    case 24: 
      var $109=$6; //@line 247 "html/html_smartypants.c"
      var $110=(($109)|0)==3; //@line 247 "html/html_smartypants.c"
      if ($110) { __label__ = 30; break; } else { __label__ = 25; break; } //@line 247 "html/html_smartypants.c"
    case 25: 
      var $112=$5; //@line 247 "html/html_smartypants.c"
      var $113=(($112+3)|0); //@line 247 "html/html_smartypants.c"
      var $114=HEAP8[($113)]; //@line 247 "html/html_smartypants.c"
      var $115=_word_boundary($114); //@line 247 "html/html_smartypants.c"
      var $116=(($115)|0)!=0; //@line 247 "html/html_smartypants.c"
      if ($116) { __label__ = 30; break; } else { __label__ = 26; break; } //@line 247 "html/html_smartypants.c"
    case 26: 
      var $118=$6; //@line 247 "html/html_smartypants.c"
      var $119=(($118)>>>0) >= 6; //@line 247 "html/html_smartypants.c"
      if ($119) { __label__ = 27; break; } else { __label__ = 31; break; } //@line 247 "html/html_smartypants.c"
    case 27: 
      var $121=$5; //@line 248 "html/html_smartypants.c"
      var $122=(($121+3)|0); //@line 248 "html/html_smartypants.c"
      var $123=HEAPU8[($122)]; //@line 248 "html/html_smartypants.c"
      var $124=(($123)&255); //@line 248 "html/html_smartypants.c"
      var $125=_tolower($124); //@line 248 "html/html_smartypants.c"
      var $126=(($125)|0)==116; //@line 248 "html/html_smartypants.c"
      if ($126) { __label__ = 28; break; } else { __label__ = 31; break; } //@line 248 "html/html_smartypants.c"
    case 28: 
      var $128=$5; //@line 248 "html/html_smartypants.c"
      var $129=(($128+4)|0); //@line 248 "html/html_smartypants.c"
      var $130=HEAPU8[($129)]; //@line 248 "html/html_smartypants.c"
      var $131=(($130)&255); //@line 248 "html/html_smartypants.c"
      var $132=_tolower($131); //@line 248 "html/html_smartypants.c"
      var $133=(($132)|0)==104; //@line 248 "html/html_smartypants.c"
      if ($133) { __label__ = 29; break; } else { __label__ = 31; break; } //@line 248 "html/html_smartypants.c"
    case 29: 
      var $135=$5; //@line 248 "html/html_smartypants.c"
      var $136=(($135+5)|0); //@line 248 "html/html_smartypants.c"
      var $137=HEAPU8[($136)]; //@line 248 "html/html_smartypants.c"
      var $138=(($137)&255); //@line 248 "html/html_smartypants.c"
      var $139=_tolower($138); //@line 248 "html/html_smartypants.c"
      var $140=(($139)|0)==115; //@line 248 "html/html_smartypants.c"
      if ($140) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 248 "html/html_smartypants.c"
    case 30: 
      var $142=$2; //@line 249 "html/html_smartypants.c"
      _bufput($142, ((STRING_TABLE.__str11102)|0), 8); //@line 249 "html/html_smartypants.c"
      $1=2; //@line 250 "html/html_smartypants.c"
      __label__ = 34; break; //@line 250 "html/html_smartypants.c"
    case 31: 
      __label__ = 32; break; //@line 252 "html/html_smartypants.c"
    case 32: 
      __label__ = 33; break; //@line 253 "html/html_smartypants.c"
    case 33: 
      var $146=$2; //@line 255 "html/html_smartypants.c"
      var $147=$5; //@line 255 "html/html_smartypants.c"
      var $148=(($147)|0); //@line 255 "html/html_smartypants.c"
      var $149=HEAPU8[($148)]; //@line 255 "html/html_smartypants.c"
      var $150=(($149)&255); //@line 255 "html/html_smartypants.c"
      _bufputc($146, $150); //@line 255 "html/html_smartypants.c"
      $1=0; //@line 256 "html/html_smartypants.c"
      __label__ = 34; break; //@line 256 "html/html_smartypants.c"
    case 34: 
      var $152=$1; //@line 257 "html/html_smartypants.c"
      ;
      return $152; //@line 257 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__number["X"]=1;

function _smartypants_cb__ltag($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $tag;
      var $i;
      $1=$ob;
      $2=$smrt;
      $3=$previous_char;
      $4=$text;
      $5=$size;
      $i=0; //@line 276 "html/html_smartypants.c"
      __label__ = 3; break; //@line 278 "html/html_smartypants.c"
    case 3: 
      var $7=$i; //@line 278 "html/html_smartypants.c"
      var $8=$5; //@line 278 "html/html_smartypants.c"
      var $9=(($7)>>>0) < (($8)>>>0); //@line 278 "html/html_smartypants.c"
      if ($9) { __label__ = 4; break; } else { var $18 = 0;__label__ = 5; break; } //@line 278 "html/html_smartypants.c"
    case 4: 
      var $11=$i; //@line 278 "html/html_smartypants.c"
      var $12=$4; //@line 278 "html/html_smartypants.c"
      var $13=(($12+$11)|0); //@line 278 "html/html_smartypants.c"
      var $14=HEAPU8[($13)]; //@line 278 "html/html_smartypants.c"
      var $15=(($14)&255); //@line 278 "html/html_smartypants.c"
      var $16=(($15)|0)!=62; //@line 278 "html/html_smartypants.c"
      var $18 = $16;__label__ = 5; break;
    case 5: 
      var $18;
      if ($18) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $20=$i; //@line 279 "html/html_smartypants.c"
      var $21=((($20)+(1))|0); //@line 279 "html/html_smartypants.c"
      $i=$21; //@line 279 "html/html_smartypants.c"
      __label__ = 3; break; //@line 279 "html/html_smartypants.c"
    case 7: 
      $tag=0; //@line 281 "html/html_smartypants.c"
      __label__ = 8; break; //@line 281 "html/html_smartypants.c"
    case 8: 
      var $24=$tag; //@line 281 "html/html_smartypants.c"
      var $25=(($24)>>>0) < 8; //@line 281 "html/html_smartypants.c"
      if ($25) { __label__ = 9; break; } else { __label__ = 13; break; } //@line 281 "html/html_smartypants.c"
    case 9: 
      var $27=$4; //@line 282 "html/html_smartypants.c"
      var $28=$5; //@line 282 "html/html_smartypants.c"
      var $29=$tag; //@line 282 "html/html_smartypants.c"
      var $30=((_smartypants_cb__ltag_skip_tags+($29<<2))|0); //@line 282 "html/html_smartypants.c"
      var $31=HEAP32[(($30)>>2)]; //@line 282 "html/html_smartypants.c"
      var $32=_sdhtml_is_tag($27, $28, $31); //@line 282 "html/html_smartypants.c"
      var $33=(($32)|0)==1; //@line 282 "html/html_smartypants.c"
      if ($33) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 282 "html/html_smartypants.c"
    case 10: 
      __label__ = 13; break; //@line 283 "html/html_smartypants.c"
    case 11: 
      __label__ = 12; break; //@line 284 "html/html_smartypants.c"
    case 12: 
      var $37=$tag; //@line 281 "html/html_smartypants.c"
      var $38=((($37)+(1))|0); //@line 281 "html/html_smartypants.c"
      $tag=$38; //@line 281 "html/html_smartypants.c"
      __label__ = 8; break; //@line 281 "html/html_smartypants.c"
    case 13: 
      var $40=$tag; //@line 286 "html/html_smartypants.c"
      var $41=(($40)>>>0) < 8; //@line 286 "html/html_smartypants.c"
      if ($41) { __label__ = 14; break; } else { __label__ = 31; break; } //@line 286 "html/html_smartypants.c"
    case 14: 
      __label__ = 15; break; //@line 287 "html/html_smartypants.c"
    case 15: 
      __label__ = 16; break; //@line 288 "html/html_smartypants.c"
    case 16: 
      var $45=$i; //@line 288 "html/html_smartypants.c"
      var $46=$5; //@line 288 "html/html_smartypants.c"
      var $47=(($45)>>>0) < (($46)>>>0); //@line 288 "html/html_smartypants.c"
      if ($47) { __label__ = 17; break; } else { var $56 = 0;__label__ = 18; break; } //@line 288 "html/html_smartypants.c"
    case 17: 
      var $49=$i; //@line 288 "html/html_smartypants.c"
      var $50=$4; //@line 288 "html/html_smartypants.c"
      var $51=(($50+$49)|0); //@line 288 "html/html_smartypants.c"
      var $52=HEAPU8[($51)]; //@line 288 "html/html_smartypants.c"
      var $53=(($52)&255); //@line 288 "html/html_smartypants.c"
      var $54=(($53)|0)!=60; //@line 288 "html/html_smartypants.c"
      var $56 = $54;__label__ = 18; break;
    case 18: 
      var $56;
      if ($56) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      var $58=$i; //@line 289 "html/html_smartypants.c"
      var $59=((($58)+(1))|0); //@line 289 "html/html_smartypants.c"
      $i=$59; //@line 289 "html/html_smartypants.c"
      __label__ = 16; break; //@line 289 "html/html_smartypants.c"
    case 20: 
      var $61=$i; //@line 291 "html/html_smartypants.c"
      var $62=$5; //@line 291 "html/html_smartypants.c"
      var $63=(($61)|0)==(($62)|0); //@line 291 "html/html_smartypants.c"
      if ($63) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 291 "html/html_smartypants.c"
    case 21: 
      __label__ = 25; break; //@line 292 "html/html_smartypants.c"
    case 22: 
      var $66=$4; //@line 294 "html/html_smartypants.c"
      var $67=$i; //@line 294 "html/html_smartypants.c"
      var $68=(($66+$67)|0); //@line 294 "html/html_smartypants.c"
      var $69=$5; //@line 294 "html/html_smartypants.c"
      var $70=$i; //@line 294 "html/html_smartypants.c"
      var $71=((($69)-($70))|0); //@line 294 "html/html_smartypants.c"
      var $72=$tag; //@line 294 "html/html_smartypants.c"
      var $73=((_smartypants_cb__ltag_skip_tags+($72<<2))|0); //@line 294 "html/html_smartypants.c"
      var $74=HEAP32[(($73)>>2)]; //@line 294 "html/html_smartypants.c"
      var $75=_sdhtml_is_tag($68, $71, $74); //@line 294 "html/html_smartypants.c"
      var $76=(($75)|0)==2; //@line 294 "html/html_smartypants.c"
      if ($76) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 294 "html/html_smartypants.c"
    case 23: 
      __label__ = 25; break; //@line 295 "html/html_smartypants.c"
    case 24: 
      var $79=$i; //@line 297 "html/html_smartypants.c"
      var $80=((($79)+(1))|0); //@line 297 "html/html_smartypants.c"
      $i=$80; //@line 297 "html/html_smartypants.c"
      __label__ = 15; break; //@line 298 "html/html_smartypants.c"
    case 25: 
      __label__ = 26; break; //@line 300 "html/html_smartypants.c"
    case 26: 
      var $83=$i; //@line 300 "html/html_smartypants.c"
      var $84=$5; //@line 300 "html/html_smartypants.c"
      var $85=(($83)>>>0) < (($84)>>>0); //@line 300 "html/html_smartypants.c"
      if ($85) { __label__ = 27; break; } else { var $94 = 0;__label__ = 28; break; } //@line 300 "html/html_smartypants.c"
    case 27: 
      var $87=$i; //@line 300 "html/html_smartypants.c"
      var $88=$4; //@line 300 "html/html_smartypants.c"
      var $89=(($88+$87)|0); //@line 300 "html/html_smartypants.c"
      var $90=HEAPU8[($89)]; //@line 300 "html/html_smartypants.c"
      var $91=(($90)&255); //@line 300 "html/html_smartypants.c"
      var $92=(($91)|0)!=62; //@line 300 "html/html_smartypants.c"
      var $94 = $92;__label__ = 28; break;
    case 28: 
      var $94;
      if ($94) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: 
      var $96=$i; //@line 301 "html/html_smartypants.c"
      var $97=((($96)+(1))|0); //@line 301 "html/html_smartypants.c"
      $i=$97; //@line 301 "html/html_smartypants.c"
      __label__ = 26; break; //@line 301 "html/html_smartypants.c"
    case 30: 
      __label__ = 31; break; //@line 302 "html/html_smartypants.c"
    case 31: 
      var $100=$1; //@line 304 "html/html_smartypants.c"
      var $101=$4; //@line 304 "html/html_smartypants.c"
      var $102=$i; //@line 304 "html/html_smartypants.c"
      var $103=((($102)+(1))|0); //@line 304 "html/html_smartypants.c"
      _bufput($100, $101, $103); //@line 304 "html/html_smartypants.c"
      var $104=$i; //@line 305 "html/html_smartypants.c"
      ;
      return $104; //@line 305 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_cb__ltag["X"]=1;

function _smartypants_cb__backtick($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 219 "html/html_smartypants.c"
      var $8=(($7)>>>0) >= 2; //@line 219 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 10; break; } //@line 219 "html/html_smartypants.c"
    case 3: 
      var $10=$5; //@line 219 "html/html_smartypants.c"
      var $11=(($10+1)|0); //@line 219 "html/html_smartypants.c"
      var $12=HEAPU8[($11)]; //@line 219 "html/html_smartypants.c"
      var $13=(($12)&255); //@line 219 "html/html_smartypants.c"
      var $14=(($13)|0)==96; //@line 219 "html/html_smartypants.c"
      if ($14) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 219 "html/html_smartypants.c"
    case 4: 
      var $16=$2; //@line 220 "html/html_smartypants.c"
      var $17=$4; //@line 220 "html/html_smartypants.c"
      var $18=$6; //@line 220 "html/html_smartypants.c"
      var $19=(($18)>>>0) >= 3; //@line 220 "html/html_smartypants.c"
      if ($19) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 220 "html/html_smartypants.c"
    case 5: 
      var $21=$5; //@line 220 "html/html_smartypants.c"
      var $22=(($21+2)|0); //@line 220 "html/html_smartypants.c"
      var $23=HEAPU8[($22)]; //@line 220 "html/html_smartypants.c"
      var $24=(($23)&255); //@line 220 "html/html_smartypants.c"
      var $27 = $24;__label__ = 7; break; //@line 220 "html/html_smartypants.c"
    case 6: 
      var $27 = 0;__label__ = 7; break; //@line 220 "html/html_smartypants.c"
    case 7: 
      var $27; //@line 220 "html/html_smartypants.c"
      var $28=(($27) & 255); //@line 220 "html/html_smartypants.c"
      var $29=$3; //@line 220 "html/html_smartypants.c"
      var $30=(($29+4)|0); //@line 220 "html/html_smartypants.c"
      var $31=_smartypants_quotes($16, $17, $28, 100, $30); //@line 220 "html/html_smartypants.c"
      var $32=(($31)|0)!=0; //@line 220 "html/html_smartypants.c"
      if ($32) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 220 "html/html_smartypants.c"
    case 8: 
      $1=1; //@line 221 "html/html_smartypants.c"
      __label__ = 11; break; //@line 221 "html/html_smartypants.c"
    case 9: 
      __label__ = 10; break; //@line 222 "html/html_smartypants.c"
    case 10: 
      $1=0; //@line 224 "html/html_smartypants.c"
      __label__ = 11; break; //@line 224 "html/html_smartypants.c"
    case 11: 
      var $37=$1; //@line 225 "html/html_smartypants.c"
      ;
      return $37; //@line 225 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _smartypants_cb__escape($ob, $smrt, $previous_char, $text, $size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      $2=$ob;
      $3=$smrt;
      $4=$previous_char;
      $5=$text;
      $6=$size;
      var $7=$6; //@line 311 "html/html_smartypants.c"
      var $8=(($7)>>>0) < 2; //@line 311 "html/html_smartypants.c"
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 311 "html/html_smartypants.c"
    case 3: 
      $1=0; //@line 312 "html/html_smartypants.c"
      __label__ = 7; break; //@line 312 "html/html_smartypants.c"
    case 4: 
      var $11=$5; //@line 314 "html/html_smartypants.c"
      var $12=(($11+1)|0); //@line 314 "html/html_smartypants.c"
      var $13=HEAPU8[($12)]; //@line 314 "html/html_smartypants.c"
      var $14=(($13)&255); //@line 314 "html/html_smartypants.c"
      if ((($14)|0) == 92 || (($14)|0) == 34 || (($14)|0) == 39 || (($14)|0) == 46 || (($14)|0) == 45 || (($14)|0) == 96) {
        __label__ = 5; break;
      }
      else {
      __label__ = 6; break;
      }
      
    case 5: 
      var $16=$2; //@line 321 "html/html_smartypants.c"
      var $17=$5; //@line 321 "html/html_smartypants.c"
      var $18=(($17+1)|0); //@line 321 "html/html_smartypants.c"
      var $19=HEAPU8[($18)]; //@line 321 "html/html_smartypants.c"
      var $20=(($19)&255); //@line 321 "html/html_smartypants.c"
      _bufputc($16, $20); //@line 321 "html/html_smartypants.c"
      $1=1; //@line 322 "html/html_smartypants.c"
      __label__ = 7; break; //@line 322 "html/html_smartypants.c"
    case 6: 
      var $22=$2; //@line 325 "html/html_smartypants.c"
      _bufputc($22, 92); //@line 325 "html/html_smartypants.c"
      $1=0; //@line 326 "html/html_smartypants.c"
      __label__ = 7; break; //@line 326 "html/html_smartypants.c"
    case 7: 
      var $24=$1; //@line 328 "html/html_smartypants.c"
      ;
      return $24; //@line 328 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _smartypants_quotes($ob, $previous_char, $next_char, $quote, $is_open) {
  var __stackBase__  = STACKTOP; STACKTOP += 8; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $ent=__stackBase__;
      $2=$ob;
      $3=$previous_char;
      $4=$next_char;
      $5=$quote;
      $6=$is_open;
      var $7=$6; //@line 91 "html/html_smartypants.c"
      var $8=HEAP32[(($7)>>2)]; //@line 91 "html/html_smartypants.c"
      var $9=(($8)|0)!=0; //@line 91 "html/html_smartypants.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 91 "html/html_smartypants.c"
    case 3: 
      var $11=$4; //@line 91 "html/html_smartypants.c"
      var $12=_word_boundary($11); //@line 91 "html/html_smartypants.c"
      var $13=(($12)|0)!=0; //@line 91 "html/html_smartypants.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 91 "html/html_smartypants.c"
    case 4: 
      $1=0; //@line 92 "html/html_smartypants.c"
      __label__ = 9; break; //@line 92 "html/html_smartypants.c"
    case 5: 
      var $16=$6; //@line 94 "html/html_smartypants.c"
      var $17=HEAP32[(($16)>>2)]; //@line 94 "html/html_smartypants.c"
      var $18=(($17)|0)!=0; //@line 94 "html/html_smartypants.c"
      if ($18) { __label__ = 8; break; } else { __label__ = 6; break; } //@line 94 "html/html_smartypants.c"
    case 6: 
      var $20=$3; //@line 94 "html/html_smartypants.c"
      var $21=_word_boundary($20); //@line 94 "html/html_smartypants.c"
      var $22=(($21)|0)!=0; //@line 94 "html/html_smartypants.c"
      if ($22) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 94 "html/html_smartypants.c"
    case 7: 
      $1=0; //@line 95 "html/html_smartypants.c"
      __label__ = 9; break; //@line 95 "html/html_smartypants.c"
    case 8: 
      var $25=(($ent)|0); //@line 97 "html/html_smartypants.c"
      var $26=$6; //@line 97 "html/html_smartypants.c"
      var $27=HEAP32[(($26)>>2)]; //@line 97 "html/html_smartypants.c"
      var $28=(($27)|0)!=0; //@line 97 "html/html_smartypants.c"
      var $29=$28 ? 114 : 108; //@line 97 "html/html_smartypants.c"
      var $30=$5; //@line 97 "html/html_smartypants.c"
      var $31=(($30)&255); //@line 97 "html/html_smartypants.c"
      var $32=_snprintf($25, 8, ((STRING_TABLE.__str91)|0), (tempInt=STACKTOP,STACKTOP += 8,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$29,HEAP32[(((tempInt)+(4))>>2)]=$31,tempInt)); //@line 97 "html/html_smartypants.c"
      var $33=$6; //@line 98 "html/html_smartypants.c"
      var $34=HEAP32[(($33)>>2)]; //@line 98 "html/html_smartypants.c"
      var $35=(($34)|0)!=0; //@line 98 "html/html_smartypants.c"
      var $36=$35 ^ 1; //@line 98 "html/html_smartypants.c"
      var $37=(($36)&1); //@line 98 "html/html_smartypants.c"
      var $38=$6; //@line 98 "html/html_smartypants.c"
      HEAP32[(($38)>>2)]=$37; //@line 98 "html/html_smartypants.c"
      var $39=$2; //@line 99 "html/html_smartypants.c"
      var $40=(($ent)|0); //@line 99 "html/html_smartypants.c"
      _bufputs($39, $40); //@line 99 "html/html_smartypants.c"
      $1=1; //@line 100 "html/html_smartypants.c"
      __label__ = 9; break; //@line 100 "html/html_smartypants.c"
    case 9: 
      var $42=$1; //@line 101 "html/html_smartypants.c"
      STACKTOP = __stackBase__;
      return $42; //@line 101 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_smartypants_quotes["X"]=1;

function _word_boundary($c) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$c;
      var $2=$1; //@line 83 "html/html_smartypants.c"
      var $3=(($2)&255); //@line 83 "html/html_smartypants.c"
      var $4=(($3)|0)==0; //@line 83 "html/html_smartypants.c"
      if ($4) { var $16 = 1;__label__ = 5; break; } else { __label__ = 3; break; } //@line 83 "html/html_smartypants.c"
    case 3: 
      var $6=$1; //@line 83 "html/html_smartypants.c"
      var $7=(($6)&255); //@line 83 "html/html_smartypants.c"
      var $8=_isspace($7); //@line 83 "html/html_smartypants.c"
      var $9=(($8)|0)!=0; //@line 83 "html/html_smartypants.c"
      if ($9) { var $16 = 1;__label__ = 5; break; } else { __label__ = 4; break; } //@line 83 "html/html_smartypants.c"
    case 4: 
      var $11=$1; //@line 83 "html/html_smartypants.c"
      var $12=(($11)&255); //@line 83 "html/html_smartypants.c"
      var $13=_ispunct($12); //@line 83 "html/html_smartypants.c"
      var $14=(($13)|0)!=0; //@line 83 "html/html_smartypants.c"
      var $16 = $14;__label__ = 5; break; //@line 83 "html/html_smartypants.c"
    case 5: 
      var $16;
      var $17=(($16)&1); //@line 83 "html/html_smartypants.c"
      ;
      return $17; //@line 83 "html/html_smartypants.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _houdini_escape_html0($ob, $src, $size, $secure) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $i;
      var $org;
      var $esc;
      $1=$ob;
      $2=$src;
      $3=$size;
      $4=$secure;
      $i=0; //@line 52 "html/houdini_html_e.c"
      $esc=0; //@line 52 "html/houdini_html_e.c"
      var $5=$1; //@line 54 "html/houdini_html_e.c"
      var $6=$3; //@line 54 "html/houdini_html_e.c"
      var $7=((($6)*(12))|0); //@line 54 "html/houdini_html_e.c"
      var $8=Math.floor(((($7)>>>0))/(10)); //@line 54 "html/houdini_html_e.c"
      var $9=_bufgrow($5, $8); //@line 54 "html/houdini_html_e.c"
      __label__ = 3; break; //@line 56 "html/houdini_html_e.c"
    case 3: 
      var $11=$i; //@line 56 "html/houdini_html_e.c"
      var $12=$3; //@line 56 "html/houdini_html_e.c"
      var $13=(($11)>>>0) < (($12)>>>0); //@line 56 "html/houdini_html_e.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 18; break; } //@line 56 "html/houdini_html_e.c"
    case 4: 
      var $15=$i; //@line 57 "html/houdini_html_e.c"
      $org=$15; //@line 57 "html/houdini_html_e.c"
      __label__ = 5; break; //@line 58 "html/houdini_html_e.c"
    case 5: 
      var $17=$i; //@line 58 "html/houdini_html_e.c"
      var $18=$3; //@line 58 "html/houdini_html_e.c"
      var $19=(($17)>>>0) < (($18)>>>0); //@line 58 "html/houdini_html_e.c"
      if ($19) { __label__ = 6; break; } else { var $31 = 0;__label__ = 7; break; } //@line 58 "html/houdini_html_e.c"
    case 6: 
      var $21=$i; //@line 58 "html/houdini_html_e.c"
      var $22=$2; //@line 58 "html/houdini_html_e.c"
      var $23=(($22+$21)|0); //@line 58 "html/houdini_html_e.c"
      var $24=HEAPU8[($23)]; //@line 58 "html/houdini_html_e.c"
      var $25=(($24)&255); //@line 58 "html/houdini_html_e.c"
      var $26=((STRING_TABLE._HTML_ESCAPE_TABLE+$25)|0); //@line 58 "html/houdini_html_e.c"
      var $27=HEAP8[($26)]; //@line 58 "html/houdini_html_e.c"
      var $28=(($27 << 24) >> 24); //@line 58 "html/houdini_html_e.c"
      $esc=$28; //@line 58 "html/houdini_html_e.c"
      var $29=(($28)|0)==0; //@line 58 "html/houdini_html_e.c"
      var $31 = $29;__label__ = 7; break;
    case 7: 
      var $31;
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $33=$i; //@line 59 "html/houdini_html_e.c"
      var $34=((($33)+(1))|0); //@line 59 "html/houdini_html_e.c"
      $i=$34; //@line 59 "html/houdini_html_e.c"
      __label__ = 5; break; //@line 59 "html/houdini_html_e.c"
    case 9: 
      var $36=$i; //@line 61 "html/houdini_html_e.c"
      var $37=$org; //@line 61 "html/houdini_html_e.c"
      var $38=(($36)>>>0) > (($37)>>>0); //@line 61 "html/houdini_html_e.c"
      if ($38) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 61 "html/houdini_html_e.c"
    case 10: 
      var $40=$1; //@line 62 "html/houdini_html_e.c"
      var $41=$2; //@line 62 "html/houdini_html_e.c"
      var $42=$org; //@line 62 "html/houdini_html_e.c"
      var $43=(($41+$42)|0); //@line 62 "html/houdini_html_e.c"
      var $44=$i; //@line 62 "html/houdini_html_e.c"
      var $45=$org; //@line 62 "html/houdini_html_e.c"
      var $46=((($44)-($45))|0); //@line 62 "html/houdini_html_e.c"
      _bufput($40, $43, $46); //@line 62 "html/houdini_html_e.c"
      __label__ = 11; break; //@line 62 "html/houdini_html_e.c"
    case 11: 
      var $48=$i; //@line 65 "html/houdini_html_e.c"
      var $49=$3; //@line 65 "html/houdini_html_e.c"
      var $50=(($48)>>>0) >= (($49)>>>0); //@line 65 "html/houdini_html_e.c"
      if ($50) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 65 "html/houdini_html_e.c"
    case 12: 
      __label__ = 18; break; //@line 66 "html/houdini_html_e.c"
    case 13: 
      var $53=$i; //@line 69 "html/houdini_html_e.c"
      var $54=$2; //@line 69 "html/houdini_html_e.c"
      var $55=(($54+$53)|0); //@line 69 "html/houdini_html_e.c"
      var $56=HEAPU8[($55)]; //@line 69 "html/houdini_html_e.c"
      var $57=(($56)&255); //@line 69 "html/houdini_html_e.c"
      var $58=(($57)|0)==47; //@line 69 "html/houdini_html_e.c"
      if ($58) { __label__ = 14; break; } else { __label__ = 16; break; } //@line 69 "html/houdini_html_e.c"
    case 14: 
      var $60=$4; //@line 69 "html/houdini_html_e.c"
      var $61=(($60)|0)!=0; //@line 69 "html/houdini_html_e.c"
      if ($61) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 69 "html/houdini_html_e.c"
    case 15: 
      var $63=$1; //@line 70 "html/houdini_html_e.c"
      _bufputc($63, 47); //@line 70 "html/houdini_html_e.c"
      __label__ = 17; break; //@line 71 "html/houdini_html_e.c"
    case 16: 
      var $65=$1; //@line 72 "html/houdini_html_e.c"
      var $66=$esc; //@line 72 "html/houdini_html_e.c"
      var $67=((_HTML_ESCAPES+($66<<2))|0); //@line 72 "html/houdini_html_e.c"
      var $68=HEAP32[(($67)>>2)]; //@line 72 "html/houdini_html_e.c"
      _bufputs($65, $68); //@line 72 "html/houdini_html_e.c"
      __label__ = 17; break;
    case 17: 
      var $70=$i; //@line 75 "html/houdini_html_e.c"
      var $71=((($70)+(1))|0); //@line 75 "html/houdini_html_e.c"
      $i=$71; //@line 75 "html/houdini_html_e.c"
      __label__ = 3; break; //@line 76 "html/houdini_html_e.c"
    case 18: 
      ;
      return; //@line 77 "html/houdini_html_e.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_houdini_escape_html0["X"]=1;

function _houdini_escape_html($ob, $src, $size) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$ob;
  $2=$src;
  $3=$size;
  var $4=$1; //@line 82 "html/houdini_html_e.c"
  var $5=$2; //@line 82 "html/houdini_html_e.c"
  var $6=$3; //@line 82 "html/houdini_html_e.c"
  _houdini_escape_html0($4, $5, $6, 1); //@line 82 "html/houdini_html_e.c"
  ;
  return; //@line 83 "html/houdini_html_e.c"
}


function _houdini_escape_href($ob, $src, $size) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $org;
      var $hex_str=__stackBase__;
      $1=$ob;
      $2=$src;
      $3=$size;
      $i=0; //@line 57 "html/houdini_href_e.c"
      var $4=$1; //@line 60 "html/houdini_href_e.c"
      var $5=$3; //@line 60 "html/houdini_href_e.c"
      var $6=((($5)*(12))|0); //@line 60 "html/houdini_href_e.c"
      var $7=Math.floor(((($6)>>>0))/(10)); //@line 60 "html/houdini_href_e.c"
      var $8=_bufgrow($4, $7); //@line 60 "html/houdini_href_e.c"
      var $9=(($hex_str)|0); //@line 61 "html/houdini_href_e.c"
      HEAP8[($9)]=37; //@line 61 "html/houdini_href_e.c"
      __label__ = 3; break; //@line 63 "html/houdini_href_e.c"
    case 3: 
      var $11=$i; //@line 63 "html/houdini_href_e.c"
      var $12=$3; //@line 63 "html/houdini_href_e.c"
      var $13=(($11)>>>0) < (($12)>>>0); //@line 63 "html/houdini_href_e.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 18; break; } //@line 63 "html/houdini_href_e.c"
    case 4: 
      var $15=$i; //@line 64 "html/houdini_href_e.c"
      $org=$15; //@line 64 "html/houdini_href_e.c"
      __label__ = 5; break; //@line 65 "html/houdini_href_e.c"
    case 5: 
      var $17=$i; //@line 65 "html/houdini_href_e.c"
      var $18=$3; //@line 65 "html/houdini_href_e.c"
      var $19=(($17)>>>0) < (($18)>>>0); //@line 65 "html/houdini_href_e.c"
      if ($19) { __label__ = 6; break; } else { var $31 = 0;__label__ = 7; break; } //@line 65 "html/houdini_href_e.c"
    case 6: 
      var $21=$i; //@line 65 "html/houdini_href_e.c"
      var $22=$2; //@line 65 "html/houdini_href_e.c"
      var $23=(($22+$21)|0); //@line 65 "html/houdini_href_e.c"
      var $24=HEAPU8[($23)]; //@line 65 "html/houdini_href_e.c"
      var $25=(($24)&255); //@line 65 "html/houdini_href_e.c"
      var $26=((STRING_TABLE._HREF_SAFE+$25)|0); //@line 65 "html/houdini_href_e.c"
      var $27=HEAP8[($26)]; //@line 65 "html/houdini_href_e.c"
      var $28=(($27 << 24) >> 24); //@line 65 "html/houdini_href_e.c"
      var $29=(($28)|0)!=0; //@line 65 "html/houdini_href_e.c"
      var $31 = $29;__label__ = 7; break;
    case 7: 
      var $31;
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $33=$i; //@line 66 "html/houdini_href_e.c"
      var $34=((($33)+(1))|0); //@line 66 "html/houdini_href_e.c"
      $i=$34; //@line 66 "html/houdini_href_e.c"
      __label__ = 5; break; //@line 66 "html/houdini_href_e.c"
    case 9: 
      var $36=$i; //@line 68 "html/houdini_href_e.c"
      var $37=$org; //@line 68 "html/houdini_href_e.c"
      var $38=(($36)>>>0) > (($37)>>>0); //@line 68 "html/houdini_href_e.c"
      if ($38) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 68 "html/houdini_href_e.c"
    case 10: 
      var $40=$1; //@line 69 "html/houdini_href_e.c"
      var $41=$2; //@line 69 "html/houdini_href_e.c"
      var $42=$org; //@line 69 "html/houdini_href_e.c"
      var $43=(($41+$42)|0); //@line 69 "html/houdini_href_e.c"
      var $44=$i; //@line 69 "html/houdini_href_e.c"
      var $45=$org; //@line 69 "html/houdini_href_e.c"
      var $46=((($44)-($45))|0); //@line 69 "html/houdini_href_e.c"
      _bufput($40, $43, $46); //@line 69 "html/houdini_href_e.c"
      __label__ = 11; break; //@line 69 "html/houdini_href_e.c"
    case 11: 
      var $48=$i; //@line 72 "html/houdini_href_e.c"
      var $49=$3; //@line 72 "html/houdini_href_e.c"
      var $50=(($48)>>>0) >= (($49)>>>0); //@line 72 "html/houdini_href_e.c"
      if ($50) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 72 "html/houdini_href_e.c"
    case 12: 
      __label__ = 18; break; //@line 73 "html/houdini_href_e.c"
    case 13: 
      var $53=$i; //@line 75 "html/houdini_href_e.c"
      var $54=$2; //@line 75 "html/houdini_href_e.c"
      var $55=(($54+$53)|0); //@line 75 "html/houdini_href_e.c"
      var $56=HEAPU8[($55)]; //@line 75 "html/houdini_href_e.c"
      var $57=(($56)&255); //@line 75 "html/houdini_href_e.c"
      if ((($57)|0) == 38) {
        __label__ = 14; break;
      }
      else if ((($57)|0) == 39) {
        __label__ = 15; break;
      }
      else {
      __label__ = 16; break;
      }
      
    case 14: 
      var $59=$1; //@line 79 "html/houdini_href_e.c"
      _bufput($59, ((STRING_TABLE.__str121)|0), 5); //@line 79 "html/houdini_href_e.c"
      __label__ = 17; break; //@line 80 "html/houdini_href_e.c"
    case 15: 
      var $61=$1; //@line 86 "html/houdini_href_e.c"
      _bufput($61, ((STRING_TABLE.__str1122)|0), 6); //@line 86 "html/houdini_href_e.c"
      __label__ = 17; break; //@line 87 "html/houdini_href_e.c"
    case 16: 
      var $63=$i; //@line 101 "html/houdini_href_e.c"
      var $64=$2; //@line 101 "html/houdini_href_e.c"
      var $65=(($64+$63)|0); //@line 101 "html/houdini_href_e.c"
      var $66=HEAPU8[($65)]; //@line 101 "html/houdini_href_e.c"
      var $67=(($66)&255); //@line 101 "html/houdini_href_e.c"
      var $68=$67 >> 4; //@line 101 "html/houdini_href_e.c"
      var $69=$68 & 15; //@line 101 "html/houdini_href_e.c"
      var $70=((STRING_TABLE._houdini_escape_href_hex_chars+$69)|0); //@line 101 "html/houdini_href_e.c"
      var $71=HEAP8[($70)]; //@line 101 "html/houdini_href_e.c"
      var $72=(($hex_str+1)|0); //@line 101 "html/houdini_href_e.c"
      HEAP8[($72)]=$71; //@line 101 "html/houdini_href_e.c"
      var $73=$i; //@line 102 "html/houdini_href_e.c"
      var $74=$2; //@line 102 "html/houdini_href_e.c"
      var $75=(($74+$73)|0); //@line 102 "html/houdini_href_e.c"
      var $76=HEAPU8[($75)]; //@line 102 "html/houdini_href_e.c"
      var $77=(($76)&255); //@line 102 "html/houdini_href_e.c"
      var $78=$77 & 15; //@line 102 "html/houdini_href_e.c"
      var $79=((STRING_TABLE._houdini_escape_href_hex_chars+$78)|0); //@line 102 "html/houdini_href_e.c"
      var $80=HEAP8[($79)]; //@line 102 "html/houdini_href_e.c"
      var $81=(($hex_str+2)|0); //@line 102 "html/houdini_href_e.c"
      HEAP8[($81)]=$80; //@line 102 "html/houdini_href_e.c"
      var $82=$1; //@line 103 "html/houdini_href_e.c"
      var $83=(($hex_str)|0); //@line 103 "html/houdini_href_e.c"
      _bufput($82, $83, 3); //@line 103 "html/houdini_href_e.c"
      __label__ = 17; break; //@line 104 "html/houdini_href_e.c"
    case 17: 
      var $85=$i; //@line 106 "html/houdini_href_e.c"
      var $86=((($85)+(1))|0); //@line 106 "html/houdini_href_e.c"
      $i=$86; //@line 106 "html/houdini_href_e.c"
      __label__ = 3; break; //@line 107 "html/houdini_href_e.c"
    case 18: 
      STACKTOP = __stackBase__;
      return; //@line 108 "html/houdini_href_e.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_houdini_escape_href["X"]=1;

function _malloc($bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $mem;
      var $nb;
      var $idx;
      var $smallbits;
      var $b;
      var $p;
      var $F;
      var $b1;
      var $p2;
      var $r;
      var $rsize;
      var $i;
      var $leftbits;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $F3;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F4;
      var $rsize5;
      var $p6;
      var $r7;
      var $dvs;
      var $rsize8;
      var $p9;
      var $r10;
      $1=$bytes;
      var $2=$1; //@line 4629 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)>>>0) <= 244; //@line 4629 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($3) { __label__ = 3; break; } else { __label__ = 38; break; } //@line 4629 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=$1; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)>>>0) < 11; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $14 = 16;__label__ = 6; break; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $9=$1; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=((($9)+(4))|0); //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=((($10)+(7))|0); //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$11 & -8; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14 = $12;__label__ = 6; break; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $14; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nb=$14; //@line 4632 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$nb; //@line 4633 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$15 >>> 3; //@line 4633 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $idx=$16; //@line 4633 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=HEAPU32[((((__gm_)|0))>>2)]; //@line 4634 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$idx; //@line 4634 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$17 >>> (($18)>>>0); //@line 4634 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $smallbits=$19; //@line 4634 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$smallbits; //@line 4636 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$20 & 3; //@line 4636 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=(($21)|0)!=0; //@line 4636 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($22) { __label__ = 7; break; } else { __label__ = 14; break; } //@line 4636 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $24=$smallbits; //@line 4638 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$24 ^ -1; //@line 4638 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=$25 & 1; //@line 4638 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$idx; //@line 4638 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=((($27)+($26))|0); //@line 4638 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $idx=$28; //@line 4638 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=$idx; //@line 4639 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$29 << 1; //@line 4639 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=((((__gm_+40)|0)+($30<<2))|0); //@line 4639 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$31; //@line 4639 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 4639 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $b=$33; //@line 4639 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=$b; //@line 4640 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=(($34+8)|0); //@line 4640 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($35)>>2)]; //@line 4640 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$36; //@line 4640 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$p; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=(($37+8)|0); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($38)>>2)]; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$39; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$b; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$F; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($40)|0)==(($41)|0); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($42) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $44=$idx; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=1 << $44; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=$45 ^ -1; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=HEAP32[((((__gm_)|0))>>2)]; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=$47 & $46; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$48; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $50=$F; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=(($51)>>>0) >= (($52)>>>0); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=(($53)&1); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=(($54)==(1)); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=(($55)|0)!=0; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($56) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $58=$F; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$b; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=(($59+8)|0); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($60)>>2)]=$58; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$b; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=$F; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=(($62+12)|0); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($63)>>2)]=$61; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      _abort(); //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4642 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      __label__ = 13; break;
    case 13: 
      var $67=$idx; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=$67 << 3; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=$68 | 1; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$69 | 2; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=$p; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=(($71+4)|0); //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($72)>>2)]=$70; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=$p; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=$73; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=$idx; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=$75 << 3; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(($74+$76)|0); //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=$77; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=(($78+4)|0); //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=HEAP32[(($79)>>2)]; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=$80 | 1; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($79)>>2)]=$81; //@line 4643 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=$p; //@line 4644 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=$82; //@line 4644 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=(($83+8)|0); //@line 4644 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$84; //@line 4644 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4646 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $86=$nb; //@line 4649 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4649 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=(($86)>>>0) > (($87)>>>0); //@line 4649 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($88) { __label__ = 15; break; } else { __label__ = 36; break; } //@line 4649 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $90=$smallbits; //@line 4650 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=(($90)|0)!=0; //@line 4650 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($91) { __label__ = 16; break; } else { __label__ = 31; break; } //@line 4650 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $93=$smallbits; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=$idx; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=$93 << $94; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=$idx; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=1 << $96; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$97 << 1; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$idx; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=1 << $99; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$100 << 1; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=(((-$101))|0); //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$98 | $102; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=$95 & $103; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leftbits=$104; //@line 4654 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=$leftbits; //@line 4655 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=$leftbits; //@line 4655 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=(((-$106))|0); //@line 4655 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=$105 & $107; //@line 4655 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leastbit=$108; //@line 4655 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=$leastbit; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=((($109)-(1))|0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$110; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=$111 >>> 12; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=$112 & 16; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$113; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=$K; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$114; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=$K; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=$116 >>> (($115)>>>0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$117; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=$118 >>> 5; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=$119 & 8; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$120; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=$N; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=((($121)+($120))|0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$122; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=$K; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=$124 >>> (($123)>>>0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$125; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=$126 >>> 2; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=$127 & 4; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$128; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=$N; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=((($129)+($128))|0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$130; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=$K; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=$132 >>> (($131)>>>0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$133; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$134 >>> 1; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=$135 & 2; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$136; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=$N; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=((($137)+($136))|0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$138; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$K; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=$140 >>> (($139)>>>0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$141; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=$142 >>> 1; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=$143 & 1; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$144; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=$N; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=((($145)+($144))|0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$146; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=$K; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=$148 >>> (($147)>>>0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$149; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$N; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$Y; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=((($150)+($151))|0); //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=$152; //@line 4656 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=$i; //@line 4657 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=$153 << 1; //@line 4657 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=((((__gm_+40)|0)+($154<<2))|0); //@line 4657 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=$155; //@line 4657 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 4657 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $b1=$157; //@line 4657 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=$b1; //@line 4658 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=(($158+8)|0); //@line 4658 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=HEAP32[(($159)>>2)]; //@line 4658 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p2=$160; //@line 4658 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=$p2; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=(($161+8)|0); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=HEAP32[(($162)>>2)]; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F3=$163; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=$b1; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=$F3; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=(($164)|0)==(($165)|0); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($166) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $168=$i; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=1 << $168; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=$169 ^ -1; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[((((__gm_)|0))>>2)]; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=$171 & $170; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$172; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 22; break; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $174=$F3; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=$174; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=(($175)>>>0) >= (($176)>>>0); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=(($177)&1); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $179=(($178)==(1)); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $180=(($179)|0)!=0; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($180) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $182=$F3; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=$b1; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=(($183+8)|0); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($184)>>2)]=$182; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=$b1; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=$F3; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $187=(($186+12)|0); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($187)>>2)]=$185; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      _abort(); //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4660 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break;
    case 22: 
      var $191=$i; //@line 4661 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $192=$191 << 3; //@line 4661 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=$nb; //@line 4661 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=((($192)-($193))|0); //@line 4661 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$194; //@line 4661 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=$nb; //@line 4666 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=$195 | 1; //@line 4666 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=$196 | 2; //@line 4666 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=$p2; //@line 4666 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=(($198+4)|0); //@line 4666 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($199)>>2)]=$197; //@line 4666 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=$p2; //@line 4667 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $201=$200; //@line 4667 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=$nb; //@line 4667 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=(($201+$202)|0); //@line 4667 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=$203; //@line 4667 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $r=$204; //@line 4667 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$rsize; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=$205 | 1; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$r; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=(($207+4)|0); //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($208)>>2)]=$206; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=$rsize; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=$r; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=$210; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=$rsize; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=(($211+$212)|0); //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $214=$213; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $215=(($214)|0); //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($215)>>2)]=$209; //@line 4668 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $216=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $DVS=$216; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $217=$DVS; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $218=(($217)|0)!=0; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($218) { __label__ = 23; break; } else { __label__ = 30; break; } //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $220=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $DV=$220; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=$DVS; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=$221 >>> 3; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$222; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=$I; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=$223 << 1; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $225=((((__gm_+40)|0)+($224<<2))|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=$225; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B=$227; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=$B; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F4=$228; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $229=HEAP32[((((__gm_)|0))>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230=$I; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $231=1 << $230; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $232=$229 & $231; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $233=(($232)|0)!=0; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($233) { __label__ = 25; break; } else { __label__ = 24; break; } //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $235=$I; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $236=1 << $235; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=HEAP32[((((__gm_)|0))>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $238=$237 | $236; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$238; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 29; break; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $240=$B; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $241=(($240+8)|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $242=HEAP32[(($241)>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=$242; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $245=(($243)>>>0) >= (($244)>>>0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=(($245)&1); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=(($246)==(1)); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=(($247)|0)!=0; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($248) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $250=$B; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $251=(($250+8)|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $252=HEAP32[(($251)>>2)]; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F4=$252; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      _abort(); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break;
    case 29: 
      var $256=$DV; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $257=$B; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $258=(($257+8)|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($258)>>2)]=$256; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=$DV; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=$F4; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $261=(($260+12)|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($261)>>2)]=$259; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $262=$F4; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $263=$DV; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $264=(($263+8)|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($264)>>2)]=$262; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $265=$B; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $266=$DV; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $267=(($266+12)|0); //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($267)>>2)]=$265; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $269=$rsize; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$269; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $270=$r; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$270; //@line 4669 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $271=$p2; //@line 4671 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $272=$271; //@line 4671 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $273=(($272+8)|0); //@line 4671 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$273; //@line 4671 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4673 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $275=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=(($275)|0)!=0; //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($276) { __label__ = 32; break; } else { __label__ = 34; break; } //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $278=$nb; //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=_tmalloc_small(__gm_, $278); //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$279; //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $280=(($279)|0)!=0; //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($280) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 4676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      __label__ = 54; break; //@line 4678 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      __label__ = 35; break;
    case 35: 
      __label__ = 36; break; //@line 4680 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      __label__ = 37; break;
    case 37: 
      __label__ = 45; break; //@line 4681 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $287=$1; //@line 4682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=(($287)>>>0) >= 4294967232; //@line 4682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($288) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 4682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      $nb=-1; //@line 4683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 44; break; //@line 4683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $291=$1; //@line 4685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $292=((($291)+(4))|0); //@line 4685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $293=((($292)+(7))|0); //@line 4685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $294=$293 & -8; //@line 4685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nb=$294; //@line 4685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $295=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $296=(($295)|0)!=0; //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($296) { __label__ = 41; break; } else { __label__ = 43; break; } //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $298=$nb; //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $299=_tmalloc_large(__gm_, $298); //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$299; //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $300=(($299)|0)!=0; //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($300) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 4686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      __label__ = 54; break; //@line 4688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 43: 
      __label__ = 44; break;
    case 44: 
      __label__ = 45; break;
    case 45: 
      var $305=$nb; //@line 4692 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $306=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4692 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $307=(($305)>>>0) <= (($306)>>>0); //@line 4692 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($307) { __label__ = 46; break; } else { __label__ = 50; break; } //@line 4692 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $309=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4693 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $310=$nb; //@line 4693 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $311=((($309)-($310))|0); //@line 4693 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize5=$311; //@line 4693 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $312=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4694 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p6=$312; //@line 4694 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $313=$rsize5; //@line 4695 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $314=(($313)>>>0) >= 16; //@line 4695 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($314) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 4695 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $316=$p6; //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=$316; //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $318=$nb; //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $319=(($317+$318)|0); //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $320=$319; //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$320; //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $r7=$320; //@line 4696 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=$rsize5; //@line 4697 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$321; //@line 4697 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $322=$rsize5; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=$322 | 1; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=$r7; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=(($324+4)|0); //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($325)>>2)]=$323; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=$rsize5; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $327=$r7; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $328=$327; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $329=$rsize5; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $330=(($328+$329)|0); //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $331=$330; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $332=(($331)|0); //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($332)>>2)]=$326; //@line 4698 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $333=$nb; //@line 4699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $334=$333 | 1; //@line 4699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $335=$334 | 2; //@line 4699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $336=$p6; //@line 4699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $337=(($336+4)|0); //@line 4699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($337)>>2)]=$335; //@line 4699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break; //@line 4700 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $339=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4702 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $dvs=$339; //@line 4702 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4704 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=$dvs; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=$340 | 1; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=$341 | 2; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $343=$p6; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $344=(($343+4)|0); //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($344)>>2)]=$342; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $345=$p6; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=$345; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=$dvs; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348=(($346+$347)|0); //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $349=$348; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=(($349+4)|0); //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=HEAP32[(($350)>>2)]; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=$351 | 1; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($350)>>2)]=$352; //@line 4705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break;
    case 49: 
      var $354=$p6; //@line 4707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $355=$354; //@line 4707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $356=(($355+8)|0); //@line 4707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$356; //@line 4707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $358=$nb; //@line 4712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=HEAPU32[((((__gm_+12)|0))>>2)]; //@line 4712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $360=(($358)>>>0) < (($359)>>>0); //@line 4712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($360) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 4712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $362=$nb; //@line 4713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $363=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $364=((($363)-($362))|0); //@line 4713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$364; //@line 4713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize8=$364; //@line 4713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $365=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p9=$365; //@line 4714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $366=$p9; //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=$366; //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=$nb; //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=(($367+$368)|0); //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $370=$369; //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$370; //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $r10=$370; //@line 4715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $371=$rsize8; //@line 4716 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $372=$371 | 1; //@line 4716 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $373=$r10; //@line 4716 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374=(($373+4)|0); //@line 4716 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($374)>>2)]=$372; //@line 4716 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $375=$nb; //@line 4717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $376=$375 | 1; //@line 4717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $377=$376 | 2; //@line 4717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $378=$p9; //@line 4717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $379=(($378+4)|0); //@line 4717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($379)>>2)]=$377; //@line 4717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=$p9; //@line 4718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=$380; //@line 4718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=(($381+8)|0); //@line 4718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$382; //@line 4718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4721 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break;
    case 53: 
      var $385=$nb; //@line 4724 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=_sys_alloc(__gm_, $385); //@line 4724 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$386; //@line 4724 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4724 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $388=$mem; //@line 4728 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $388; //@line 4728 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
Module["_malloc"] = _malloc;_malloc["X"]=1;

function _tmalloc_small($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $t;
      var $v;
      var $rsize;
      var $i;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $trem;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F1;
      $1=$m;
      $2=$nb;
      var $3=$1; //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=(($3+4)|0); //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=HEAP32[(($4)>>2)]; //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=$1; //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=(($6+4)|0); //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($7)>>2)]; //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=(((-$8))|0); //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$5 & $9; //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leastbit=$10; //@line 4269 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$leastbit; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=((($11)-(1))|0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$12; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=$13 >>> 12; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$14 & 16; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$15; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$K; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$16; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=$K; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$18 >>> (($17)>>>0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$19; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$20 >>> 5; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$21 & 8; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$22; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$N; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=((($23)+($22))|0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$24; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$K; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$26 >>> (($25)>>>0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$27; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=$28 >>> 2; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$29 & 4; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$30; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$N; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=((($31)+($30))|0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$32; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$K; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$34 >>> (($33)>>>0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$35; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$36 >>> 1; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=$37 & 2; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$38; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=$N; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=((($39)+($38))|0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$40; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$K; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$42 >>> (($41)>>>0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$43; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$44 >>> 1; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=$45 & 1; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$46; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=$N; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=((($47)+($46))|0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$48; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=$K; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=$50 >>> (($49)>>>0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$51; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$N; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=$Y; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=((($52)+($53))|0); //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=$54; //@line 4270 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=$i; //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$1; //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+304)|0); //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=(($57+($55<<2))|0); //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($58)>>2)]; //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$59; //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $v=$59; //@line 4271 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$t; //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=(($60+4)|0); //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=HEAP32[(($61)>>2)]; //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$62 & -8; //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=$2; //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=((($63)-($64))|0); //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$65; //@line 4272 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $67=$t; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=(($67+16)|0); //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0); //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($69)>>2)]; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=(($70)|0)!=0; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($71) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $73=$t; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+16)|0); //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=(($74)|0); //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($75)>>2)]; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83 = $76;__label__ = 6; break; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $78=$t; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=(($78+16)|0); //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+4)|0); //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($80)>>2)]; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83 = $81;__label__ = 6; break; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $83; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$83; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=(($83)|0)!=0; //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($84) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 4274 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $86=$t; //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=(($86+4)|0); //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($87)>>2)]; //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=$88 & -8; //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=$2; //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=((($89)-($90))|0); //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $trem=$91; //@line 4275 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=$trem; //@line 4276 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=$rsize; //@line 4276 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=(($92)>>>0) < (($93)>>>0); //@line 4276 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($94) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4276 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $96=$trem; //@line 4277 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$96; //@line 4277 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=$t; //@line 4278 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $v=$97; //@line 4278 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 4279 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      __label__ = 3; break; //@line 4280 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $100=$v; //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$100; //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=$1; //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=(($102+16)|0); //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=HEAPU32[(($103)>>2)]; //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=(($101)>>>0) >= (($104)>>>0); //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=(($105)&1); //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=(($106)==(1)); //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=(($107)|0)!=0; //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 11; break; } else { __label__ = 70; break; } //@line 4282 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $110=$v; //@line 4283 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=$110; //@line 4283 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=$2; //@line 4283 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=(($111+$112)|0); //@line 4283 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=$113; //@line 4283 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $r=$114; //@line 4283 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=$v; //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=$115; //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=$r; //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=$117; //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=(($116)>>>0) < (($118)>>>0); //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=(($119)&1); //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=(($120)==(1)); //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=(($121)|0)!=0; //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($122) { __label__ = 12; break; } else { __label__ = 69; break; } //@line 4285 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $124=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=(($124+24)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=HEAP32[(($125)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $XP=$126; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=(($127+12)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=HEAP32[(($128)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=(($129)|0)!=(($130)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($131) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $133=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=(($133+8)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($134)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$135; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=(($136+12)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=HEAP32[(($137)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$138; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$F; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=$139; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=(($141+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=HEAPU32[(($142)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=(($140)>>>0) >= (($143)>>>0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=(($144)&1); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=(($145)==(1)); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=(($146)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($147) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $149=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$F; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=(($150+12)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($151)>>2)]=$149; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=$F; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=(($153+8)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($154)>>2)]=$152; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      _abort(); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      __label__ = 29; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $158=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=(($158+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=(($159+4)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$160; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=HEAP32[(($160)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$161; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=(($161)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($162) { __label__ = 19; break; } else { __label__ = 18; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $164=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=(($164+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=(($165)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$166; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $167=HEAP32[(($166)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$167; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=(($167)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($168) { __label__ = 19; break; } else { __label__ = 28; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      __label__ = 20; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $171=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=(($171+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=(($172+4)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$173; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $174=HEAP32[(($173)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=(($174)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($175) { var $183 = 1;__label__ = 22; break; } else { __label__ = 21; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $177=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=(($177+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $179=(($178)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$179; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $180=HEAP32[(($179)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $181=(($180)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183 = $181;__label__ = 22; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $183;
      if ($183) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $185=$CP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$185; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=HEAP32[(($185)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$186; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $188=$RP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=$188; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $190=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $191=(($190+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $192=HEAPU32[(($191)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=(($189)>>>0) >= (($192)>>>0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=(($193)&1); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=(($194)==(1)); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=(($195)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($196) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $198=$RP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($198)>>2)]=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      _abort(); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      __label__ = 28; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break;
    case 29: 
      var $203=$XP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=(($203)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($204) { __label__ = 30; break; } else { __label__ = 57; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $206=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=(($206+28)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=HEAP32[(($207)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=(($209+304)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=(($210+($208<<2))|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H=$211; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=$H; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $214=HEAP32[(($213)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $215=(($212)|0)==(($214)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($215) { __label__ = 31; break; } else { __label__ = 34; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $217=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $218=$H; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($218)>>2)]=$217; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $219=(($217)|0)==0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($219) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $221=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=(($221+28)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=HEAP32[(($222)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=1 << $223; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $225=$224 ^ -1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=(($226+4)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=HEAP32[(($227)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $229=$228 & $225; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($227)>>2)]=$229; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      __label__ = 41; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $232=$XP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $233=$232; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $234=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $235=(($234+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $236=HEAPU32[(($235)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=(($233)>>>0) >= (($236)>>>0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $238=(($237)&1); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $239=(($238)==(1)); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $240=(($239)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($240) { __label__ = 35; break; } else { __label__ = 39; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $242=$XP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=(($242+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=(($243)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $245=HEAP32[(($244)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=(($245)|0)==(($246)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($247) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $249=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $250=$XP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $251=(($250+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $252=(($251)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($252)>>2)]=$249; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $254=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $255=$XP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $256=(($255+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $257=(($256+4)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($257)>>2)]=$254; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break;
    case 38: 
      __label__ = 40; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      _abort(); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      __label__ = 41; break;
    case 41: 
      var $262=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $263=(($262)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($263) { __label__ = 42; break; } else { __label__ = 56; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $265=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $266=$265; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $267=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $268=(($267+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $269=HEAPU32[(($268)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $270=(($266)>>>0) >= (($269)>>>0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $271=(($270)&1); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $272=(($271)==(1)); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $273=(($272)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($273) { __label__ = 43; break; } else { __label__ = 54; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $275=$XP; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $277=(($276+24)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($277)>>2)]=$275; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $278=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=(($278+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $280=(($279)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $281=HEAP32[(($280)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C0=$281; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=(($281)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($282) { __label__ = 44; break; } else { __label__ = 48; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $284=$C0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $285=$284; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $286=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=(($286+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=HEAPU32[(($287)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $289=(($285)>>>0) >= (($288)>>>0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $290=(($289)&1); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $291=(($290)==(1)); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $292=(($291)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($292) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      var $294=$C0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $295=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $296=(($295+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $297=(($296)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($297)>>2)]=$294; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $298=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $299=$C0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $300=(($299+24)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($300)>>2)]=$298; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      _abort(); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      __label__ = 48; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $304=$v; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $305=(($304+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $306=(($305+4)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $307=HEAP32[(($306)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C1=$307; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $308=(($307)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($308) { __label__ = 49; break; } else { __label__ = 53; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $310=$C1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $311=$310; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $312=$1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $313=(($312+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $314=HEAPU32[(($313)>>2)]; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=(($311)>>>0) >= (($314)>>>0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=(($315)&1); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=(($316)==(1)); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $318=(($317)|0)!=0; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($318) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $320=$C1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $322=(($321+16)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=(($322+4)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($323)>>2)]=$320; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=$R; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=$C1; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=(($325+24)|0); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($326)>>2)]=$324; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      _abort(); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 53: 
      __label__ = 55; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      _abort(); //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 55: 
      __label__ = 56; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 56: 
      __label__ = 57; break; //@line 4286 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $334=$rsize; //@line 4287 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $335=(($334)>>>0) < 16; //@line 4287 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($335) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 4287 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 58: 
      var $337=$rsize; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $338=$2; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=((($337)+($338))|0); //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=$339 | 1; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=$340 | 2; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=$v; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $343=(($342+4)|0); //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($343)>>2)]=$341; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $344=$v; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $345=$344; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=$rsize; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=$2; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348=((($346)+($347))|0); //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $349=(($345+$348)|0); //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=$349; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+4)|0); //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=HEAP32[(($351)>>2)]; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $353=$352 | 1; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($351)>>2)]=$353; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 68; break; //@line 4288 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $355=$2; //@line 4290 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $356=$355 | 1; //@line 4290 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $357=$356 | 2; //@line 4290 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=$v; //@line 4290 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=(($358+4)|0); //@line 4290 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($359)>>2)]=$357; //@line 4290 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $360=$rsize; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $361=$360 | 1; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $362=$r; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $363=(($362+4)|0); //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($363)>>2)]=$361; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $364=$rsize; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $365=$r; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $366=$365; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=$rsize; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=(($366+$367)|0); //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=$368; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $370=(($369)|0); //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($370)>>2)]=$364; //@line 4291 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $371=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $372=(($371+8)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $373=HEAP32[(($372)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $DVS=$373; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374=$DVS; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $375=(($374)|0)!=0; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($375) { __label__ = 60; break; } else { __label__ = 67; break; } //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $377=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $378=(($377+20)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $379=HEAP32[(($378)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $DV=$379; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=$DVS; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=$380 >>> 3; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$381; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=$I; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $383=$382 << 1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $384=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $385=(($384+40)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=(($385+($383<<2))|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=$386; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $388=$387; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B=$388; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $389=$B; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F1=$389; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $390=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $391=(($390)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $392=HEAP32[(($391)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $393=$I; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $394=1 << $393; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $395=$392 & $394; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $396=(($395)|0)!=0; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($396) { __label__ = 62; break; } else { __label__ = 61; break; } //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $398=$I; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $399=1 << $398; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $400=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $401=(($400)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $402=HEAP32[(($401)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $403=$402 | $399; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($401)>>2)]=$403; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $405=$B; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $406=(($405+8)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $407=HEAP32[(($406)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $408=$407; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $409=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $410=(($409+16)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $411=HEAPU32[(($410)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $412=(($408)>>>0) >= (($411)>>>0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $413=(($412)&1); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $414=(($413)==(1)); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $415=(($414)|0)!=0; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($415) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $417=$B; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $418=(($417+8)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $419=HEAP32[(($418)>>2)]; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F1=$419; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 64: 
      _abort(); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 65: 
      __label__ = 66; break;
    case 66: 
      var $423=$DV; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $424=$B; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $425=(($424+8)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($425)>>2)]=$423; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $426=$DV; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $427=$F1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $428=(($427+12)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($428)>>2)]=$426; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $429=$F1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $430=$DV; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $431=(($430+8)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($431)>>2)]=$429; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $432=$B; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $433=$DV; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $434=(($433+12)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($434)>>2)]=$432; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 67; break; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 67: 
      var $436=$rsize; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $437=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $438=(($437+8)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($438)>>2)]=$436; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $439=$r; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $440=$1; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $441=(($440+20)|0); //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($441)>>2)]=$439; //@line 4292 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 68; break;
    case 68: 
      var $443=$v; //@line 4294 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $444=$443; //@line 4294 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $445=(($444+8)|0); //@line 4294 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $445; //@line 4294 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break; //@line 4296 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 70: 
      _abort(); //@line 4298 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4298 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_small["X"]=1;

function _tmalloc_large($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $v;
      var $rsize;
      var $t;
      var $idx;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $sizebits;
      var $rst;
      var $rt;
      var $trem;
      var $leftbits;
      var $i;
      var $leastbit;
      var $Y1;
      var $K2;
      var $N3;
      var $trem4;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I;
      var $B;
      var $F5;
      var $TP;
      var $H6;
      var $I7;
      var $X8;
      var $Y9;
      var $N10;
      var $K11;
      var $T;
      var $K12;
      var $C;
      var $F13;
      $2=$m;
      $3=$nb;
      $v=0; //@line 4195 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 4196 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=(((-$4))|0); //@line 4196 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$5; //@line 4196 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=$3; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=$6 >>> 8; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $X=$7; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$X; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0)==0; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      $idx=0; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $12=$X; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)>>>0) > 65535; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      $idx=31; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $16=$X; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$16; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=$Y; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=((($17)-(256))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$18 >>> 16; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$19 & 8; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$20; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$N; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$Y; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$22 << $21; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$23; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=((($23)-(4096))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$24 >>> 16; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=$25 & 4; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$26; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$K; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$N; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=((($28)+($27))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$29; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$K; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$Y; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$31 << $30; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$32; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=((($32)-(16384))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=$33 >>> 16; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$34 & 2; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$35; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$N; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=((($36)+($35))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$37; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=$N; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=(((14)-($38))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$K; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$Y; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=$41 << $40; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$42; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$42 >>> 15; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=((($39)+($43))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$44; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$K; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=$45 << 1; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=$3; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=$K; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=((($48)+(7))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$47 >>> (($49)>>>0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=$50 & 1; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=((($46)+($51))|0); //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $idx=$52; //@line 4199 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break;
    case 7: 
      __label__ = 8; break;
    case 8: 
      var $55=$idx; //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$2; //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+304)|0); //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=(($57+($55<<2))|0); //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($58)>>2)]; //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$59; //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=(($59)|0)!=0; //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($60) { __label__ = 9; break; } else { __label__ = 24; break; } //@line 4200 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $62=$3; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$idx; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=(($63)|0)==31; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($64) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $73 = 0;__label__ = 12; break; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $67=$idx; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=$67 >>> 1; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)+(8))|0); //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=((($69)-(2))|0); //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=(((31)-($70))|0); //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73 = $71;__label__ = 12; break; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $73; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=$62 << $73; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sizebits=$74; //@line 4202 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rst=0; //@line 4203 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 4204 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $76=$t; //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(($76+4)|0); //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($77)>>2)]; //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=$78 & -8; //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=$3; //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=((($79)-($80))|0); //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $trem=$81; //@line 4206 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=$trem; //@line 4207 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=$rsize; //@line 4207 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=(($82)>>>0) < (($83)>>>0); //@line 4207 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($84) { __label__ = 14; break; } else { __label__ = 17; break; } //@line 4207 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $86=$t; //@line 4208 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $v=$86; //@line 4208 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=$trem; //@line 4209 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$87; //@line 4209 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=(($87)|0)==0; //@line 4209 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($88) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4209 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      __label__ = 23; break; //@line 4210 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      __label__ = 17; break; //@line 4211 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $92=$t; //@line 4212 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=(($92+16)|0); //@line 4212 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=(($93+4)|0); //@line 4212 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=HEAP32[(($94)>>2)]; //@line 4212 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rt=$95; //@line 4212 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=$sizebits; //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=$96 >>> 31; //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$97 & 1; //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$t; //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=(($99+16)|0); //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=(($100+($98<<2))|0); //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=HEAP32[(($101)>>2)]; //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$102; //@line 4213 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$rt; //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=(($103)|0)!=0; //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($104) { __label__ = 18; break; } else { __label__ = 20; break; } //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $106=$rt; //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=$t; //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=(($106)|0)!=(($107)|0); //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4214 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $110=$rt; //@line 4215 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rst=$110; //@line 4215 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4215 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $112=$t; //@line 4216 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=(($112)|0)==0; //@line 4216 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($113) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 4216 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $115=$rst; //@line 4217 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$115; //@line 4217 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4218 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $117=$sizebits; //@line 4220 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=$117 << 1; //@line 4220 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sizebits=$118; //@line 4220 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 4221 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      __label__ = 24; break; //@line 4222 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $121=$t; //@line 4223 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=(($121)|0)==0; //@line 4223 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($122) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 4223 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $124=$v; //@line 4223 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=(($124)|0)==0; //@line 4223 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($125) { __label__ = 26; break; } else { __label__ = 29; break; } //@line 4223 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $127=$idx; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=1 << $127; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=$128 << 1; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=$idx; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=1 << $130; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=$131 << 1; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=(((-$132))|0); //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=$129 | $133; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$2; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=(($135+4)|0); //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=HEAP32[(($136)>>2)]; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=$134 & $137; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leftbits=$138; //@line 4224 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$leftbits; //@line 4225 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=(($139)|0)!=0; //@line 4225 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($140) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 4225 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      var $142=$leftbits; //@line 4227 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=$leftbits; //@line 4227 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=(((-$143))|0); //@line 4227 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=$142 & $144; //@line 4227 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leastbit=$145; //@line 4227 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=$leastbit; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=((($146)-(1))|0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y1=$147; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=$148 >>> 12; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$149 & 16; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$150; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$K2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N3=$151; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=$K2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=$153 >>> (($152)>>>0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y1=$154; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=$155 >>> 5; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=$156 & 8; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$157; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=$N3; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=((($158)+($157))|0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N3=$159; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=$K2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=$161 >>> (($160)>>>0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y1=$162; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=$163 >>> 2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=$164 & 4; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$165; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=$N3; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $167=((($166)+($165))|0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N3=$167; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=$K2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=$169 >>> (($168)>>>0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y1=$170; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=$171 >>> 1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=$172 & 2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$173; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $174=$N3; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=((($174)+($173))|0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N3=$175; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=$K2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=$177 >>> (($176)>>>0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y1=$178; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $179=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $180=$179 >>> 1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $181=$180 & 1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$181; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $182=$N3; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=((($182)+($181))|0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N3=$183; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=$K2; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=$185 >>> (($184)>>>0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y1=$186; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $187=$N3; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $188=$Y1; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=((($187)+($188))|0); //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=$189; //@line 4228 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $190=$i; //@line 4229 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $191=$2; //@line 4229 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $192=(($191+304)|0); //@line 4229 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=(($192+($190<<2))|0); //@line 4229 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=HEAP32[(($193)>>2)]; //@line 4229 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$194; //@line 4229 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4230 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break; //@line 4231 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      __label__ = 30; break; //@line 4233 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $198=$t; //@line 4233 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=(($198)|0)!=0; //@line 4233 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($199) { __label__ = 31; break; } else { __label__ = 37; break; } //@line 4233 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $201=$t; //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=(($201+4)|0); //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[(($202)>>2)]; //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=$203 & -8; //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$3; //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=((($204)-($205))|0); //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $trem4=$206; //@line 4234 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$trem4; //@line 4235 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=$rsize; //@line 4235 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=(($207)>>>0) < (($208)>>>0); //@line 4235 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($209) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4235 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $211=$trem4; //@line 4236 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$211; //@line 4236 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=$t; //@line 4237 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $v=$212; //@line 4237 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4238 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $214=$t; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $215=(($214+16)|0); //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $216=(($215)|0); //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $217=HEAP32[(($216)>>2)]; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $218=(($217)|0)!=0; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($218) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $220=$t; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=(($220+16)|0); //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=(($221)|0); //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=HEAP32[(($222)>>2)]; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230 = $223;__label__ = 36; break; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $225=$t; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=(($225+16)|0); //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=(($226+4)|0); //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=HEAP32[(($227)>>2)]; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230 = $228;__label__ = 36; break; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $230; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $t=$230; //@line 4239 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4240 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $232=$v; //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $233=(($232)|0)!=0; //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($233) { __label__ = 38; break; } else { __label__ = 127; break; } //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $235=$rsize; //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $236=$2; //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=(($236+8)|0); //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $238=HEAP32[(($237)>>2)]; //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $239=$3; //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $240=((($238)-($239))|0); //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $241=(($235)>>>0) < (($240)>>>0); //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($241) { __label__ = 39; break; } else { __label__ = 127; break; } //@line 4243 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $243=$v; //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=$243; //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $245=$2; //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=(($245+16)|0); //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=HEAPU32[(($246)>>2)]; //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=(($244)>>>0) >= (($247)>>>0); //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $249=(($248)&1); //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $250=(($249)==(1)); //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $251=(($250)|0)!=0; //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($251) { __label__ = 40; break; } else { __label__ = 126; break; } //@line 4244 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $253=$v; //@line 4245 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $254=$253; //@line 4245 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $255=$3; //@line 4245 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $256=(($254+$255)|0); //@line 4245 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $257=$256; //@line 4245 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $r=$257; //@line 4245 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $258=$v; //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=$258; //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=$r; //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $261=$260; //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $262=(($259)>>>0) < (($261)>>>0); //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $263=(($262)&1); //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $264=(($263)==(1)); //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $265=(($264)|0)!=0; //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($265) { __label__ = 41; break; } else { __label__ = 125; break; } //@line 4247 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $267=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $268=(($267+24)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $269=HEAP32[(($268)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $XP=$269; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $270=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $271=(($270+12)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $272=HEAP32[(($271)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $273=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $274=(($272)|0)!=(($273)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($274) { __label__ = 42; break; } else { __label__ = 46; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $276=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $277=(($276+8)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $278=HEAP32[(($277)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$278; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $280=(($279+12)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $281=HEAP32[(($280)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$281; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=$F; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $283=$282; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $284=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $285=(($284+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $286=HEAPU32[(($285)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=(($283)>>>0) >= (($286)>>>0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=(($287)&1); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $289=(($288)==(1)); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $290=(($289)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($290) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $292=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $293=$F; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $294=(($293+12)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($294)>>2)]=$292; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $295=$F; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $296=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $297=(($296+8)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($297)>>2)]=$295; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      _abort(); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      __label__ = 58; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $301=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $302=(($301+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $303=(($302+4)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$303; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $304=HEAP32[(($303)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$304; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $305=(($304)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($305) { __label__ = 48; break; } else { __label__ = 47; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $307=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $308=(($307+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $309=(($308)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$309; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $310=HEAP32[(($309)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$310; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $311=(($310)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($311) { __label__ = 48; break; } else { __label__ = 57; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      __label__ = 49; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $314=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=(($314+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=(($315+4)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$316; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=HEAP32[(($316)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $318=(($317)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($318) { var $326 = 1;__label__ = 51; break; } else { __label__ = 50; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $320=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=(($320+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $322=(($321)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$322; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=HEAP32[(($322)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=(($323)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326 = $324;__label__ = 51; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $326;
      if ($326) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 52: 
      var $328=$CP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$328; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $329=HEAP32[(($328)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$329; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 53: 
      var $331=$RP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $332=$331; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $333=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $334=(($333+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $335=HEAPU32[(($334)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $336=(($332)>>>0) >= (($335)>>>0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $337=(($336)&1); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $338=(($337)==(1)); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=(($338)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($339) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $341=$RP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($341)>>2)]=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 56; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 55: 
      _abort(); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 56: 
      __label__ = 57; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 57: 
      __label__ = 58; break;
    case 58: 
      var $346=$XP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=(($346)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($347) { __label__ = 59; break; } else { __label__ = 86; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $349=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=(($349+28)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=HEAP32[(($350)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $353=(($352+304)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $354=(($353+($351<<2))|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H=$354; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $355=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $356=$H; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $357=HEAP32[(($356)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=(($355)|0)==(($357)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($358) { __label__ = 60; break; } else { __label__ = 63; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $360=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $361=$H; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($361)>>2)]=$360; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $362=(($360)|0)==0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($362) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $364=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $365=(($364+28)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $366=HEAP32[(($365)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=1 << $366; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=$367 ^ -1; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $370=(($369+4)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $371=HEAP32[(($370)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $372=$371 & $368; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($370)>>2)]=$372; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 62: 
      __label__ = 70; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $375=$XP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $376=$375; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $377=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $378=(($377+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $379=HEAPU32[(($378)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=(($376)>>>0) >= (($379)>>>0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=(($380)&1); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=(($381)==(1)); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $383=(($382)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($383) { __label__ = 64; break; } else { __label__ = 68; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 64: 
      var $385=$XP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=(($385+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=(($386)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $388=HEAP32[(($387)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $389=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $390=(($388)|0)==(($389)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($390) { __label__ = 65; break; } else { __label__ = 66; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 65: 
      var $392=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $393=$XP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $394=(($393+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $395=(($394)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($395)>>2)]=$392; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 67; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 66: 
      var $397=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $398=$XP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $399=(($398+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $400=(($399+4)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($400)>>2)]=$397; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 67; break;
    case 67: 
      __label__ = 69; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 68: 
      _abort(); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break;
    case 70: 
      var $405=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $406=(($405)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($406) { __label__ = 71; break; } else { __label__ = 85; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $408=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $409=$408; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $410=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $411=(($410+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $412=HEAPU32[(($411)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $413=(($409)>>>0) >= (($412)>>>0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $414=(($413)&1); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $415=(($414)==(1)); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $416=(($415)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($416) { __label__ = 72; break; } else { __label__ = 83; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $418=$XP; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $419=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $420=(($419+24)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($420)>>2)]=$418; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $421=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $422=(($421+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $423=(($422)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $424=HEAP32[(($423)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C0=$424; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $425=(($424)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($425) { __label__ = 73; break; } else { __label__ = 77; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $427=$C0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $428=$427; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $429=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $430=(($429+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $431=HEAPU32[(($430)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $432=(($428)>>>0) >= (($431)>>>0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $433=(($432)&1); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $434=(($433)==(1)); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $435=(($434)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($435) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $437=$C0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $438=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $439=(($438+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $440=(($439)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($440)>>2)]=$437; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $441=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $442=$C0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $443=(($442+24)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($443)>>2)]=$441; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 76; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 75: 
      _abort(); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 76: 
      __label__ = 77; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 77: 
      var $447=$v; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $448=(($447+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $449=(($448+4)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $450=HEAP32[(($449)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C1=$450; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $451=(($450)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($451) { __label__ = 78; break; } else { __label__ = 82; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $453=$C1; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $454=$453; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $455=$2; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $456=(($455+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $457=HEAPU32[(($456)>>2)]; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $458=(($454)>>>0) >= (($457)>>>0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $459=(($458)&1); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $460=(($459)==(1)); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $461=(($460)|0)!=0; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($461) { __label__ = 79; break; } else { __label__ = 80; break; } //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $463=$C1; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $464=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $465=(($464+16)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $466=(($465+4)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($466)>>2)]=$463; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $467=$R; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $468=$C1; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $469=(($468+24)|0); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($469)>>2)]=$467; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 81; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 80: 
      _abort(); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 81: 
      __label__ = 82; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 82: 
      __label__ = 84; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 83: 
      _abort(); //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 84: 
      __label__ = 85; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 85: 
      __label__ = 86; break; //@line 4248 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 86: 
      var $477=$rsize; //@line 4249 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $478=(($477)>>>0) < 16; //@line 4249 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($478) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 4249 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 87: 
      var $480=$rsize; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $481=$3; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $482=((($480)+($481))|0); //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $483=$482 | 1; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $484=$483 | 2; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $485=$v; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $486=(($485+4)|0); //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($486)>>2)]=$484; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $487=$v; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $488=$487; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $489=$rsize; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $490=$3; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $491=((($489)+($490))|0); //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $492=(($488+$491)|0); //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $493=$492; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $494=(($493+4)|0); //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $495=HEAP32[(($494)>>2)]; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $496=$495 | 1; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($494)>>2)]=$496; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 124; break; //@line 4250 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $498=$3; //@line 4252 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $499=$498 | 1; //@line 4252 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $500=$499 | 2; //@line 4252 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $501=$v; //@line 4252 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $502=(($501+4)|0); //@line 4252 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($502)>>2)]=$500; //@line 4252 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $503=$rsize; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $504=$503 | 1; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $505=$r; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $506=(($505+4)|0); //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($506)>>2)]=$504; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $507=$rsize; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $508=$r; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $509=$508; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $510=$rsize; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $511=(($509+$510)|0); //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $512=$511; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $513=(($512)|0); //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($513)>>2)]=$507; //@line 4253 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $514=$rsize; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $515=$514 >>> 3; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $516=(($515)>>>0) < 32; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($516) { __label__ = 89; break; } else { __label__ = 96; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $518=$rsize; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $519=$518 >>> 3; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$519; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $520=$I; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $521=$520 << 1; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $522=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $523=(($522+40)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $524=(($523+($521<<2))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $525=$524; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $526=$525; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B=$526; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $527=$B; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F5=$527; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $528=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $529=(($528)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $530=HEAP32[(($529)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $531=$I; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $532=1 << $531; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $533=$530 & $532; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $534=(($533)|0)!=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($534) { __label__ = 91; break; } else { __label__ = 90; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $536=$I; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $537=1 << $536; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $538=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $539=(($538)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $540=HEAP32[(($539)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $541=$540 | $537; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($539)>>2)]=$541; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 95; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $543=$B; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $544=(($543+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $545=HEAP32[(($544)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $546=$545; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $547=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $548=(($547+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $549=HEAPU32[(($548)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $550=(($546)>>>0) >= (($549)>>>0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $551=(($550)&1); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $552=(($551)==(1)); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $553=(($552)|0)!=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($553) { __label__ = 92; break; } else { __label__ = 93; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $555=$B; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $556=(($555+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $557=HEAP32[(($556)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F5=$557; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 94; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 93: 
      _abort(); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 94: 
      __label__ = 95; break;
    case 95: 
      var $561=$r; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $562=$B; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $563=(($562+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($563)>>2)]=$561; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $564=$r; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $565=$F5; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $566=(($565+12)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($566)>>2)]=$564; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $567=$F5; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $568=$r; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $569=(($568+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($569)>>2)]=$567; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $570=$B; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $571=$r; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $572=(($571+12)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($572)>>2)]=$570; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 123; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 96: 
      var $574=$r; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $575=$574; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $TP=$575; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $576=$rsize; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $577=$576 >>> 8; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $X8=$577; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $578=$X8; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $579=(($578)|0)==0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($579) { __label__ = 97; break; } else { __label__ = 98; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 97: 
      $I7=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 102; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 98: 
      var $582=$X8; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $583=(($582)>>>0) > 65535; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($583) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 99: 
      $I7=31; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 101; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 100: 
      var $586=$X8; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y9=$586; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $587=$Y9; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $588=((($587)-(256))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $589=$588 >>> 16; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $590=$589 & 8; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N10=$590; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $591=$N10; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $592=$Y9; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $593=$592 << $591; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y9=$593; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $594=((($593)-(4096))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $595=$594 >>> 16; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $596=$595 & 4; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K11=$596; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $597=$K11; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $598=$N10; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $599=((($598)+($597))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N10=$599; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $600=$K11; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $601=$Y9; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $602=$601 << $600; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y9=$602; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $603=((($602)-(16384))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $604=$603 >>> 16; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $605=$604 & 2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K11=$605; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $606=$N10; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $607=((($606)+($605))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N10=$607; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $608=$N10; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $609=(((14)-($608))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $610=$K11; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $611=$Y9; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $612=$611 << $610; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y9=$612; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $613=$612 >>> 15; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $614=((($609)+($613))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K11=$614; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $615=$K11; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $616=$615 << 1; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $617=$rsize; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $618=$K11; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $619=((($618)+(7))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $620=$617 >>> (($619)>>>0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $621=$620 & 1; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $622=((($616)+($621))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I7=$622; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 101; break;
    case 101: 
      __label__ = 102; break;
    case 102: 
      var $625=$I7; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $626=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $627=(($626+304)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $628=(($627+($625<<2))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H6=$628; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $629=$I7; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $630=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $631=(($630+28)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($631)>>2)]=$629; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $632=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $633=(($632+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $634=(($633+4)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($634)>>2)]=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $635=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $636=(($635+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $637=(($636)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($637)>>2)]=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $638=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $639=(($638+4)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $640=HEAP32[(($639)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $641=$I7; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $642=1 << $641; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $643=$640 & $642; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $644=(($643)|0)!=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($644) { __label__ = 104; break; } else { __label__ = 103; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 103: 
      var $646=$I7; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $647=1 << $646; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $648=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $649=(($648+4)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $650=HEAP32[(($649)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $651=$650 | $647; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($649)>>2)]=$651; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $652=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $653=$H6; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($653)>>2)]=$652; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $654=$H6; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $655=$654; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $656=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $657=(($656+24)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($657)>>2)]=$655; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $658=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $659=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $660=(($659+12)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($660)>>2)]=$658; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $661=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $662=(($661+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($662)>>2)]=$658; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 122; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 104: 
      var $664=$H6; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $665=HEAP32[(($664)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$665; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $666=$rsize; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $667=$I7; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $668=(($667)|0)==31; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($668) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 105: 
      var $677 = 0;__label__ = 107; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 106: 
      var $671=$I7; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $672=$671 >>> 1; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $673=((($672)+(8))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $674=((($673)-(2))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $675=(((31)-($674))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $677 = $675;__label__ = 107; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 107: 
      var $677; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $678=$666 << $677; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K12=$678; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 108; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 108: 
      var $680=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $681=(($680+4)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $682=HEAP32[(($681)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $683=$682 & -8; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $684=$rsize; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $685=(($683)|0)!=(($684)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($685) { __label__ = 109; break; } else { __label__ = 115; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 109: 
      var $687=$K12; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $688=$687 >>> 31; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $689=$688 & 1; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $690=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $691=(($690+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $692=(($691+($689<<2))|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C=$692; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $693=$K12; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $694=$693 << 1; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K12=$694; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $695=$C; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $696=HEAP32[(($695)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $697=(($696)|0)!=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($697) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 110: 
      var $699=$C; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $700=HEAP32[(($699)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$700; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 114; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 111: 
      var $702=$C; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $703=$702; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $704=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $705=(($704+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $706=HEAPU32[(($705)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $707=(($703)>>>0) >= (($706)>>>0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $708=(($707)&1); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $709=(($708)==(1)); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $710=(($709)|0)!=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($710) { __label__ = 112; break; } else { __label__ = 113; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 112: 
      var $712=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $713=$C; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($713)>>2)]=$712; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $714=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $715=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $716=(($715+24)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($716)>>2)]=$714; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $717=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $718=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $719=(($718+12)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($719)>>2)]=$717; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $720=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $721=(($720+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($721)>>2)]=$717; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 121; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 113: 
      _abort(); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 114: 
      __label__ = 120; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 115: 
      var $725=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $726=(($725+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $727=HEAP32[(($726)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F13=$727; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $728=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $729=$728; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $730=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $731=(($730+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $732=HEAPU32[(($731)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $733=(($729)>>>0) >= (($732)>>>0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($733) { __label__ = 116; break; } else { var $742 = 0;__label__ = 117; break; } //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 116: 
      var $735=$F13; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $736=$735; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $737=$2; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $738=(($737+16)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $739=HEAPU32[(($738)>>2)]; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $740=(($736)>>>0) >= (($739)>>>0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $742 = $740;__label__ = 117; break;
    case 117: 
      var $742;
      var $743=(($742)&1);
      var $744=(($743)==(1));
      var $745=(($744)|0)!=0;
      if ($745) { __label__ = 118; break; } else { __label__ = 119; break; }
    case 118: 
      var $747=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $748=$F13; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $749=(($748+12)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($749)>>2)]=$747; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $750=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $751=(($750+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($751)>>2)]=$747; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $752=$F13; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $753=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $754=(($753+8)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($754)>>2)]=$752; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $755=$T; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $756=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $757=(($756+12)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($757)>>2)]=$755; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $758=$TP; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $759=(($758+24)|0); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($759)>>2)]=0; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 121; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 119: 
      _abort(); //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 120: 
      __label__ = 108; break; //@line 4254 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 121: 
      __label__ = 122; break;
    case 122: 
      __label__ = 123; break;
    case 123: 
      __label__ = 124; break;
    case 124: 
      var $766=$v; //@line 4256 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $767=$766; //@line 4256 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $768=(($767+8)|0); //@line 4256 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$768; //@line 4256 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 128; break; //@line 4256 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 125: 
      __label__ = 126; break; //@line 4258 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 126: 
      _abort(); //@line 4259 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4259 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 127: 
      $1=0; //@line 4261 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 128; break; //@line 4261 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 128: 
      var $773=$1; //@line 4262 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $773; //@line 4262 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_large["X"]=1;

function _sys_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $tbase;
      var $tsize;
      var $mmap_flag;
      var $mem;
      var $br;
      var $ss;
      var $asize;
      var $base;
      var $esize;
      var $end;
      var $asize1;
      var $br2;
      var $end3;
      var $ssize;
      var $mn;
      var $sp;
      var $oldbase;
      var $rsize;
      var $p;
      var $r;
      $2=$m;
      $3=$nb;
      $tbase=-1; //@line 3876 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=0; //@line 3877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mmap_flag=0; //@line 3878 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[((((_mparams)|0))>>2)]; //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=(($4)|0)!=0; //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($5) { var $10 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $7=_init_mparams(); //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=(($7)|0)!=0; //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10 = $8;__label__ = 4; break; //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $10;
      var $11=(($10)&1); //@line 3880 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$2; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12+440)|0); //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($13)>>2)]; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$14 & 0; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($15)|0)!=0; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $18=$3; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=HEAPU32[((((_mparams+12)|0))>>2)]; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=(($18)>>>0) >= (($19)>>>0); //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $22=$2; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=(($22+12)|0); //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($23)>>2)]; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24)|0)!=0; //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 3883 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $27=$2; //@line 3884 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$3; //@line 3884 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=_mmap_alloc($27, $28); //@line 3884 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$29; //@line 3884 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$mem; //@line 3885 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($30)|0)!=0; //@line 3885 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3885 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $33=$mem; //@line 3886 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$33; //@line 3886 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 3886 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      __label__ = 10; break; //@line 3887 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $36=$2; //@line 3911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=(($36+440)|0); //@line 3911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($37)>>2)]; //@line 3911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=$38 & 4; //@line 3911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=(($39)|0)!=0; //@line 3911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($40) { __label__ = 43; break; } else { __label__ = 11; break; } //@line 3911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      $br=-1; //@line 3912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=$2; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+24)|0); //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($43)>>2)]; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=(($44)|0)==0; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($45) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $55 = 0;__label__ = 14; break; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $48=$2; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=$2; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=(($49+24)|0); //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=HEAP32[(($50)>>2)]; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$51; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=_segment_holding($48, $52); //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55 = $53;__label__ = 14; break; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $55; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $ss=$55; //@line 3913 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asize=0; //@line 3914 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$ss; //@line 3917 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($56)|0)==0; //@line 3917 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($57) { __label__ = 15; break; } else { __label__ = 23; break; } //@line 3917 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $59=_sbrk(0); //@line 3918 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $base=$59; //@line 3918 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$base; //@line 3919 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=(($60)|0)!=-1; //@line 3919 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($61) { __label__ = 16; break; } else { __label__ = 22; break; } //@line 3919 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $63=$3; //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=((($63)+(48))|0); //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=((($65)-(1))|0); //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=((($64)+($66))|0); //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)-(1))|0); //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$69 ^ -1; //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=$67 & $70; //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asize=$71; //@line 3920 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=$base; //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=$72; //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=((($74)-(1))|0); //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=$73 & $75; //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(($76)|0)==0; //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($77) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 3922 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $79=$base; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=$79; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=((($81)-(1))|0); //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=((($80)+($82))|0); //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=((($84)-(1))|0); //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=$85 ^ -1; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=$83 & $86; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=$base; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=$88; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=((($87)-($89))|0); //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=$asize; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=((($91)+($90))|0); //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asize=$92; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 3923 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $94=$asize; //@line 3925 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=(($94)>>>0) < 2147483647; //@line 3925 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($95) { __label__ = 19; break; } else { __label__ = 21; break; } //@line 3925 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $97=$asize; //@line 3926 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=_sbrk($97); //@line 3926 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $br=$98; //@line 3926 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$base; //@line 3926 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=(($98)|0)==(($99)|0); //@line 3926 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($100) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 3926 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $102=$base; //@line 3927 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tbase=$102; //@line 3927 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$asize; //@line 3928 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=$103; //@line 3928 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 3929 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break; //@line 3930 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      __label__ = 27; break; //@line 3931 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $107=$3; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=$2; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=(($108+12)|0); //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=HEAP32[(($109)>>2)]; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=((($107)-($110))|0); //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=((($111)+(48))|0); //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=((($113)-(1))|0); //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=((($112)+($114))|0); //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=((($116)-(1))|0); //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=$117 ^ -1; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=$115 & $118; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asize=$119; //@line 3934 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=$asize; //@line 3936 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=(($120)>>>0) < 2147483647; //@line 3936 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($121) { __label__ = 24; break; } else { __label__ = 26; break; } //@line 3936 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $123=$asize; //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=_sbrk($123); //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $br=$124; //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=$ss; //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=(($125)|0); //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=HEAP32[(($126)>>2)]; //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=$ss; //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=(($128+4)|0); //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=HEAP32[(($129)>>2)]; //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=(($127+$130)|0); //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=(($124)|0)==(($131)|0); //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($132) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 3937 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $134=$br; //@line 3938 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tbase=$134; //@line 3938 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$asize; //@line 3939 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=$135; //@line 3939 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 3940 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      __label__ = 27; break;
    case 27: 
      var $138=$tbase; //@line 3943 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=(($138)|0)==-1; //@line 3943 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($139) { __label__ = 28; break; } else { __label__ = 42; break; } //@line 3943 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $141=$br; //@line 3944 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=(($141)|0)!=-1; //@line 3944 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($142) { __label__ = 29; break; } else { __label__ = 38; break; } //@line 3944 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $144=$asize; //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=(($144)>>>0) < 2147483647; //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($145) { __label__ = 30; break; } else { __label__ = 37; break; } //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $147=$asize; //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=$3; //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=((($148)+(48))|0); //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=(($147)>>>0) < (($149)>>>0); //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($150) { __label__ = 31; break; } else { __label__ = 37; break; } //@line 3945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $152=$3; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=((($152)+(48))|0); //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=$asize; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=((($153)-($154))|0); //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=((($156)-(1))|0); //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=((($155)+($157))|0); //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=((($159)-(1))|0); //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=$160 ^ -1; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=$158 & $161; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $esize=$162; //@line 3947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=$esize; //@line 3948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=(($163)>>>0) < 2147483647; //@line 3948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($164) { __label__ = 32; break; } else { __label__ = 36; break; } //@line 3948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $166=$esize; //@line 3949 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $167=_sbrk($166); //@line 3949 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $end=$167; //@line 3949 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=$end; //@line 3950 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=(($168)|0)!=-1; //@line 3950 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($169) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 3950 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $171=$esize; //@line 3951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=$asize; //@line 3951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=((($172)+($171))|0); //@line 3951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asize=$173; //@line 3951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 3951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $175=$asize; //@line 3953 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=(((-$175))|0); //@line 3953 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=_sbrk($176); //@line 3953 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $br=-1; //@line 3954 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break;
    case 35: 
      __label__ = 36; break; //@line 3956 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      __label__ = 37; break; //@line 3957 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      __label__ = 38; break; //@line 3958 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $182=$br; //@line 3959 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=(($182)|0)!=-1; //@line 3959 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($183) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 3959 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $185=$br; //@line 3960 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tbase=$185; //@line 3960 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=$asize; //@line 3961 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=$186; //@line 3961 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break; //@line 3962 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $188=$2; //@line 3964 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=(($188+440)|0); //@line 3964 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $190=HEAP32[(($189)>>2)]; //@line 3964 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $191=$190 | 4; //@line 3964 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($189)>>2)]=$191; //@line 3964 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break;
    case 41: 
      __label__ = 42; break; //@line 3965 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      __label__ = 43; break; //@line 3968 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $195=$tbase; //@line 3982 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=(($195)|0)==-1; //@line 3982 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($196) { __label__ = 44; break; } else { __label__ = 53; break; } //@line 3982 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $198=$3; //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=((($198)+(48))|0); //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $201=((($200)-(1))|0); //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=((($199)+($201))|0); //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=((($203)-(1))|0); //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$204 ^ -1; //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=$202 & $205; //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asize1=$206; //@line 3983 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$asize1; //@line 3984 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=(($207)>>>0) < 2147483647; //@line 3984 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($208) { __label__ = 45; break; } else { __label__ = 52; break; } //@line 3984 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      $br2=-1; //@line 3985 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $end3=-1; //@line 3986 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=$asize1; //@line 3988 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=_sbrk($210); //@line 3988 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $br2=$211; //@line 3988 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=_sbrk(0); //@line 3989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $end3=$212; //@line 3989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=$br2; //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $214=(($213)|0)!=-1; //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($214) { __label__ = 46; break; } else { __label__ = 51; break; } //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $216=$end3; //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $217=(($216)|0)!=-1; //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($217) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $219=$br2; //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $220=$end3; //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=(($219)>>>0) < (($220)>>>0); //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($221) { __label__ = 48; break; } else { __label__ = 51; break; } //@line 3991 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $223=$end3; //@line 3992 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=$br2; //@line 3992 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $225=$223; //@line 3992 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=$224; //@line 3992 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=((($225)-($226))|0); //@line 3992 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $ssize=$227; //@line 3992 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=$ssize; //@line 3993 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $229=$3; //@line 3993 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230=((($229)+(40))|0); //@line 3993 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $231=(($228)>>>0) > (($230)>>>0); //@line 3993 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($231) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 3993 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $233=$br2; //@line 3994 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tbase=$233; //@line 3994 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $234=$ssize; //@line 3995 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=$234; //@line 3995 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 3996 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      __label__ = 51; break; //@line 3997 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      __label__ = 52; break; //@line 3998 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break; //@line 3999 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 53: 
      var $239=$tbase; //@line 4001 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $240=(($239)|0)!=-1; //@line 4001 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($240) { __label__ = 54; break; } else { __label__ = 92; break; } //@line 4001 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $242=$tsize; //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=$2; //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=(($243+432)|0); //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $245=HEAP32[(($244)>>2)]; //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=((($245)+($242))|0); //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($244)>>2)]=$246; //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=$2; //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=(($247+436)|0); //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $249=HEAPU32[(($248)>>2)]; //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $250=(($246)>>>0) > (($249)>>>0); //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($250) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 4003 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 55: 
      var $252=$2; //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $253=(($252+432)|0); //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $254=HEAP32[(($253)>>2)]; //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $255=$2; //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $256=(($255+436)|0); //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($256)>>2)]=$254; //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 56; break; //@line 4004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 56: 
      var $258=$2; //@line 4006 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=(($258+24)|0); //@line 4006 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=HEAP32[(($259)>>2)]; //@line 4006 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $261=(($260)|0)!=0; //@line 4006 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($261) { __label__ = 64; break; } else { __label__ = 57; break; } //@line 4006 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $263=$2; //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $264=(($263+16)|0); //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $265=HEAP32[(($264)>>2)]; //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $266=(($265)|0)==0; //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($266) { __label__ = 59; break; } else { __label__ = 58; break; } //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 58: 
      var $268=$tbase; //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $269=$2; //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $270=(($269+16)|0); //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $271=HEAPU32[(($270)>>2)]; //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $272=(($268)>>>0) < (($271)>>>0); //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($272) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4007 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $274=$tbase; //@line 4008 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $275=$2; //@line 4008 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=(($275+16)|0); //@line 4008 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($276)>>2)]=$274; //@line 4008 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 60; break; //@line 4008 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $278=$tbase; //@line 4009 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=$2; //@line 4009 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $280=(($279+444)|0); //@line 4009 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $281=(($280)|0); //@line 4009 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($281)>>2)]=$278; //@line 4009 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=$tsize; //@line 4010 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $283=$2; //@line 4010 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $284=(($283+444)|0); //@line 4010 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $285=(($284+4)|0); //@line 4010 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($285)>>2)]=$282; //@line 4010 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $286=$mmap_flag; //@line 4011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=$2; //@line 4011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=(($287+444)|0); //@line 4011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $289=(($288+12)|0); //@line 4011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($289)>>2)]=$286; //@line 4011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $290=HEAP32[((((_mparams)|0))>>2)]; //@line 4012 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $291=$2; //@line 4012 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $292=(($291+36)|0); //@line 4012 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($292)>>2)]=$290; //@line 4012 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $293=$2; //@line 4013 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $294=(($293+32)|0); //@line 4013 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($294)>>2)]=-1; //@line 4013 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $295=$2; //@line 4014 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _init_bins($295); //@line 4014 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $296=$2; //@line 4016 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $297=(($296)|0)==((__gm_)|0); //@line 4016 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($297) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4016 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $299=$2; //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $300=$tbase; //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $301=$300; //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $302=$tsize; //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $303=((($302)-(40))|0); //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _init_top($299, $301, $303); //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4017 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $305=$2; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $306=$305; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $307=((($306)-(8))|0); //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $308=$307; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $309=$308; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $310=$2; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $311=$310; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $312=((($311)-(8))|0); //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $313=$312; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $314=(($313+4)|0); //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=HEAP32[(($314)>>2)]; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=$315 & -8; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=(($309+$316)|0); //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $318=$317; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mn=$318; //@line 4022 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $319=$2; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $320=$mn; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=$tbase; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $322=$tsize; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=(($321+$322)|0); //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=$mn; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=$324; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=$323; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $327=$325; //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $328=((($326)-($327))|0); //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $329=((($328)-(40))|0); //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _init_top($319, $320, $329); //@line 4023 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break;
    case 63: 
      __label__ = 89; break; //@line 4025 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 64: 
      var $332=$2; //@line 4029 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $333=(($332+444)|0); //@line 4029 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$333; //@line 4029 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 65: 
      var $335=$sp; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $336=(($335)|0)!=0; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($336) { __label__ = 66; break; } else { var $348 = 0;__label__ = 67; break; } //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 66: 
      var $338=$tbase; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=$sp; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=(($339)|0); //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=HEAP32[(($340)>>2)]; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=$sp; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $343=(($342+4)|0); //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $344=HEAP32[(($343)>>2)]; //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $345=(($341+$344)|0); //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=(($338)|0)!=(($345)|0); //@line 4031 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348 = $346;__label__ = 67; break;
    case 67: 
      var $348;
      if ($348) { __label__ = 68; break; } else { __label__ = 69; break; }
    case 68: 
      var $350=$sp; //@line 4032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+8)|0); //@line 4032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=HEAP32[(($351)>>2)]; //@line 4032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$352; //@line 4032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 69: 
      var $354=$sp; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $355=(($354)|0)!=0; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($355) { __label__ = 70; break; } else { __label__ = 75; break; } //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 70: 
      var $357=$sp; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=(($357+12)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=HEAP32[(($358)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $360=$359 & 8; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $361=(($360)|0)!=0; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($361) { __label__ = 75; break; } else { __label__ = 71; break; } //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $363=$sp; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $364=(($363+12)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $365=HEAP32[(($364)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $366=$365 & 0; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=$mmap_flag; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=(($366)|0)==(($367)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($368) { __label__ = 72; break; } else { __label__ = 75; break; } //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $370=$2; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $371=(($370+24)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $372=HEAP32[(($371)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $373=$372; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374=$sp; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $375=(($374)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $376=HEAPU32[(($375)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $377=(($373)>>>0) >= (($376)>>>0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($377) { __label__ = 73; break; } else { __label__ = 75; break; } //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $379=$2; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=(($379+24)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=HEAP32[(($380)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=$381; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $383=$sp; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $384=(($383)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($384)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=$sp; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=(($386+4)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $388=HEAP32[(($387)>>2)]; //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $389=(($385+$388)|0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $390=(($382)>>>0) < (($389)>>>0); //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($390) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 4033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $392=$tsize; //@line 4037 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $393=$sp; //@line 4037 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $394=(($393+4)|0); //@line 4037 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $395=HEAP32[(($394)>>2)]; //@line 4037 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $396=((($395)+($392))|0); //@line 4037 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($394)>>2)]=$396; //@line 4037 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $397=$2; //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $398=$2; //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $399=(($398+24)|0); //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $400=HEAP32[(($399)>>2)]; //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $401=$2; //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $402=(($401+12)|0); //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $403=HEAP32[(($402)>>2)]; //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $404=$tsize; //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $405=((($403)+($404))|0); //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _init_top($397, $400, $405); //@line 4038 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 88; break; //@line 4039 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 75: 
      var $407=$tbase; //@line 4041 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $408=$2; //@line 4041 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $409=(($408+16)|0); //@line 4041 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $410=HEAPU32[(($409)>>2)]; //@line 4041 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $411=(($407)>>>0) < (($410)>>>0); //@line 4041 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($411) { __label__ = 76; break; } else { __label__ = 77; break; } //@line 4041 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 76: 
      var $413=$tbase; //@line 4042 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $414=$2; //@line 4042 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $415=(($414+16)|0); //@line 4042 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($415)>>2)]=$413; //@line 4042 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 77; break; //@line 4042 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 77: 
      var $417=$2; //@line 4043 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $418=(($417+444)|0); //@line 4043 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$418; //@line 4043 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 78; break; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $420=$sp; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $421=(($420)|0)!=0; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($421) { __label__ = 79; break; } else { var $431 = 0;__label__ = 80; break; } //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $423=$sp; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $424=(($423)|0); //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $425=HEAP32[(($424)>>2)]; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $426=$tbase; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $427=$tsize; //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $428=(($426+$427)|0); //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $429=(($425)|0)!=(($428)|0); //@line 4044 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $431 = $429;__label__ = 80; break;
    case 80: 
      var $431;
      if ($431) { __label__ = 81; break; } else { __label__ = 82; break; }
    case 81: 
      var $433=$sp; //@line 4045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $434=(($433+8)|0); //@line 4045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $435=HEAP32[(($434)>>2)]; //@line 4045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$435; //@line 4045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 78; break; //@line 4045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 82: 
      var $437=$sp; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $438=(($437)|0)!=0; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($438) { __label__ = 83; break; } else { __label__ = 86; break; } //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 83: 
      var $440=$sp; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $441=(($440+12)|0); //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $442=HEAP32[(($441)>>2)]; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $443=$442 & 8; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $444=(($443)|0)!=0; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($444) { __label__ = 86; break; } else { __label__ = 84; break; } //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 84: 
      var $446=$sp; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $447=(($446+12)|0); //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $448=HEAP32[(($447)>>2)]; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $449=$448 & 0; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $450=$mmap_flag; //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $451=(($449)|0)==(($450)|0); //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($451) { __label__ = 85; break; } else { __label__ = 86; break; } //@line 4046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 85: 
      var $453=$sp; //@line 4049 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $454=(($453)|0); //@line 4049 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $455=HEAP32[(($454)>>2)]; //@line 4049 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldbase=$455; //@line 4049 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $456=$tbase; //@line 4050 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $457=$sp; //@line 4050 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $458=(($457)|0); //@line 4050 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($458)>>2)]=$456; //@line 4050 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $459=$tsize; //@line 4051 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $460=$sp; //@line 4051 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $461=(($460+4)|0); //@line 4051 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $462=HEAP32[(($461)>>2)]; //@line 4051 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $463=((($462)+($459))|0); //@line 4051 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($461)>>2)]=$463; //@line 4051 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $464=$2; //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $465=$tbase; //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $466=$oldbase; //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $467=$3; //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $468=_prepend_alloc($464, $465, $466, $467); //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$468; //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 86: 
      var $470=$2; //@line 4055 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $471=$tbase; //@line 4055 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $472=$tsize; //@line 4055 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $473=$mmap_flag; //@line 4055 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _add_segment($470, $471, $472, $473); //@line 4055 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 87; break;
    case 87: 
      __label__ = 88; break;
    case 88: 
      __label__ = 89; break;
    case 89: 
      var $477=$3; //@line 4059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $478=$2; //@line 4059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $479=(($478+12)|0); //@line 4059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $480=HEAPU32[(($479)>>2)]; //@line 4059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $481=(($477)>>>0) < (($480)>>>0); //@line 4059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($481) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 4059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $483=$3; //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $484=$2; //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $485=(($484+12)|0); //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $486=HEAP32[(($485)>>2)]; //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $487=((($486)-($483))|0); //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($485)>>2)]=$487; //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$487; //@line 4060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $488=$2; //@line 4061 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $489=(($488+24)|0); //@line 4061 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $490=HEAP32[(($489)>>2)]; //@line 4061 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$490; //@line 4061 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $491=$p; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $492=$491; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $493=$3; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $494=(($492+$493)|0); //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $495=$494; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $496=$2; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $497=(($496+24)|0); //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($497)>>2)]=$495; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $r=$495; //@line 4062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $498=$rsize; //@line 4063 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $499=$498 | 1; //@line 4063 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $500=$r; //@line 4063 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $501=(($500+4)|0); //@line 4063 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($501)>>2)]=$499; //@line 4063 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $502=$3; //@line 4064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $503=$502 | 1; //@line 4064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $504=$503 | 2; //@line 4064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $505=$p; //@line 4064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $506=(($505+4)|0); //@line 4064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($506)>>2)]=$504; //@line 4064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $507=$p; //@line 4067 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $508=$507; //@line 4067 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $509=(($508+8)|0); //@line 4067 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$509; //@line 4067 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4067 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 91: 
      __label__ = 92; break; //@line 4069 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $512=___errno(); //@line 4071 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($512)>>2)]=12; //@line 4071 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=0; //@line 4072 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4072 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 93: 
      var $514=$1; //@line 4073 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $514; //@line 4073 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_alloc["X"]=1;

function _free($mem) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $p;
      var $psize;
      var $next;
      var $prevsize;
      var $prev;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F1;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F2;
      var $B3;
      var $I4;
      var $TP5;
      var $XP6;
      var $R7;
      var $F8;
      var $RP9;
      var $CP10;
      var $H11;
      var $C012;
      var $C113;
      var $I14;
      var $B15;
      var $F16;
      var $tp;
      var $H17;
      var $I18;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K19;
      var $C;
      var $F20;
      $1=$mem;
      var $2=$1; //@line 4741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)|0)!=0; //@line 4741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($3) { __label__ = 3; break; } else { __label__ = 197; break; } //@line 4741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=$1; //@line 4742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=((($5)-(8))|0); //@line 4742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=$6; //@line 4742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$7; //@line 4742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$p; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$8; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=(($9)>>>0) >= (($10)>>>0); //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($11) { __label__ = 4; break; } else { var $19 = 0;__label__ = 5; break; } //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13=$p; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+4)|0); //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($14)>>2)]; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & 3; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(($16)|0)!=1; //@line 4754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19 = $17;__label__ = 5; break;
    case 5: 
      var $19;
      var $20=(($19)&1);
      var $21=(($20)==(1));
      var $22=(($21)|0)!=0;
      if ($22) { __label__ = 6; break; } else { __label__ = 194; break; }
    case 6: 
      var $24=$p; //@line 4755 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24+4)|0); //@line 4755 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($25)>>2)]; //@line 4755 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$26 & -8; //@line 4755 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$27; //@line 4755 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$p; //@line 4756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 4756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$psize; //@line 4756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($29+$30)|0); //@line 4756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$31; //@line 4756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $next=$32; //@line 4756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$p; //@line 4757 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=(($33+4)|0); //@line 4757 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=HEAP32[(($34)>>2)]; //@line 4757 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$35 & 1; //@line 4757 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=(($36)|0)!=0; //@line 4757 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($37) { __label__ = 78; break; } else { __label__ = 7; break; } //@line 4757 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $39=$p; //@line 4758 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=(($39)|0); //@line 4758 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=HEAP32[(($40)>>2)]; //@line 4758 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $prevsize=$41; //@line 4758 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=$p; //@line 4759 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+4)|0); //@line 4759 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($43)>>2)]; //@line 4759 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$44 & 3; //@line 4759 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0)==0; //@line 4759 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($46) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4759 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $48=$prevsize; //@line 4760 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=((($48)+(16))|0); //@line 4760 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$psize; //@line 4760 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=((($50)+($49))|0); //@line 4760 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$51; //@line 4760 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4763 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $53=$p; //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=$53; //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=$prevsize; //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=(((-$55))|0); //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($54+$56)|0); //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=$57; //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $prev=$58; //@line 4766 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$prevsize; //@line 4767 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$psize; //@line 4767 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=((($60)+($59))|0); //@line 4767 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$61; //@line 4767 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=$prev; //@line 4768 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$62; //@line 4768 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$prev; //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=$63; //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=(($64)>>>0) >= (($65)>>>0); //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=(($66)&1); //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=(($67)==(1)); //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0)!=0; //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($69) { __label__ = 10; break; } else { __label__ = 75; break; } //@line 4769 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $71=$p; //@line 4770 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4770 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=(($71)|0)!=(($72)|0); //@line 4770 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($73) { __label__ = 11; break; } else { __label__ = 71; break; } //@line 4770 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $75=$prevsize; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=$75 >>> 3; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(($76)>>>0) < 32; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($77) { __label__ = 12; break; } else { __label__ = 24; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $79=$p; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+8)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($80)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$81; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=$p; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=(($82+12)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[(($83)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B=$84; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$prevsize; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=$85 >>> 3; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$86; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=$F; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=$B; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=(($87)|0)==(($88)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($89) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $91=$I; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=1 << $91; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=$92 ^ -1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=HEAP32[((((__gm_)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=$94 & $93; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$95; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $97=$F; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$I; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$98 << 1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=((((__gm_+40)|0)+($99<<2))|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$100; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=$101; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=(($97)|0)==(($102)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($103) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $105=$F; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=$105; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=(($106)>>>0) >= (($107)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 16; break; } else { var $125 = 0;__label__ = 19; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $110=$B; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=$I; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=$111 << 1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=((((__gm_+40)|0)+($112<<2))|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=$113; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=$114; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=(($110)|0)==(($115)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($116) { var $123 = 1;__label__ = 18; break; } else { __label__ = 17; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $118=$B; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=$118; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=(($119)>>>0) >= (($120)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123 = $121;__label__ = 18; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $123;
      var $125 = $123;__label__ = 19; break;
    case 19: 
      var $125;
      var $126=(($125)&1);
      var $127=(($126)==(1));
      var $128=(($127)|0)!=0;
      if ($128) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      var $130=$B; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=$F; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=(($131+12)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($132)>>2)]=$130; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=$F; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=$B; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=(($134+8)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($135)>>2)]=$133; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 22; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      __label__ = 23; break;
    case 23: 
      __label__ = 70; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $140=$p; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=$140; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $TP=$141; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=(($142+24)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=HEAP32[(($143)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $XP=$144; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=(($145+12)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=HEAP32[(($146)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=(($147)|0)!=(($148)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($149) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $151=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=(($151+8)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=HEAP32[(($152)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F1=$153; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=(($154+12)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=HEAP32[(($155)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$156; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=$F1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=(($158)>>>0) >= (($159)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=(($160)&1); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=(($161)==(1)); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=(($162)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($163) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $165=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=$F1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $167=(($166+12)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($167)>>2)]=$165; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=$F1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=(($169+8)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($170)>>2)]=$168; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 41; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $174=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=(($174+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=(($175+4)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$176; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($176)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$177; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=(($177)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($178) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $180=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $181=(($180+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $182=(($181)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$182; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=HEAP32[(($182)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$183; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=(($183)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($184) { __label__ = 31; break; } else { __label__ = 40; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      __label__ = 32; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $187=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $188=(($187+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=(($188+4)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$189; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $190=HEAP32[(($189)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $191=(($190)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($191) { var $199 = 1;__label__ = 34; break; } else { __label__ = 33; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $193=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=(($193+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=(($194)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$195; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=HEAP32[(($195)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=(($196)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199 = $197;__label__ = 34; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $199;
      if ($199) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $201=$CP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$201; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=HEAP32[(($201)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$202; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $204=$RP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$204; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=(($205)>>>0) >= (($206)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=(($207)&1); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=(($208)==(1)); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=(($209)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($210) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $212=$RP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($212)>>2)]=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      __label__ = 40; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      __label__ = 41; break;
    case 41: 
      var $217=$XP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $218=(($217)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($218) { __label__ = 42; break; } else { __label__ = 69; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $220=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=(($220+28)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=HEAP32[(($221)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=((((__gm_+304)|0)+($222<<2))|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H=$223; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $225=$H; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=HEAP32[(($225)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=(($224)|0)==(($226)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($227) { __label__ = 43; break; } else { __label__ = 46; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $229=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230=$H; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($230)>>2)]=$229; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $231=(($229)|0)==0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($231) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $233=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $234=(($233+28)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $235=HEAP32[(($234)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $236=1 << $235; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=$236 ^ -1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $238=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $239=$238 & $237; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$239; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      __label__ = 53; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $242=$XP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=$242; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $245=(($243)>>>0) >= (($244)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=(($245)&1); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=(($246)==(1)); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=(($247)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($248) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $250=$XP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $251=(($250+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $252=(($251)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $253=HEAP32[(($252)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $254=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $255=(($253)|0)==(($254)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($255) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $257=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $258=$XP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=(($258+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=(($259)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($260)>>2)]=$257; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $262=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $263=$XP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $264=(($263+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $265=(($264+4)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($265)>>2)]=$262; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break;
    case 50: 
      __label__ = 52; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break;
    case 53: 
      var $270=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $271=(($270)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($271) { __label__ = 54; break; } else { __label__ = 68; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $273=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $274=$273; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $275=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=(($274)>>>0) >= (($275)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $277=(($276)&1); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $278=(($277)==(1)); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=(($278)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($279) { __label__ = 55; break; } else { __label__ = 66; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 55: 
      var $281=$XP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $283=(($282+24)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($283)>>2)]=$281; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $284=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $285=(($284+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $286=(($285)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=HEAP32[(($286)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C0=$287; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=(($287)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($288) { __label__ = 56; break; } else { __label__ = 60; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 56: 
      var $290=$C0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $291=$290; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $292=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $293=(($291)>>>0) >= (($292)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $294=(($293)&1); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $295=(($294)==(1)); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $296=(($295)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($296) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $298=$C0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $299=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $300=(($299+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $301=(($300)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($301)>>2)]=$298; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $302=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $303=$C0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $304=(($303+24)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($304)>>2)]=$302; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 59; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 58: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 59: 
      __label__ = 60; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $308=$TP; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $309=(($308+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $310=(($309+4)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $311=HEAP32[(($310)>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C1=$311; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $312=(($311)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($312) { __label__ = 61; break; } else { __label__ = 65; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $314=$C1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=$314; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=(($315)>>>0) >= (($316)>>>0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $318=(($317)&1); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $319=(($318)==(1)); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $320=(($319)|0)!=0; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($320) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $322=$C1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=(($323+16)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=(($324+4)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($325)>>2)]=$322; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=$R; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $327=$C1; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $328=(($327+24)|0); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($328)>>2)]=$326; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 63: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 64: 
      __label__ = 65; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 65: 
      __label__ = 67; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 66: 
      _abort(); //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 67: 
      __label__ = 68; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 68: 
      __label__ = 69; break; //@line 4771 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break;
    case 70: 
      __label__ = 74; break; //@line 4772 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $338=$next; //@line 4773 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=(($338+4)|0); //@line 4773 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=HEAP32[(($339)>>2)]; //@line 4773 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=$340 & 3; //@line 4773 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=(($341)|0)==3; //@line 4773 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($342) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 4773 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $344=$psize; //@line 4774 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$344; //@line 4774 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $345=$next; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=(($345+4)|0); //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=HEAP32[(($346)>>2)]; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348=$347 & -2; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($346)>>2)]=$348; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $349=$psize; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=$349 | 1; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=$p; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=(($351+4)|0); //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($352)>>2)]=$350; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $353=$psize; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $354=$p; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $355=$354; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $356=$psize; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $357=(($355+$356)|0); //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=$357; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=(($358)|0); //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($359)>>2)]=$353; //@line 4775 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4776 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 73: 
      __label__ = 74; break;
    case 74: 
      __label__ = 76; break; //@line 4778 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 75: 
      __label__ = 195; break; //@line 4780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 76: 
      __label__ = 77; break;
    case 77: 
      __label__ = 78; break; //@line 4782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $366=$p; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=$366; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=$next; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=$368; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $370=(($367)>>>0) < (($369)>>>0); //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($370) { __label__ = 79; break; } else { var $378 = 0;__label__ = 80; break; } //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $372=$next; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $373=(($372+4)|0); //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374=HEAP32[(($373)>>2)]; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $375=$374 & 1; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $376=(($375)|0)!=0; //@line 4784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $378 = $376;__label__ = 80; break;
    case 80: 
      var $378;
      var $379=(($378)&1);
      var $380=(($379)==(1));
      var $381=(($380)|0)!=0;
      if ($381) { __label__ = 81; break; } else { __label__ = 193; break; }
    case 81: 
      var $383=$next; //@line 4785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $384=(($383+4)|0); //@line 4785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($384)>>2)]; //@line 4785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=$385 & 2; //@line 4785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=(($386)|0)!=0; //@line 4785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($387) { __label__ = 154; break; } else { __label__ = 82; break; } //@line 4785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 82: 
      var $389=$next; //@line 4786 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $390=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4786 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $391=(($389)|0)==(($390)|0); //@line 4786 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($391) { __label__ = 83; break; } else { __label__ = 88; break; } //@line 4786 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 83: 
      var $393=$psize; //@line 4787 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $394=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4787 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $395=((($394)+($393))|0); //@line 4787 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$395; //@line 4787 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=$395; //@line 4787 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $396=$p; //@line 4788 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$396; //@line 4788 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $397=$tsize; //@line 4789 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $398=$397 | 1; //@line 4789 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $399=$p; //@line 4789 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $400=(($399+4)|0); //@line 4789 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($400)>>2)]=$398; //@line 4789 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $401=$p; //@line 4790 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $402=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4790 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $403=(($401)|0)==(($402)|0); //@line 4790 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($403) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 4790 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 84: 
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4791 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 4793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 85: 
      var $406=$tsize; //@line 4794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $407=HEAPU32[((((__gm_+28)|0))>>2)]; //@line 4794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $408=(($406)>>>0) > (($407)>>>0); //@line 4794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($408) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 4794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 86: 
      var $410=_sys_trim(__gm_, 0); //@line 4795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 87; break; //@line 4795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 87: 
      __label__ = 196; break; //@line 4796 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $413=$next; //@line 4798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $414=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $415=(($413)|0)==(($414)|0); //@line 4798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($415) { __label__ = 89; break; } else { __label__ = 90; break; } //@line 4798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $417=$psize; //@line 4799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $418=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $419=((($418)+($417))|0); //@line 4799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$419; //@line 4799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $dsize=$419; //@line 4799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $420=$p; //@line 4800 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$420; //@line 4800 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $421=$dsize; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $422=$421 | 1; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $423=$p; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $424=(($423+4)|0); //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($424)>>2)]=$422; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $425=$dsize; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $426=$p; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $427=$426; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $428=$dsize; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $429=(($427+$428)|0); //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $430=$429; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $431=(($430)|0); //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($431)>>2)]=$425; //@line 4801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4802 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $433=$next; //@line 4805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $434=(($433+4)|0); //@line 4805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $435=HEAP32[(($434)>>2)]; //@line 4805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $436=$435 & -8; //@line 4805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nsize=$436; //@line 4805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $437=$nsize; //@line 4806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $438=$psize; //@line 4806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $439=((($438)+($437))|0); //@line 4806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$439; //@line 4806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $440=$nsize; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $441=$440 >>> 3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $442=(($441)>>>0) < 32; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($442) { __label__ = 91; break; } else { __label__ = 103; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $444=$next; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $445=(($444+8)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $446=HEAP32[(($445)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F2=$446; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $447=$next; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $448=(($447+12)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $449=HEAP32[(($448)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B3=$449; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $450=$nsize; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $451=$450 >>> 3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I4=$451; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $452=$F2; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $453=$B3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $454=(($452)|0)==(($453)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($454) { __label__ = 92; break; } else { __label__ = 93; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $456=$I4; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $457=1 << $456; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $458=$457 ^ -1; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $459=HEAP32[((((__gm_)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $460=$459 & $458; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$460; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 102; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 93: 
      var $462=$F2; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $463=$I4; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $464=$463 << 1; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $465=((((__gm_+40)|0)+($464<<2))|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $466=$465; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $467=$466; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $468=(($462)|0)==(($467)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($468) { __label__ = 95; break; } else { __label__ = 94; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 94: 
      var $470=$F2; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $471=$470; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $472=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $473=(($471)>>>0) >= (($472)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($473) { __label__ = 95; break; } else { var $490 = 0;__label__ = 98; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 95: 
      var $475=$B3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $476=$I4; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $477=$476 << 1; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $478=((((__gm_+40)|0)+($477<<2))|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $479=$478; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $480=$479; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $481=(($475)|0)==(($480)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($481) { var $488 = 1;__label__ = 97; break; } else { __label__ = 96; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 96: 
      var $483=$B3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $484=$483; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $485=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $486=(($484)>>>0) >= (($485)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $488 = $486;__label__ = 97; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 97: 
      var $488;
      var $490 = $488;__label__ = 98; break;
    case 98: 
      var $490;
      var $491=(($490)&1);
      var $492=(($491)==(1));
      var $493=(($492)|0)!=0;
      if ($493) { __label__ = 99; break; } else { __label__ = 100; break; }
    case 99: 
      var $495=$B3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $496=$F2; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $497=(($496+12)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($497)>>2)]=$495; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $498=$F2; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $499=$B3; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $500=(($499+8)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($500)>>2)]=$498; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 101; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 100: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 101: 
      __label__ = 102; break;
    case 102: 
      __label__ = 149; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 103: 
      var $505=$next; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $506=$505; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $TP5=$506; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $507=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $508=(($507+24)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $509=HEAP32[(($508)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $XP6=$509; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $510=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $511=(($510+12)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $512=HEAP32[(($511)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $513=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $514=(($512)|0)!=(($513)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($514) { __label__ = 104; break; } else { __label__ = 108; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 104: 
      var $516=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $517=(($516+8)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $518=HEAP32[(($517)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F8=$518; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $519=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $520=(($519+12)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $521=HEAP32[(($520)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R7=$521; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $522=$F8; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $523=$522; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $524=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $525=(($523)>>>0) >= (($524)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $526=(($525)&1); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $527=(($526)==(1)); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $528=(($527)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($528) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 105: 
      var $530=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $531=$F8; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $532=(($531+12)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($532)>>2)]=$530; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $533=$F8; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $534=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $535=(($534+8)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($535)>>2)]=$533; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 107; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 106: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 107: 
      __label__ = 120; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 108: 
      var $539=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $540=(($539+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $541=(($540+4)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP9=$541; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $542=HEAP32[(($541)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R7=$542; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $543=(($542)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($543) { __label__ = 110; break; } else { __label__ = 109; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 109: 
      var $545=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $546=(($545+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $547=(($546)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP9=$547; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $548=HEAP32[(($547)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R7=$548; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $549=(($548)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($549) { __label__ = 110; break; } else { __label__ = 119; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 110: 
      __label__ = 111; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 111: 
      var $552=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $553=(($552+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $554=(($553+4)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP10=$554; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $555=HEAP32[(($554)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $556=(($555)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($556) { var $564 = 1;__label__ = 113; break; } else { __label__ = 112; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 112: 
      var $558=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $559=(($558+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $560=(($559)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP10=$560; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $561=HEAP32[(($560)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $562=(($561)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $564 = $562;__label__ = 113; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 113: 
      var $564;
      if ($564) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 114: 
      var $566=$CP10; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP9=$566; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $567=HEAP32[(($566)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R7=$567; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 111; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 115: 
      var $569=$RP9; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $570=$569; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $571=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $572=(($570)>>>0) >= (($571)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $573=(($572)&1); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $574=(($573)==(1)); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $575=(($574)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($575) { __label__ = 116; break; } else { __label__ = 117; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 116: 
      var $577=$RP9; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($577)>>2)]=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 118; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 117: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 118: 
      __label__ = 119; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 119: 
      __label__ = 120; break;
    case 120: 
      var $582=$XP6; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $583=(($582)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($583) { __label__ = 121; break; } else { __label__ = 148; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 121: 
      var $585=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $586=(($585+28)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $587=HEAP32[(($586)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $588=((((__gm_+304)|0)+($587<<2))|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H11=$588; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $589=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $590=$H11; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $591=HEAP32[(($590)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $592=(($589)|0)==(($591)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($592) { __label__ = 122; break; } else { __label__ = 125; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 122: 
      var $594=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $595=$H11; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($595)>>2)]=$594; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $596=(($594)|0)==0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($596) { __label__ = 123; break; } else { __label__ = 124; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 123: 
      var $598=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $599=(($598+28)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $600=HEAP32[(($599)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $601=1 << $600; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $602=$601 ^ -1; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $603=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $604=$603 & $602; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$604; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 124; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 124: 
      __label__ = 132; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 125: 
      var $607=$XP6; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $608=$607; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $609=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $610=(($608)>>>0) >= (($609)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $611=(($610)&1); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $612=(($611)==(1)); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $613=(($612)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($613) { __label__ = 126; break; } else { __label__ = 130; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 126: 
      var $615=$XP6; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $616=(($615+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $617=(($616)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $618=HEAP32[(($617)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $619=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $620=(($618)|0)==(($619)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($620) { __label__ = 127; break; } else { __label__ = 128; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 127: 
      var $622=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $623=$XP6; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $624=(($623+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $625=(($624)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($625)>>2)]=$622; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 129; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 128: 
      var $627=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $628=$XP6; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $629=(($628+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $630=(($629+4)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($630)>>2)]=$627; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 129; break;
    case 129: 
      __label__ = 131; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 130: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 131: 
      __label__ = 132; break;
    case 132: 
      var $635=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $636=(($635)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($636) { __label__ = 133; break; } else { __label__ = 147; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 133: 
      var $638=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $639=$638; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $640=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $641=(($639)>>>0) >= (($640)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $642=(($641)&1); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $643=(($642)==(1)); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $644=(($643)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($644) { __label__ = 134; break; } else { __label__ = 145; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 134: 
      var $646=$XP6; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $647=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $648=(($647+24)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($648)>>2)]=$646; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $649=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $650=(($649+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $651=(($650)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $652=HEAP32[(($651)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C012=$652; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $653=(($652)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($653) { __label__ = 135; break; } else { __label__ = 139; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 135: 
      var $655=$C012; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $656=$655; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $657=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $658=(($656)>>>0) >= (($657)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $659=(($658)&1); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $660=(($659)==(1)); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $661=(($660)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($661) { __label__ = 136; break; } else { __label__ = 137; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 136: 
      var $663=$C012; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $664=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $665=(($664+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $666=(($665)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($666)>>2)]=$663; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $667=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $668=$C012; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $669=(($668+24)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($669)>>2)]=$667; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 138; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 137: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 138: 
      __label__ = 139; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 139: 
      var $673=$TP5; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $674=(($673+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $675=(($674+4)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $676=HEAP32[(($675)>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C113=$676; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $677=(($676)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($677) { __label__ = 140; break; } else { __label__ = 144; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 140: 
      var $679=$C113; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $680=$679; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $681=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $682=(($680)>>>0) >= (($681)>>>0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $683=(($682)&1); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $684=(($683)==(1)); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $685=(($684)|0)!=0; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($685) { __label__ = 141; break; } else { __label__ = 142; break; } //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 141: 
      var $687=$C113; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $688=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $689=(($688+16)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $690=(($689+4)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($690)>>2)]=$687; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $691=$R7; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $692=$C113; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $693=(($692+24)|0); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($693)>>2)]=$691; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 143; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 142: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 143: 
      __label__ = 144; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 144: 
      __label__ = 146; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 145: 
      _abort(); //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 146: 
      __label__ = 147; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 147: 
      __label__ = 148; break; //@line 4807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 148: 
      __label__ = 149; break;
    case 149: 
      var $702=$psize; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $703=$702 | 1; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $704=$p; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $705=(($704+4)|0); //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($705)>>2)]=$703; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $706=$psize; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $707=$p; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $708=$707; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $709=$psize; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $710=(($708+$709)|0); //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $711=$710; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $712=(($711)|0); //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($712)>>2)]=$706; //@line 4808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $713=$p; //@line 4809 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $714=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4809 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $715=(($713)|0)==(($714)|0); //@line 4809 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($715) { __label__ = 150; break; } else { __label__ = 151; break; } //@line 4809 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 150: 
      var $717=$psize; //@line 4810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$717; //@line 4810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 151: 
      __label__ = 152; break;
    case 152: 
      __label__ = 153; break;
    case 153: 
      __label__ = 155; break; //@line 4814 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 154: 
      var $722=$next; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $723=(($722+4)|0); //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $724=HEAP32[(($723)>>2)]; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $725=$724 & -2; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($723)>>2)]=$725; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $726=$psize; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $727=$726 | 1; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $728=$p; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $729=(($728+4)|0); //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($729)>>2)]=$727; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $730=$psize; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $731=$p; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $732=$731; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $733=$psize; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $734=(($732+$733)|0); //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $735=$734; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $736=(($735)|0); //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($736)>>2)]=$730; //@line 4816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 155; break;
    case 155: 
      var $738=$psize; //@line 4818 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $739=$738 >>> 3; //@line 4818 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $740=(($739)>>>0) < 32; //@line 4818 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($740) { __label__ = 156; break; } else { __label__ = 163; break; } //@line 4818 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 156: 
      var $742=$psize; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $743=$742 >>> 3; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I14=$743; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $744=$I14; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $745=$744 << 1; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $746=((((__gm_+40)|0)+($745<<2))|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $747=$746; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $748=$747; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B15=$748; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $749=$B15; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F16=$749; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $750=HEAP32[((((__gm_)|0))>>2)]; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $751=$I14; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $752=1 << $751; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $753=$750 & $752; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $754=(($753)|0)!=0; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($754) { __label__ = 158; break; } else { __label__ = 157; break; } //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 157: 
      var $756=$I14; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $757=1 << $756; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $758=HEAP32[((((__gm_)|0))>>2)]; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $759=$758 | $757; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$759; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 162; break; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 158: 
      var $761=$B15; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $762=(($761+8)|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $763=HEAP32[(($762)>>2)]; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $764=$763; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $765=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $766=(($764)>>>0) >= (($765)>>>0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $767=(($766)&1); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $768=(($767)==(1)); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $769=(($768)|0)!=0; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($769) { __label__ = 159; break; } else { __label__ = 160; break; } //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 159: 
      var $771=$B15; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $772=(($771+8)|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $773=HEAP32[(($772)>>2)]; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F16=$773; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 161; break; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 160: 
      _abort(); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 161: 
      __label__ = 162; break;
    case 162: 
      var $777=$p; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $778=$B15; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $779=(($778+8)|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($779)>>2)]=$777; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $780=$p; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $781=$F16; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $782=(($781+12)|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($782)>>2)]=$780; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $783=$F16; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $784=$p; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $785=(($784+8)|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($785)>>2)]=$783; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $786=$B15; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $787=$p; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $788=(($787+12)|0); //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($788)>>2)]=$786; //@line 4819 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 192; break; //@line 4821 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 163: 
      var $790=$p; //@line 4823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $791=$790; //@line 4823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tp=$791; //@line 4823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $792=$psize; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $793=$792 >>> 8; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $X=$793; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $794=$X; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $795=(($794)|0)==0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($795) { __label__ = 164; break; } else { __label__ = 165; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 164: 
      $I18=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 169; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 165: 
      var $798=$X; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $799=(($798)>>>0) > 65535; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($799) { __label__ = 166; break; } else { __label__ = 167; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 166: 
      $I18=31; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 168; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 167: 
      var $802=$X; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$802; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $803=$Y; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $804=((($803)-(256))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $805=$804 >>> 16; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $806=$805 & 8; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$806; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $807=$N; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $808=$Y; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $809=$808 << $807; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$809; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $810=((($809)-(4096))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $811=$810 >>> 16; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $812=$811 & 4; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$812; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $813=$K; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $814=$N; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $815=((($814)+($813))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$815; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $816=$K; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $817=$Y; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $818=$817 << $816; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$818; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $819=((($818)-(16384))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $820=$819 >>> 16; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $821=$820 & 2; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$821; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $822=$N; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $823=((($822)+($821))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$823; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $824=$N; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $825=(((14)-($824))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $826=$K; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $827=$Y; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $828=$827 << $826; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$828; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $829=$828 >>> 15; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $830=((($825)+($829))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$830; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $831=$K; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $832=$831 << 1; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $833=$psize; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $834=$K; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $835=((($834)+(7))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $836=$833 >>> (($835)>>>0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $837=$836 & 1; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $838=((($832)+($837))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I18=$838; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 168; break;
    case 168: 
      __label__ = 169; break;
    case 169: 
      var $841=$I18; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $842=((((__gm_+304)|0)+($841<<2))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H17=$842; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $843=$I18; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $844=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $845=(($844+28)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($845)>>2)]=$843; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $846=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $847=(($846+16)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $848=(($847+4)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($848)>>2)]=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $849=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $850=(($849+16)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $851=(($850)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($851)>>2)]=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $852=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $853=$I18; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $854=1 << $853; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $855=$852 & $854; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $856=(($855)|0)!=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($856) { __label__ = 171; break; } else { __label__ = 170; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 170: 
      var $858=$I18; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $859=1 << $858; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $860=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $861=$860 | $859; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$861; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $862=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $863=$H17; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($863)>>2)]=$862; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $864=$H17; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $865=$864; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $866=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $867=(($866+24)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($867)>>2)]=$865; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $868=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $869=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $870=(($869+12)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($870)>>2)]=$868; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $871=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $872=(($871+8)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($872)>>2)]=$868; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 189; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 171: 
      var $874=$H17; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $875=HEAP32[(($874)>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$875; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $876=$psize; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $877=$I18; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $878=(($877)|0)==31; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($878) { __label__ = 172; break; } else { __label__ = 173; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 172: 
      var $887 = 0;__label__ = 174; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 173: 
      var $881=$I18; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $882=$881 >>> 1; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $883=((($882)+(8))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $884=((($883)-(2))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $885=(((31)-($884))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $887 = $885;__label__ = 174; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 174: 
      var $887; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $888=$876 << $887; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K19=$888; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 175; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 175: 
      var $890=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $891=(($890+4)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $892=HEAP32[(($891)>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $893=$892 & -8; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $894=$psize; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $895=(($893)|0)!=(($894)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($895) { __label__ = 176; break; } else { __label__ = 182; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 176: 
      var $897=$K19; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $898=$897 >>> 31; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $899=$898 & 1; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $900=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $901=(($900+16)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $902=(($901+($899<<2))|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C=$902; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $903=$K19; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $904=$903 << 1; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K19=$904; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $905=$C; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $906=HEAP32[(($905)>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $907=(($906)|0)!=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($907) { __label__ = 177; break; } else { __label__ = 178; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 177: 
      var $909=$C; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $910=HEAP32[(($909)>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$910; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 181; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 178: 
      var $912=$C; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $913=$912; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $914=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $915=(($913)>>>0) >= (($914)>>>0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $916=(($915)&1); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $917=(($916)==(1)); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $918=(($917)|0)!=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($918) { __label__ = 179; break; } else { __label__ = 180; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 179: 
      var $920=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $921=$C; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($921)>>2)]=$920; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $922=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $923=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $924=(($923+24)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($924)>>2)]=$922; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $925=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $926=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $927=(($926+12)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($927)>>2)]=$925; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $928=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $929=(($928+8)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($929)>>2)]=$925; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 188; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 180: 
      _abort(); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 181: 
      __label__ = 187; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 182: 
      var $933=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $934=(($933+8)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $935=HEAP32[(($934)>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F20=$935; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $936=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $937=$936; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $938=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $939=(($937)>>>0) >= (($938)>>>0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($939) { __label__ = 183; break; } else { var $946 = 0;__label__ = 184; break; } //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 183: 
      var $941=$F20; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $942=$941; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $943=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $944=(($942)>>>0) >= (($943)>>>0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $946 = $944;__label__ = 184; break;
    case 184: 
      var $946;
      var $947=(($946)&1);
      var $948=(($947)==(1));
      var $949=(($948)|0)!=0;
      if ($949) { __label__ = 185; break; } else { __label__ = 186; break; }
    case 185: 
      var $951=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $952=$F20; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $953=(($952+12)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($953)>>2)]=$951; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $954=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $955=(($954+8)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($955)>>2)]=$951; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $956=$F20; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $957=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $958=(($957+8)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($958)>>2)]=$956; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $959=$T; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $960=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $961=(($960+12)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($961)>>2)]=$959; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $962=$tp; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $963=(($962+24)|0); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($963)>>2)]=0; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 188; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 186: 
      _abort(); //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 187: 
      __label__ = 175; break; //@line 4824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 188: 
      __label__ = 189; break;
    case 189: 
      var $968=HEAP32[((((__gm_+32)|0))>>2)]; //@line 4826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $969=((($968)-(1))|0); //@line 4826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+32)|0))>>2)]=$969; //@line 4826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $970=(($969)|0)==0; //@line 4826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($970) { __label__ = 190; break; } else { __label__ = 191; break; } //@line 4826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 190: 
      var $972=_release_unused_segments(__gm_); //@line 4827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 191; break; //@line 4827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 191: 
      __label__ = 192; break;
    case 192: 
      __label__ = 196; break; //@line 4829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 193: 
      __label__ = 194; break; //@line 4831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 194: 
      __label__ = 195; break; //@line 4831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 195: 
      _abort(); //@line 4833 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4833 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 196: 
      __label__ = 197; break; //@line 4837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 197: 
      ;
      return; //@line 4841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
Module["_free"] = _free;_free["X"]=1;

function _sys_trim($m, $pad) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $released;
      var $unit;
      var $extra;
      var $sp;
      var $old_br;
      var $rel_br;
      var $new_br;
      $1=$m;
      $2=$pad;
      $released=0; //@line 4126 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[((((_mparams)|0))>>2)]; //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)|0)!=0; //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($4) { var $9 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $6=_init_mparams(); //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=(($6)|0)!=0; //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9 = $7;__label__ = 4; break; //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $9;
      var $10=(($9)&1); //@line 4127 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$2; //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=(($11)>>>0) < 4294967232; //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($12) { __label__ = 5; break; } else { __label__ = 26; break; } //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $14=$1; //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=(($14+24)|0); //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($15)>>2)]; //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(($16)|0)!=0; //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($17) { __label__ = 6; break; } else { __label__ = 26; break; } //@line 4128 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $19=$2; //@line 4129 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=((($19)+(40))|0); //@line 4129 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $2=$20; //@line 4129 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$1; //@line 4131 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=(($21+12)|0); //@line 4131 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=HEAPU32[(($22)>>2)]; //@line 4131 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$2; //@line 4131 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($23)>>>0) > (($24)>>>0); //@line 4131 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 22; break; } //@line 4131 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $27=HEAP32[((((_mparams+8)|0))>>2)]; //@line 4133 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $unit=$27; //@line 4133 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$1; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=(($28+12)|0); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($29)>>2)]; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$2; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=((($30)-($31))|0); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$unit; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=((($33)-(1))|0); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=((($32)+($34))|0); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$unit; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=Math.floor(((($35)>>>0))/((($36)>>>0))); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=((($37)-(1))|0); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=$unit; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=((($38)*($39))|0); //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $extra=$40; //@line 4135 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$1; //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=$1; //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+24)|0); //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($43)>>2)]; //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$44; //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=_segment_holding($41, $45); //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$46; //@line 4136 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=$sp; //@line 4138 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=(($47+12)|0); //@line 4138 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=HEAP32[(($48)>>2)]; //@line 4138 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$49 & 8; //@line 4138 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=(($50)|0)!=0; //@line 4138 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($51) { __label__ = 19; break; } else { __label__ = 8; break; } //@line 4138 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $53=$sp; //@line 4139 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=(($53+12)|0); //@line 4139 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=HEAP32[(($54)>>2)]; //@line 4139 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$55 & 0; //@line 4139 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($56)|0)!=0; //@line 4139 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($57) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4139 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      __label__ = 18; break; //@line 4151 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $60=$extra; //@line 4153 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=(($60)>>>0) >= 2147483647; //@line 4153 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($61) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4153 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $63=$unit; //@line 4154 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=(((-2147483648)-($63))|0); //@line 4154 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $extra=$64; //@line 4154 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 4154 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $66=_sbrk(0); //@line 4158 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $old_br=$66; //@line 4158 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=$old_br; //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=$sp; //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0); //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($69)>>2)]; //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=$sp; //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=(($71+4)|0); //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=HEAP32[(($72)>>2)]; //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($70+$73)|0); //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=(($67)|0)==(($74)|0); //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($75) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 4159 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $77=$extra; //@line 4160 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=(((-$77))|0); //@line 4160 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=_sbrk($78); //@line 4160 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rel_br=$79; //@line 4160 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=_sbrk(0); //@line 4161 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $new_br=$80; //@line 4161 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=$rel_br; //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=(($81)|0)!=-1; //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($82) { __label__ = 14; break; } else { __label__ = 16; break; } //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $84=$new_br; //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$old_br; //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=(($84)>>>0) < (($85)>>>0); //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($86) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4162 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $88=$old_br; //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=$new_br; //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=$88; //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=$89; //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=((($90)-($91))|0); //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $released=$92; //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 4163 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      __label__ = 17; break; //@line 4164 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      __label__ = 18; break;
    case 18: 
      __label__ = 19; break; //@line 4168 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $97=$released; //@line 4170 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=(($97)|0)!=0; //@line 4170 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($98) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 4170 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $100=$released; //@line 4171 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$sp; //@line 4171 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=(($101+4)|0); //@line 4171 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=HEAP32[(($102)>>2)]; //@line 4171 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=((($103)-($100))|0); //@line 4171 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($102)>>2)]=$104; //@line 4171 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=$released; //@line 4172 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=$1; //@line 4172 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=(($106+432)|0); //@line 4172 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($107)>>2)]; //@line 4172 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=((($108)-($105))|0); //@line 4172 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($107)>>2)]=$109; //@line 4172 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=$1; //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=$1; //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=(($111+24)|0); //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($112)>>2)]; //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=$1; //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=(($114+12)|0); //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=HEAP32[(($115)>>2)]; //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=$released; //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=((($116)-($117))|0); //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _init_top($110, $113, $118); //@line 4173 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4175 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break; //@line 4176 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $121=$released; //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=(($121)|0)==0; //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($122) { __label__ = 23; break; } else { __label__ = 25; break; } //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $124=$1; //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=(($124+12)|0); //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=HEAPU32[(($125)>>2)]; //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=$1; //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=(($127+28)|0); //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=HEAPU32[(($128)>>2)]; //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=(($126)>>>0) > (($129)>>>0); //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($130) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4183 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $132=$1; //@line 4184 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=(($132+28)|0); //@line 4184 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($133)>>2)]=-1; //@line 4184 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4184 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      __label__ = 26; break; //@line 4185 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $136=$released; //@line 4187 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=(($136)|0)!=0; //@line 4187 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=$137 ? 1 : 0; //@line 4187 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $138; //@line 4187 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_trim["X"]=1;

function _calloc($n_elements, $elem_size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $mem;
      var $req;
      $1=$n_elements;
      $2=$elem_size;
      $req=0; //@line 4845 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=$1; //@line 4846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)|0)!=0; //@line 4846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($4) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 4846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $6=$1; //@line 4847 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=$2; //@line 4847 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=((($6)*($7))|0); //@line 4847 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $req=$8; //@line 4847 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$1; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$2; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$9 | $10; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$11 & -65536; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)|0)!=0; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $15=$req; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$1; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=Math.floor(((($15)>>>0))/((($16)>>>0))); //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$2; //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=(($17)|0)!=(($18)|0); //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($19) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4848 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      $req=-1; //@line 4850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 4850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      __label__ = 7; break; //@line 4851 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $23=$req; //@line 4852 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=_malloc($23); //@line 4852 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$24; //@line 4852 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$mem; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=(($25)|0)!=0; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($26) { __label__ = 8; break; } else { __label__ = 10; break; } //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $28=$mem; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=((($28)-(8))|0); //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$29; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($30+4)|0); //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=HEAP32[(($31)>>2)]; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$32 & 3; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=(($33)|0)==0; //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($34) { __label__ = 10; break; } else { __label__ = 9; break; } //@line 4853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $36=$mem; //@line 4854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$req; //@line 4854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _memset($36, 0, $37, 1); //@line 4854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 4854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $39=$mem; //@line 4855 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $39; //@line 4855 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _realloc($oldmem, $bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $m;
      $2=$oldmem;
      $3=$bytes;
      var $4=$2; //@line 4859 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=(($4)|0)==0; //@line 4859 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4859 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $7=$3; //@line 4860 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=_malloc($7); //@line 4860 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$8; //@line 4860 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 4860 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      $m=__gm_; //@line 4869 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$m; //@line 4877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$2; //@line 4877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$3; //@line 4877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=_internal_realloc($10, $11, $12); //@line 4877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$13; //@line 4877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 4877 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $15=$1; //@line 4879 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $15; //@line 4879 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _release_unused_segments($m) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $released;
      var $nsegs;
      var $pred;
      var $sp;
      var $base;
      var $size;
      var $next;
      var $p;
      var $psize;
      var $tp;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $H1;
      var $I;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K2;
      var $C;
      var $F3;
      $1=$m;
      $released=0; //@line 4079 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nsegs=0; //@line 4080 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $2=$1; //@line 4081 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2+444)|0); //@line 4081 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $pred=$3; //@line 4081 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=$pred; //@line 4082 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=(($4+8)|0); //@line 4082 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($5)>>2)]; //@line 4082 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$6; //@line 4082 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4083 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $8=$sp; //@line 4083 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0)!=0; //@line 4083 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 88; break; } //@line 4083 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $11=$sp; //@line 4084 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=(($11)|0); //@line 4084 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($12)>>2)]; //@line 4084 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $base=$13; //@line 4084 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=$sp; //@line 4085 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=(($14+4)|0); //@line 4085 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($15)>>2)]; //@line 4085 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $size=$16; //@line 4085 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=$sp; //@line 4086 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=(($17+8)|0); //@line 4086 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[(($18)>>2)]; //@line 4086 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $next=$19; //@line 4086 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$nsegs; //@line 4087 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=((($20)+(1))|0); //@line 4087 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nsegs=$21; //@line 4087 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$sp; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=(($22+12)|0); //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($23)>>2)]; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$24 & 0; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=(($25)|0)!=0; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($26) { __label__ = 5; break; } else { __label__ = 87; break; } //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $28=$sp; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=(($28+12)|0); //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($29)>>2)]; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$30 & 8; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=(($31)|0)!=0; //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($32) { __label__ = 87; break; } else { __label__ = 6; break; } //@line 4088 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $34=$base; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$base; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=(($35+8)|0); //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$36; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=$37 & 7; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=(($38)|0)==0; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($39) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $49 = 0;__label__ = 9; break; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $42=$base; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+8)|0); //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$44 & 7; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(((8)-($45))|0); //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=$46 & 7; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49 = $47;__label__ = 9; break; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $49; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=(($34+$49)|0); //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$51; //@line 4089 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$p; //@line 4090 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=(($52+4)|0); //@line 4090 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=HEAP32[(($53)>>2)]; //@line 4090 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=$54 & -8; //@line 4090 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$55; //@line 4090 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$p; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+4)|0); //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=HEAP32[(($57)>>2)]; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$58 & 3; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=(($59)|0)!=1; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($60) { __label__ = 86; break; } else { __label__ = 10; break; } //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $62=$p; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$62; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=$psize; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=(($63+$64)|0); //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=$base; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=$size; //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=(($66+$67)|0); //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)-(40))|0); //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=(($65)>>>0) >= (($69)>>>0); //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($70) { __label__ = 11; break; } else { __label__ = 86; break; } //@line 4092 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $72=$p; //@line 4093 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=$72; //@line 4093 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tp=$73; //@line 4093 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=$p; //@line 4095 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=$1; //@line 4095 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=(($75+20)|0); //@line 4095 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=HEAP32[(($76)>>2)]; //@line 4095 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=(($74)|0)==(($77)|0); //@line 4095 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($78) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 4095 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $80=$1; //@line 4096 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=(($80+20)|0); //@line 4096 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($81)>>2)]=0; //@line 4096 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=$1; //@line 4097 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=(($82+8)|0); //@line 4097 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($83)>>2)]=0; //@line 4097 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 59; break; //@line 4098 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $85=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=(($85+24)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=HEAP32[(($86)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $XP=$87; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=(($88+12)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($89)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=(($90)|0)!=(($91)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($92) { __label__ = 14; break; } else { __label__ = 18; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $94=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=(($94+8)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($95)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$96; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=(($97+12)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=HEAP32[(($98)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$99; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=$F; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$100; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=(($102+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=HEAPU32[(($103)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=(($101)>>>0) >= (($104)>>>0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=(($105)&1); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=(($106)==(1)); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=(($107)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $110=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=$F; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=(($111+12)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($112)>>2)]=$110; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=$F; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=(($114+8)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($115)>>2)]=$113; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 17; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      _abort(); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      __label__ = 30; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $119=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=(($119+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=(($120+4)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$121; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=HEAP32[(($121)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$122; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=(($122)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($123) { __label__ = 20; break; } else { __label__ = 19; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $125=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=(($125+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=(($126)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$127; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=HEAP32[(($127)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$128; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=(($128)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($129) { __label__ = 20; break; } else { __label__ = 29; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      __label__ = 21; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $132=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=(($132+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=(($133+4)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$134; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($134)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=(($135)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($136) { var $144 = 1;__label__ = 23; break; } else { __label__ = 22; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $138=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=(($138+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=(($139)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$140; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($140)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=(($141)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144 = $142;__label__ = 23; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $144;
      if ($144) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $146=$CP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$146; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=HEAP32[(($146)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$147; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $149=$RP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$149; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=(($151+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=HEAPU32[(($152)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=(($150)>>>0) >= (($153)>>>0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=(($154)&1); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=(($155)==(1)); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=(($156)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($157) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $159=$RP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($159)>>2)]=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      _abort(); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      __label__ = 30; break;
    case 30: 
      var $164=$XP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=(($164)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($165) { __label__ = 31; break; } else { __label__ = 58; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $167=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=(($167+28)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=HEAP32[(($168)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=(($170+304)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=(($171+($169<<2))|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H=$172; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $174=$H; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=HEAP32[(($174)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=(($173)|0)==(($175)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($176) { __label__ = 32; break; } else { __label__ = 35; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $178=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $179=$H; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($179)>>2)]=$178; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $180=(($178)|0)==0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($180) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $182=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=(($182+28)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=HEAP32[(($183)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=1 << $184; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=$185 ^ -1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $187=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $188=(($187+4)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=HEAP32[(($188)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $190=$189 & $186; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($188)>>2)]=$190; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      __label__ = 42; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $193=$XP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=$193; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=(($195+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=HEAPU32[(($196)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=(($194)>>>0) >= (($197)>>>0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=(($198)&1); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=(($199)==(1)); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $201=(($200)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($201) { __label__ = 36; break; } else { __label__ = 40; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $203=$XP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=(($203+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=(($204)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=HEAP32[(($205)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=(($206)|0)==(($207)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($208) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $210=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=$XP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=(($211+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=(($212)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($213)>>2)]=$210; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $215=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $216=$XP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $217=(($216+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $218=(($217+4)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($218)>>2)]=$215; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break;
    case 39: 
      __label__ = 41; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      _abort(); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 41: 
      __label__ = 42; break;
    case 42: 
      var $223=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=(($223)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($224) { __label__ = 43; break; } else { __label__ = 57; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $226=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $229=(($228+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230=HEAPU32[(($229)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $231=(($227)>>>0) >= (($230)>>>0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $232=(($231)&1); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $233=(($232)==(1)); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $234=(($233)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($234) { __label__ = 44; break; } else { __label__ = 55; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $236=$XP; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $238=(($237+24)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($238)>>2)]=$236; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $239=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $240=(($239+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $241=(($240)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $242=HEAP32[(($241)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C0=$242; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=(($242)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($243) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      var $245=$C0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=$245; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=(($247+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $249=HEAPU32[(($248)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $250=(($246)>>>0) >= (($249)>>>0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $251=(($250)&1); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $252=(($251)==(1)); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $253=(($252)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($253) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $255=$C0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $256=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $257=(($256+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $258=(($257)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($258)>>2)]=$255; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=$C0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $261=(($260+24)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($261)>>2)]=$259; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      _abort(); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      __label__ = 49; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $265=$tp; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $266=(($265+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $267=(($266+4)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $268=HEAP32[(($267)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C1=$268; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $269=(($268)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($269) { __label__ = 50; break; } else { __label__ = 54; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $271=$C1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $272=$271; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $273=$1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $274=(($273+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $275=HEAPU32[(($274)>>2)]; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=(($272)>>>0) >= (($275)>>>0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $277=(($276)&1); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $278=(($277)==(1)); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=(($278)|0)!=0; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($279) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $281=$C1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $283=(($282+16)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $284=(($283+4)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($284)>>2)]=$281; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $285=$R; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $286=$C1; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=(($286+24)|0); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($287)>>2)]=$285; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 53; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 52: 
      _abort(); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 53: 
      __label__ = 54; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      __label__ = 56; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 55: 
      _abort(); //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 56: 
      __label__ = 57; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 57: 
      __label__ = 58; break; //@line 4100 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 58: 
      __label__ = 59; break;
    case 59: 
      var $296=$psize; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $297=$296 >>> 8; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $X=$297; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $298=$X; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $299=(($298)|0)==0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($299) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 60: 
      $I=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $302=$X; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $303=(($302)>>>0) > 65535; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($303) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 62: 
      $I=31; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $306=$X; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$306; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $307=$Y; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $308=((($307)-(256))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $309=$308 >>> 16; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $310=$309 & 8; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$310; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $311=$N; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $312=$Y; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $313=$312 << $311; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$313; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $314=((($313)-(4096))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=$314 >>> 16; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=$315 & 4; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$316; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=$K; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $318=$N; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $319=((($318)+($317))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$319; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $320=$K; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=$Y; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $322=$321 << $320; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$322; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=((($322)-(16384))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=$323 >>> 16; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=$324 & 2; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$325; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=$N; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $327=((($326)+($325))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$327; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $328=$N; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $329=(((14)-($328))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $330=$K; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $331=$Y; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $332=$331 << $330; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$332; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $333=$332 >>> 15; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $334=((($329)+($333))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$334; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $335=$K; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $336=$335 << 1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $337=$psize; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $338=$K; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=((($338)+(7))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=$337 >>> (($339)>>>0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=$340 & 1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=((($336)+($341))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$342; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break;
    case 64: 
      __label__ = 65; break;
    case 65: 
      var $345=$I; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=$1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=(($346+304)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348=(($347+($345<<2))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H1=$348; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $349=$I; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+28)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($351)>>2)]=$349; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $353=(($352+16)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $354=(($353+4)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($354)>>2)]=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $355=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $356=(($355+16)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $357=(($356)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($357)>>2)]=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=$1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=(($358+4)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $360=HEAP32[(($359)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $361=$I; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $362=1 << $361; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $363=$360 & $362; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $364=(($363)|0)!=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($364) { __label__ = 67; break; } else { __label__ = 66; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 66: 
      var $366=$I; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=1 << $366; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=$1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=(($368+4)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $370=HEAP32[(($369)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $371=$370 | $367; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($369)>>2)]=$371; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $372=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $373=$H1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($373)>>2)]=$372; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374=$H1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $375=$374; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $376=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $377=(($376+24)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($377)>>2)]=$375; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $378=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $379=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=(($379+12)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($380)>>2)]=$378; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=(($381+8)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($382)>>2)]=$378; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 67: 
      var $384=$H1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($384)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$385; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=$psize; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=$I; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $388=(($387)|0)==31; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($388) { __label__ = 68; break; } else { __label__ = 69; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 68: 
      var $397 = 0;__label__ = 70; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 69: 
      var $391=$I; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $392=$391 >>> 1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $393=((($392)+(8))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $394=((($393)-(2))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $395=(((31)-($394))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $397 = $395;__label__ = 70; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 70: 
      var $397; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $398=$386 << $397; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$398; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 71; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $400=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $401=(($400+4)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $402=HEAP32[(($401)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $403=$402 & -8; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $404=$psize; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $405=(($403)|0)!=(($404)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($405) { __label__ = 72; break; } else { __label__ = 78; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $407=$K2; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $408=$407 >>> 31; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $409=$408 & 1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $410=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $411=(($410+16)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $412=(($411+($409<<2))|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C=$412; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $413=$K2; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $414=$413 << 1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$414; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $415=$C; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $416=HEAP32[(($415)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $417=(($416)|0)!=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($417) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $419=$C; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $420=HEAP32[(($419)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$420; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 77; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $422=$C; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $423=$422; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $424=$1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $425=(($424+16)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $426=HEAPU32[(($425)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $427=(($423)>>>0) >= (($426)>>>0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $428=(($427)&1); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $429=(($428)==(1)); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $430=(($429)|0)!=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($430) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 75: 
      var $432=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $433=$C; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($433)>>2)]=$432; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $434=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $435=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $436=(($435+24)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($436)>>2)]=$434; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $437=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $438=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $439=(($438+12)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($439)>>2)]=$437; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $440=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $441=(($440+8)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($441)>>2)]=$437; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 76: 
      _abort(); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 77: 
      __label__ = 83; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $445=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $446=(($445+8)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $447=HEAP32[(($446)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F3=$447; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $448=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $449=$448; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $450=$1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $451=(($450+16)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $452=HEAPU32[(($451)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $453=(($449)>>>0) >= (($452)>>>0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($453) { __label__ = 79; break; } else { var $462 = 0;__label__ = 80; break; } //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $455=$F3; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $456=$455; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $457=$1; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $458=(($457+16)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $459=HEAPU32[(($458)>>2)]; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $460=(($456)>>>0) >= (($459)>>>0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $462 = $460;__label__ = 80; break;
    case 80: 
      var $462;
      var $463=(($462)&1);
      var $464=(($463)==(1));
      var $465=(($464)|0)!=0;
      if ($465) { __label__ = 81; break; } else { __label__ = 82; break; }
    case 81: 
      var $467=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $468=$F3; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $469=(($468+12)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($469)>>2)]=$467; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $470=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $471=(($470+8)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($471)>>2)]=$467; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $472=$F3; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $473=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $474=(($473+8)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($474)>>2)]=$472; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $475=$T; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $476=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $477=(($476+12)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($477)>>2)]=$475; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $478=$tp; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $479=(($478+24)|0); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($479)>>2)]=0; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 82: 
      _abort(); //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 83: 
      __label__ = 71; break; //@line 4110 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 84: 
      __label__ = 85; break;
    case 85: 
      __label__ = 86; break; //@line 4112 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 86: 
      __label__ = 87; break; //@line 4113 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 87: 
      var $486=$sp; //@line 4116 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $pred=$486; //@line 4116 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $487=$next; //@line 4117 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$487; //@line 4117 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4118 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $489=$nsegs; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $490=(($489)>>>0) > 4294967295; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($490) { __label__ = 89; break; } else { __label__ = 90; break; } //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $492=$nsegs; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $495 = $492;__label__ = 91; break; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $495 = -1;__label__ = 91; break; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $495; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $496=$1; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $497=(($496+32)|0); //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($497)>>2)]=$495; //@line 4120 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $498=$released; //@line 4122 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $498; //@line 4122 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_release_unused_segments["X"]=1;

function _memalign($alignment, $bytes) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$alignment;
  $2=$bytes;
  var $3=$1; //@line 4882 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $4=$2; //@line 4882 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $5=_internal_memalign(__gm_, $3, $4); //@line 4882 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return $5; //@line 4882 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _internal_memalign($m, $alignment, $bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $a;
      var $nb;
      var $req;
      var $mem;
      var $leader;
      var $trailer;
      var $p;
      var $br;
      var $pos;
      var $newp;
      var $leadsize;
      var $newsize;
      var $size;
      var $remainder_size;
      var $remainder;
      $2=$m;
      $3=$alignment;
      $4=$bytes;
      var $5=$3; //@line 4380 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)>>>0) <= 8; //@line 4380 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4380 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $8=$4; //@line 4381 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=_malloc($8); //@line 4381 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$9; //@line 4381 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 4381 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $11=$3; //@line 4382 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=(($11)>>>0) < 16; //@line 4382 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($12) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4382 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      $3=16; //@line 4383 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 4383 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $15=$3; //@line 4384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$3; //@line 4384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=((($16)-(1))|0); //@line 4384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$15 & $17; //@line 4384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=(($18)|0)!=0; //@line 4384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($19) { __label__ = 7; break; } else { __label__ = 11; break; } //@line 4384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      $a=16; //@line 4385 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $22=$a; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$3; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=(($22)>>>0) < (($23)>>>0); //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($24) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $26=$a; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$26 << 1; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $a=$27; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 4386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $29=$a; //@line 4387 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $3=$29; //@line 4387 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $31=$4; //@line 4390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$3; //@line 4390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=(((-64)-($32))|0); //@line 4390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=(($31)>>>0) >= (($33)>>>0); //@line 4390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($34) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 4390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $36=$2; //@line 4391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=(($36)|0)!=0; //@line 4391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($37) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $39=___errno(); //@line 4392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($39)>>2)]=12; //@line 4392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break; //@line 4393 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      __label__ = 37; break; //@line 4394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $42=$4; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=(($42)>>>0) < 11; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($43) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $51 = 16;__label__ = 18; break; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $46=$4; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=((($46)+(4))|0); //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=((($47)+(7))|0); //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=$48 & -8; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51 = $49;__label__ = 18; break; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $51; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nb=$51; //@line 4396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$nb; //@line 4397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=$3; //@line 4397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=((($52)+($53))|0); //@line 4397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=((($54)+(16))|0); //@line 4397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=((($55)-(4))|0); //@line 4397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $req=$56; //@line 4397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=$req; //@line 4398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=_malloc($57); //@line 4398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$58; //@line 4398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$mem; //@line 4399 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=(($59)|0)!=0; //@line 4399 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($60) { __label__ = 19; break; } else { __label__ = 36; break; } //@line 4399 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      $leader=0; //@line 4400 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $trailer=0; //@line 4401 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=$mem; //@line 4402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=((($62)-(8))|0); //@line 4402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=$63; //@line 4402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$64; //@line 4402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=$mem; //@line 4405 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 4405 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=$3; //@line 4405 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=((($66)>>>0))%((($67)>>>0)); //@line 4405 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0)!=0; //@line 4405 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($69) { __label__ = 20; break; } else { __label__ = 27; break; } //@line 4405 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $71=$mem; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=$3; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=(($71+$72)|0); //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=((($73)-(1))|0); //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=$74; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=$3; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(((-$76))|0); //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=$75 & $77; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=$78; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=((($79)-(8))|0); //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=$80; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=$81; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $br=$82; //@line 4417 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=$br; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=$p; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$84; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=$83; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=$85; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=((($86)-($87))|0); //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=(($88)>>>0) >= 16; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($89) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $91=$br; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97 = $91;__label__ = 23; break; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $93=$br; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=$3; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=(($93+$94)|0); //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97 = $95;__label__ = 23; break; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $97; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $pos=$97; //@line 4419 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$pos; //@line 4420 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$98; //@line 4420 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newp=$99; //@line 4420 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=$pos; //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$p; //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=$101; //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$100; //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=$102; //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=((($103)-($104))|0); //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leadsize=$105; //@line 4421 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=$p; //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=(($106+4)|0); //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($107)>>2)]; //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=$108 & -8; //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=$leadsize; //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=((($109)-($110))|0); //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newsize=$111; //@line 4422 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=$p; //@line 4424 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=(($112+4)|0); //@line 4424 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($113)>>2)]; //@line 4424 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=$114 & 3; //@line 4424 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=(($115)|0)==0; //@line 4424 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($116) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4424 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $118=$p; //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=(($118)|0); //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=HEAP32[(($119)>>2)]; //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=$leadsize; //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=((($120)+($121))|0); //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=$newp; //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=(($123)|0); //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($124)>>2)]=$122; //@line 4425 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=$newsize; //@line 4426 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=$newp; //@line 4426 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=(($126+4)|0); //@line 4426 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($127)>>2)]=$125; //@line 4426 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4427 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $129=$newp; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=(($129+4)|0); //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=HEAP32[(($130)>>2)]; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=$131 & 1; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=$newsize; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=$132 | $133; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$134 | 2; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=$newp; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=(($136+4)|0); //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($137)>>2)]=$135; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=$newp; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$138; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=$newsize; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=(($139+$140)|0); //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=$141; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=(($142+4)|0); //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=HEAP32[(($143)>>2)]; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=$144 | 1; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($143)>>2)]=$145; //@line 4429 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=$p; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=(($146+4)|0); //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=HEAP32[(($147)>>2)]; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=$148 & 1; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$leadsize; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$149 | $150; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=$151 | 2; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=$p; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=(($153+4)|0); //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($154)>>2)]=$152; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=$p; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=$155; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=$leadsize; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=(($156+$157)|0); //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=$158; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=(($159+4)|0); //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=HEAP32[(($160)>>2)]; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=$161 | 1; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($160)>>2)]=$162; //@line 4430 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=$p; //@line 4431 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=$163; //@line 4431 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=(($164+8)|0); //@line 4431 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $leader=$165; //@line 4431 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break;
    case 26: 
      var $167=$newp; //@line 4433 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$167; //@line 4433 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4434 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      var $169=$p; //@line 4437 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=(($169+4)|0); //@line 4437 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[(($170)>>2)]; //@line 4437 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=$171 & 3; //@line 4437 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=(($172)|0)==0; //@line 4437 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($173) { __label__ = 31; break; } else { __label__ = 28; break; } //@line 4437 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $175=$p; //@line 4438 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=(($175+4)|0); //@line 4438 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($176)>>2)]; //@line 4438 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=$177 & -8; //@line 4438 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $size=$178; //@line 4438 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $179=$size; //@line 4439 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $180=$nb; //@line 4439 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $181=((($180)+(16))|0); //@line 4439 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $182=(($179)>>>0) > (($181)>>>0); //@line 4439 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($182) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 4439 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $184=$size; //@line 4440 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=$nb; //@line 4440 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=((($184)-($185))|0); //@line 4440 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$186; //@line 4440 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $187=$p; //@line 4441 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $188=$187; //@line 4441 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=$nb; //@line 4441 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $190=(($188+$189)|0); //@line 4441 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $191=$190; //@line 4441 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $remainder=$191; //@line 4441 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $192=$p; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=(($192+4)|0); //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=HEAP32[(($193)>>2)]; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=$194 & 1; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=$nb; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=$195 | $196; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=$197 | 2; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=$p; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=(($199+4)|0); //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($200)>>2)]=$198; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $201=$p; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=$201; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=$nb; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=(($202+$203)|0); //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$204; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=(($205+4)|0); //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=HEAP32[(($206)>>2)]; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=$207 | 1; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($206)>>2)]=$208; //@line 4442 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=$remainder; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=(($209+4)|0); //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=HEAP32[(($210)>>2)]; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=$211 & 1; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=$remainder_size; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $214=$212 | $213; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $215=$214 | 2; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $216=$remainder; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $217=(($216+4)|0); //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($217)>>2)]=$215; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $218=$remainder; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $219=$218; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $220=$remainder_size; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=(($219+$220)|0); //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=$221; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=(($222+4)|0); //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=HEAP32[(($223)>>2)]; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $225=$224 | 1; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($223)>>2)]=$225; //@line 4443 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=$remainder; //@line 4444 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4444 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=(($227+8)|0); //@line 4444 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $trailer=$228; //@line 4444 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4445 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      __label__ = 31; break; //@line 4446 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $231=$leader; //@line 4452 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $232=(($231)|0)!=0; //@line 4452 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($232) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4452 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $234=$leader; //@line 4453 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _free($234); //@line 4453 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4454 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $236=$trailer; //@line 4455 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=(($236)|0)!=0; //@line 4455 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($237) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 4455 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $239=$trailer; //@line 4456 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _free($239); //@line 4456 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 4457 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $241=$p; //@line 4458 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $242=$241; //@line 4458 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=(($242+8)|0); //@line 4458 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$243; //@line 4458 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 4458 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      __label__ = 37; break;
    case 37: 
      $1=0; //@line 4461 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 4461 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $247=$1; //@line 4462 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $247; //@line 4462 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_memalign["X"]=1;

function _independent_calloc($n_elements, $elem_size, $chunks) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $1;
  var $2;
  var $3;
  var $sz=__stackBase__;
  $1=$n_elements;
  $2=$elem_size;
  $3=$chunks;
  var $4=$2; //@line 4887 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  HEAP32[(($sz)>>2)]=$4; //@line 4887 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $5=$1; //@line 4888 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $6=$3; //@line 4888 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $7=_ialloc(__gm_, $5, $sz, 3, $6); //@line 4888 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  STACKTOP = __stackBase__;
  return $7; //@line 4888 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _internal_realloc($m, $oldmem, $bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $oldp;
      var $oldsize;
      var $next;
      var $newp;
      var $extra;
      var $nb;
      var $rsize;
      var $remainder;
      var $newsize;
      var $newtopsize;
      var $newtop;
      var $newmem;
      var $oc;
      $2=$m;
      $3=$oldmem;
      $4=$bytes;
      var $5=$4; //@line 4305 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)>>>0) >= 4294967232; //@line 4305 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4305 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $8=___errno(); //@line 4306 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($8)>>2)]=12; //@line 4306 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=0; //@line 4307 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 4307 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $10=$3; //@line 4310 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=((($10)-(8))|0); //@line 4310 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$11; //@line 4310 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldp=$12; //@line 4310 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$oldp; //@line 4311 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+4)|0); //@line 4311 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($14)>>2)]; //@line 4311 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & -8; //@line 4311 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldsize=$16; //@line 4311 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=$oldp; //@line 4312 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$17; //@line 4312 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$oldsize; //@line 4312 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=(($18+$19)|0); //@line 4312 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$20; //@line 4312 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $next=$21; //@line 4312 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newp=0; //@line 4313 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $extra=0; //@line 4314 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$oldp; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$22; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$2; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24+16)|0); //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=HEAPU32[(($25)>>2)]; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=(($23)>>>0) >= (($26)>>>0); //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($27) { __label__ = 5; break; } else { var $47 = 0;__label__ = 8; break; } //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $29=$oldp; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=(($29+4)|0); //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[(($30)>>2)]; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$31 & 3; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=(($32)|0)!=1; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($33) { __label__ = 6; break; } else { var $47 = 0;__label__ = 8; break; } //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $35=$oldp; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$35; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$next; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=$37; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=(($36)>>>0) < (($38)>>>0); //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($39) { __label__ = 7; break; } else { var $47 = 0;__label__ = 8; break; } //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $41=$next; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($41+4)|0); //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[(($42)>>2)]; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$43 & 1; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=(($44)|0)!=0; //@line 4318 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47 = $45;__label__ = 8; break;
    case 8: 
      var $47;
      var $48=(($47)&1);
      var $49=(($48)==(1));
      var $50=(($49)|0)!=0;
      if ($50) { __label__ = 9; break; } else { __label__ = 24; break; }
    case 9: 
      var $52=$4; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=(($52)>>>0) < 11; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($53) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $61 = 16;__label__ = 12; break; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $56=$4; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=((($56)+(4))|0); //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=((($57)+(7))|0); //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$58 & -8; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61 = $59;__label__ = 12; break; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $61; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nb=$61; //@line 4320 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=$oldp; //@line 4321 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=(($62+4)|0); //@line 4321 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($63)>>2)]; //@line 4321 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=$64 & 3; //@line 4321 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=(($65)|0)==0; //@line 4321 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($66) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4321 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $68=$2; //@line 4322 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=$oldp; //@line 4322 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$nb; //@line 4322 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=_mmap_resize($68, $69, $70); //@line 4322 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newp=$71; //@line 4322 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4322 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $73=$oldsize; //@line 4323 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=$nb; //@line 4323 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=(($73)>>>0) >= (($74)>>>0); //@line 4323 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($75) { __label__ = 15; break; } else { __label__ = 18; break; } //@line 4323 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $77=$oldsize; //@line 4324 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=$nb; //@line 4324 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=((($77)-($78))|0); //@line 4324 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rsize=$79; //@line 4324 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=$oldp; //@line 4325 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newp=$80; //@line 4325 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=$rsize; //@line 4326 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=(($81)>>>0) >= 16; //@line 4326 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($82) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 4326 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $84=$newp; //@line 4327 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$84; //@line 4327 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=$nb; //@line 4327 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=(($85+$86)|0); //@line 4327 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=$87; //@line 4327 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $remainder=$88; //@line 4327 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=$newp; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=(($89+4)|0); //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=HEAP32[(($90)>>2)]; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=$91 & 1; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=$nb; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=$92 | $93; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=$94 | 2; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=$newp; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=(($96+4)|0); //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($97)>>2)]=$95; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$newp; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$98; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=$nb; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=(($99+$100)|0); //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=$101; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=(($102+4)|0); //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=HEAP32[(($103)>>2)]; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=$104 | 1; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($103)>>2)]=$105; //@line 4328 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=$rsize; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=$106 | 1; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=$107 | 2; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=$remainder; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=(($109+4)|0); //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($110)>>2)]=$108; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $111=$remainder; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=$111; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=$rsize; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=(($112+$113)|0); //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=$114; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=(($115+4)|0); //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=HEAP32[(($116)>>2)]; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=$117 | 1; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($116)>>2)]=$118; //@line 4329 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=$remainder; //@line 4330 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 4330 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=(($120+8)|0); //@line 4330 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $extra=$121; //@line 4330 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 17; break; //@line 4331 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      __label__ = 22; break; //@line 4332 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $124=$next; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=$2; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=(($125+24)|0); //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=HEAP32[(($126)>>2)]; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=(($124)|0)==(($127)|0); //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($128) { __label__ = 19; break; } else { __label__ = 21; break; } //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $130=$oldsize; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=$2; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=(($131+12)|0); //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($132)>>2)]; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=((($130)+($133))|0); //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$nb; //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=(($134)>>>0) > (($135)>>>0); //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($136) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 4333 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $138=$oldsize; //@line 4335 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$2; //@line 4335 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=(($139+12)|0); //@line 4335 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($140)>>2)]; //@line 4335 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=((($138)+($141))|0); //@line 4335 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newsize=$142; //@line 4335 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=$newsize; //@line 4336 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=$nb; //@line 4336 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=((($143)-($144))|0); //@line 4336 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newtopsize=$145; //@line 4336 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=$oldp; //@line 4337 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=$146; //@line 4337 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=$nb; //@line 4337 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=(($147+$148)|0); //@line 4337 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$149; //@line 4337 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newtop=$150; //@line 4337 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$oldp; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=(($151+4)|0); //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=HEAP32[(($152)>>2)]; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=$153 & 1; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=$nb; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=$154 | $155; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=$156 | 2; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=$oldp; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=(($158+4)|0); //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($159)>>2)]=$157; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=$oldp; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=$160; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=$nb; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=(($161+$162)|0); //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=$163; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=(($164+4)|0); //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=HEAP32[(($165)>>2)]; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $167=$166 | 1; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($165)>>2)]=$167; //@line 4338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=$newtopsize; //@line 4339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=$168 | 1; //@line 4339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=$newtop; //@line 4339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=(($170+4)|0); //@line 4339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($171)>>2)]=$169; //@line 4339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=$newtop; //@line 4340 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=$2; //@line 4340 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $174=(($173+24)|0); //@line 4340 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($174)>>2)]=$172; //@line 4340 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=$newtopsize; //@line 4341 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=$2; //@line 4341 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=(($176+12)|0); //@line 4341 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($177)>>2)]=$175; //@line 4341 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=$oldp; //@line 4342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newp=$178; //@line 4342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4343 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break;
    case 22: 
      __label__ = 23; break;
    case 23: 
      __label__ = 25; break; //@line 4344 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      _abort(); //@line 4346 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4346 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $184=$newp; //@line 4358 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=(($184)|0)!=0; //@line 4358 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($185) { __label__ = 26; break; } else { __label__ = 29; break; } //@line 4358 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $187=$extra; //@line 4359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $188=(($187)|0)!=0; //@line 4359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($188) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 4359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      var $190=$extra; //@line 4360 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _free($190); //@line 4360 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4361 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $192=$newp; //@line 4362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=$192; //@line 4362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=(($193+8)|0); //@line 4362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$194; //@line 4362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 4362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $196=$4; //@line 4365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=_malloc($196); //@line 4365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newmem=$197; //@line 4365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=$newmem; //@line 4366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=(($198)|0)!=0; //@line 4366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($199) { __label__ = 30; break; } else { __label__ = 34; break; } //@line 4366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $201=$oldsize; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=$oldp; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=(($202+4)|0); //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=HEAP32[(($203)>>2)]; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$204 & 3; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=(($205)|0)==0; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$206 ? 8 : 4; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=((($201)-($207))|0); //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oc=$208; //@line 4367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=$newmem; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=$3; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=$oc; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=$4; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=(($211)>>>0) < (($212)>>>0); //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($213) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $215=$oc; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $219 = $215;__label__ = 33; break; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $217=$4; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $219 = $217;__label__ = 33; break; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $219; //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      assert($219 % 1 === 0, 'memcpy given ' + $219 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($209, $210, $219, 1); //@line 4368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $220=$3; //@line 4369 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _free($220); //@line 4369 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 4370 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $222=$newmem; //@line 4371 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$222; //@line 4371 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 4371 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $224=$1; //@line 4375 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $224; //@line 4375 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_realloc["X"]=1;

function _malloc_footprint() {
  ;
  var __label__;

  var $1=HEAP32[((((__gm_+432)|0))>>2)]; //@line 4921 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return $1; //@line 4921 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _malloc_max_footprint() {
  ;
  var __label__;

  var $1=HEAP32[((((__gm_+436)|0))>>2)]; //@line 4925 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return $1; //@line 4925 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _ialloc($m, $n_elements, $sizes, $opts, $chunks) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $element_size;
      var $contents_size;
      var $array_size;
      var $mem;
      var $p;
      var $remainder_size;
      var $marray;
      var $array_chunk;
      var $was_enabled;
      var $size;
      var $i;
      var $array_chunk_size;
      $2=$m;
      $3=$n_elements;
      $4=$sizes;
      $5=$opts;
      $6=$chunks;
      var $7=HEAP32[((((_mparams)|0))>>2)]; //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=(($7)|0)!=0; //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($8) { var $13 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $10=_init_mparams(); //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=(($10)|0)!=0; //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13 = $11;__label__ = 4; break; //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13;
      var $14=(($13)&1); //@line 4492 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$6; //@line 4494 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($15)|0)!=0; //@line 4494 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 4494 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $18=$3; //@line 4495 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=(($18)|0)==0; //@line 4495 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($19) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4495 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $21=$6; //@line 4496 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$21; //@line 4496 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4496 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $23=$6; //@line 4497 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $marray=$23; //@line 4497 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $array_size=0; //@line 4498 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break; //@line 4499 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $25=$3; //@line 4502 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=(($25)|0)==0; //@line 4502 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($26) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4502 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $28=_malloc(0); //@line 4503 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 4503 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$29; //@line 4503 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4503 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      $marray=0; //@line 4504 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$3; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=((($31<<2))|0); //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=(($32)>>>0) < 11; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($33) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $42 = 16;__label__ = 13; break; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $36=$3; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=((($36<<2))|0); //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=((($37)+(4))|0); //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=((($38)+(7))|0); //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$39 & -8; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42 = $40;__label__ = 13; break; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $42; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $array_size=$42; //@line 4505 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break;
    case 14: 
      var $44=$5; //@line 4509 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$44 & 1; //@line 4509 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0)!=0; //@line 4509 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($46) { __label__ = 15; break; } else { __label__ = 19; break; } //@line 4509 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $48=$4; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=HEAPU32[(($48)>>2)]; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=(($49)>>>0) < 11; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($50) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $59 = 16;__label__ = 18; break; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $53=$4; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=HEAP32[(($53)>>2)]; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=((($54)+(4))|0); //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=((($55)+(7))|0); //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=$56 & -8; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59 = $57;__label__ = 18; break; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $59; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $element_size=$59; //@line 4510 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$3; //@line 4511 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$element_size; //@line 4511 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=((($60)*($61))|0); //@line 4511 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $contents_size=$62; //@line 4511 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4512 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      $element_size=0; //@line 4514 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $contents_size=0; //@line 4515 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=0; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $65=$i; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=$3; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=(($65)|0)!=(($66)|0); //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($67) { __label__ = 21; break; } else { __label__ = 26; break; } //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $69=$i; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$4; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=(($70+($69<<2))|0); //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=HEAPU32[(($71)>>2)]; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=(($72)>>>0) < 11; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($73) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $84 = 16;__label__ = 24; break; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $76=$i; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=$4; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=(($77+($76<<2))|0); //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=HEAP32[(($78)>>2)]; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=((($79)+(4))|0); //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=((($80)+(7))|0); //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=$81 & -8; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84 = $82;__label__ = 24; break; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $84; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$contents_size; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=((($85)+($84))|0); //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $contents_size=$86; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4517 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $88=$i; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=((($88)+(1))|0); //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=$89; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4516 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      __label__ = 27; break;
    case 27: 
      var $92=$contents_size; //@line 4520 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=$array_size; //@line 4520 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=((($92)+($93))|0); //@line 4520 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $size=$94; //@line 4520 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=$2; //@line 4527 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=(($95+440)|0); //@line 4527 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=HEAP32[(($96)>>2)]; //@line 4527 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$97 & 0; //@line 4527 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $was_enabled=$98; //@line 4527 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$2; //@line 4528 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=(($99+440)|0); //@line 4528 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[(($100)>>2)]; //@line 4528 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($100)>>2)]=$101; //@line 4528 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=$size; //@line 4529 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=((($102)-(4))|0); //@line 4529 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=_malloc($103); //@line 4529 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mem=$104; //@line 4529 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=$was_enabled; //@line 4530 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=(($105)|0)!=0; //@line 4530 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($106) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 4530 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $108=$2; //@line 4531 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=(($108+440)|0); //@line 4531 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=HEAP32[(($109)>>2)]; //@line 4531 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($109)>>2)]=$110; //@line 4531 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 29; break; //@line 4531 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $112=$mem; //@line 4532 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=(($112)|0)==0; //@line 4532 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($113) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4532 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      $1=0; //@line 4533 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4533 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $116=$mem; //@line 4536 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=((($116)-(8))|0); //@line 4536 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=$117; //@line 4536 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$118; //@line 4536 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=$p; //@line 4537 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=(($119+4)|0); //@line 4537 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=HEAP32[(($120)>>2)]; //@line 4537 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=$121 & -8; //@line 4537 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$122; //@line 4537 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=$5; //@line 4541 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=$123 & 2; //@line 4541 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=(($124)|0)!=0; //@line 4541 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($125) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4541 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $127=$mem; //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=$127; //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=$128; //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=$remainder_size; //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=((($130)-(4))|0); //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=$array_size; //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=((($131)-($132))|0); //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _memset($129, 0, $133, 4); //@line 4542 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4543 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $135=$marray; //@line 4546 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=(($135)|0)==0; //@line 4546 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($136) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 4546 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $138=$p; //@line 4548 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$138; //@line 4548 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=$contents_size; //@line 4548 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=(($139+$140)|0); //@line 4548 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=$141; //@line 4548 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $array_chunk=$142; //@line 4548 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=$remainder_size; //@line 4549 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=$contents_size; //@line 4549 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=((($143)-($144))|0); //@line 4549 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $array_chunk_size=$145; //@line 4549 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=$array_chunk; //@line 4550 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=$146; //@line 4550 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=(($147+8)|0); //@line 4550 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $149=$148; //@line 4550 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $marray=$149; //@line 4550 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $150=$array_chunk_size; //@line 4551 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$150 | 1; //@line 4551 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=$151 | 2; //@line 4551 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=$array_chunk; //@line 4551 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=(($153+4)|0); //@line 4551 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($154)>>2)]=$152; //@line 4551 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=$contents_size; //@line 4552 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$155; //@line 4552 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 4553 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      $i=0; //@line 4556 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4556 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $158=$p; //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=$158; //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=(($159+8)|0); //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=$i; //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=$marray; //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=(($162+($161<<2))|0); //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($163)>>2)]=$160; //@line 4557 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=$i; //@line 4558 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=$3; //@line 4558 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=((($165)-(1))|0); //@line 4558 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $167=(($164)|0)!=(($166)|0); //@line 4558 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($167) { __label__ = 37; break; } else { __label__ = 44; break; } //@line 4558 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $169=$element_size; //@line 4559 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=(($169)|0)!=0; //@line 4559 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($170) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 4559 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $172=$element_size; //@line 4560 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $size=$172; //@line 4560 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break; //@line 4560 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $174=$i; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $175=$4; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=(($175+($174<<2))|0); //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=HEAPU32[(($176)>>2)]; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=(($177)>>>0) < 11; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($178) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $189 = 16;__label__ = 42; break; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $181=$i; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $182=$4; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=(($182+($181<<2))|0); //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=HEAP32[(($183)>>2)]; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=((($184)+(4))|0); //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=((($185)+(7))|0); //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $187=$186 & -8; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189 = $187;__label__ = 42; break; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $189; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $size=$189; //@line 4562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break;
    case 43: 
      var $191=$size; //@line 4563 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $192=$remainder_size; //@line 4563 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=((($192)-($191))|0); //@line 4563 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$193; //@line 4563 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=$size; //@line 4564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=$194 | 1; //@line 4564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=$195 | 2; //@line 4564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=$p; //@line 4564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=(($197+4)|0); //@line 4564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($198)>>2)]=$196; //@line 4564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=$p; //@line 4565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=$199; //@line 4565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $201=$size; //@line 4565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=(($200+$201)|0); //@line 4565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=$202; //@line 4565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$203; //@line 4565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $205=$remainder_size; //@line 4568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=$205 | 1; //@line 4568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$206 | 2; //@line 4568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=$p; //@line 4568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=(($208+4)|0); //@line 4568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($209)>>2)]=$207; //@line 4568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4569 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      __label__ = 46; break; //@line 4571 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $212=$i; //@line 4556 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=((($212)+(1))|0); //@line 4556 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=$213; //@line 4556 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4556 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $215=$marray; //@line 4590 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$215; //@line 4590 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4590 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $217=$1; //@line 4591 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $217; //@line 4591 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_ialloc["X"]=1;

function _independent_comalloc($n_elements, $sizes, $chunks) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$n_elements;
  $2=$sizes;
  $3=$chunks;
  var $4=$1; //@line 4893 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $5=$2; //@line 4893 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $6=$3; //@line 4893 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $7=_ialloc(__gm_, $4, $5, 0, $6); //@line 4893 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return $7; //@line 4893 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _valloc($bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $pagesz;
      $1=$bytes;
      var $2=HEAP32[((((_mparams)|0))>>2)]; //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)|0)!=0; //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($3) { var $8 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=_init_mparams(); //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)|0)!=0; //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8 = $6;__label__ = 4; break; //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $8;
      var $9=(($8)&1); //@line 4898 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[((((_mparams+4)|0))>>2)]; //@line 4899 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $pagesz=$10; //@line 4899 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$pagesz; //@line 4900 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$1; //@line 4900 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=_memalign($11, $12); //@line 4900 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $13; //@line 4900 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _pvalloc($bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $pagesz;
      $1=$bytes;
      var $2=HEAP32[((((_mparams)|0))>>2)]; //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)|0)!=0; //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($3) { var $8 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=_init_mparams(); //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)|0)!=0; //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8 = $6;__label__ = 4; break; //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $8;
      var $9=(($8)&1); //@line 4905 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[((((_mparams+4)|0))>>2)]; //@line 4906 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $pagesz=$10; //@line 4906 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$pagesz; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$1; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$pagesz; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=((($12)+($13))|0); //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=((($14)-(1))|0); //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$pagesz; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=((($16)-(1))|0); //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$17 ^ -1; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$15 & $18; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=_memalign($11, $19); //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $20; //@line 4907 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _malloc_trim($pad) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $result;
      $1=$pad;
      $result=0; //@line 4911 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[((((_mparams)|0))>>2)]; //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)|0)!=0; //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($3) { var $8 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=_init_mparams(); //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)|0)!=0; //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8 = $6;__label__ = 4; break; //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $8;
      var $9=(($8)&1); //@line 4912 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$1; //@line 4914 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=_sys_trim(__gm_, $10); //@line 4914 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $result=$11; //@line 4914 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$result; //@line 4917 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $12; //@line 4917 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _mallinfo($agg_result) {
  ;
  var __label__;

  _internal_mallinfo($agg_result, __gm_); //@line 4930 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return; //@line 4930 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _internal_mallinfo($agg_result, $m) {
  var __stackBase__  = STACKTOP; STACKTOP += 40; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $nm=__stackBase__;
      var $nfree;
      var $mfree;
      var $sum;
      var $s;
      var $q;
      var $sz;
      $1=$m;
      var $2=$nm; //@line 3338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      for (var $$dest = $2>>2, $$stop = $$dest + 10; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      }; //@line 3338 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[((((_mparams)|0))>>2)]; //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)|0)!=0; //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($4) { var $9 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $6=_init_mparams(); //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=(($6)|0)!=0; //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9 = $7;__label__ = 4; break; //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $9;
      var $10=(($9)&1); //@line 3339 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$1; //@line 3342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=(($11+24)|0); //@line 3342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($12)>>2)]; //@line 3342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=(($13)|0)!=0; //@line 3342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($14) { __label__ = 5; break; } else { __label__ = 21; break; } //@line 3342 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      $nfree=1; //@line 3343 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$1; //@line 3344 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(($16+12)|0); //@line 3344 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($17)>>2)]; //@line 3344 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=((($18)+(40))|0); //@line 3344 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mfree=$19; //@line 3344 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$mfree; //@line 3345 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sum=$20; //@line 3345 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$1; //@line 3346 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=(($21+444)|0); //@line 3346 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $s=$22; //@line 3346 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 3347 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $24=$s; //@line 3347 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24)|0)!=0; //@line 3347 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 20; break; } //@line 3347 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $27=$s; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=(($27)|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=HEAP32[(($28)>>2)]; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$s; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($30)|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=HEAP32[(($31)>>2)]; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=(($32+8)|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=$33; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$34 & 7; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=(($35)|0)==0; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($36) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $48 = 0;__label__ = 10; break; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $39=$s; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=(($39)|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=HEAP32[(($40)>>2)]; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($41+8)|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$43 & 7; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=(((8)-($44))|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=$45 & 7; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48 = $46;__label__ = 10; break; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $48; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=(($29+$48)|0); //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$49; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $q=$50; //@line 3348 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $52=$q; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=$52; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=$s; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=(($54)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=HEAPU32[(($55)>>2)]; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($53)>>>0) >= (($56)>>>0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($57) { __label__ = 12; break; } else { var $81 = 0;__label__ = 15; break; } //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $59=$q; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$59; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$s; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=(($61)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=HEAP32[(($62)>>2)]; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=$s; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=(($64+4)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=HEAP32[(($65)>>2)]; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=(($63+$66)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=(($60)>>>0) < (($67)>>>0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($68) { __label__ = 13; break; } else { var $81 = 0;__label__ = 15; break; } //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $70=$q; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=$1; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=(($71+24)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=HEAP32[(($72)>>2)]; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($70)|0)!=(($73)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($74) { __label__ = 14; break; } else { var $81 = 0;__label__ = 15; break; } //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $76=$q; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(($76+4)|0); //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($77)>>2)]; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=(($78)|0)!=7; //@line 3349 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81 = $79;__label__ = 15; break;
    case 15: 
      var $81;
      if ($81) { __label__ = 16; break; } else { __label__ = 19; break; }
    case 16: 
      var $83=$q; //@line 3351 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=(($83+4)|0); //@line 3351 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=HEAP32[(($84)>>2)]; //@line 3351 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=$85 & -8; //@line 3351 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sz=$86; //@line 3351 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=$sz; //@line 3352 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=$sum; //@line 3352 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=((($88)+($87))|0); //@line 3352 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sum=$89; //@line 3352 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=$q; //@line 3353 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=(($90+4)|0); //@line 3353 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=HEAP32[(($91)>>2)]; //@line 3353 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=$92 & 3; //@line 3353 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=(($93)|0)!=1; //@line 3353 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($94) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 3353 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $96=$sz; //@line 3354 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=$mfree; //@line 3354 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=((($97)+($96))|0); //@line 3354 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mfree=$98; //@line 3354 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$nfree; //@line 3355 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=((($99)+(1))|0); //@line 3355 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nfree=$100; //@line 3355 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 3356 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $102=$q; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$102; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=$q; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=(($104+4)|0); //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=HEAP32[(($105)>>2)]; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=$106 & -8; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=(($103+$107)|0); //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=$108; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $q=$109; //@line 3357 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 3358 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $111=$s; //@line 3359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=(($111+8)|0); //@line 3359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($112)>>2)]; //@line 3359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $s=$113; //@line 3359 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 3360 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $115=$sum; //@line 3362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=(($nm)|0); //@line 3362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($116)>>2)]=$115; //@line 3362 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=$nfree; //@line 3363 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=(($nm+4)|0); //@line 3363 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($118)>>2)]=$117; //@line 3363 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=$1; //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=(($119+432)|0); //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=HEAP32[(($120)>>2)]; //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=$sum; //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=((($121)-($122))|0); //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=(($nm+16)|0); //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($124)>>2)]=$123; //@line 3364 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=$1; //@line 3365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=(($125+436)|0); //@line 3365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=HEAP32[(($126)>>2)]; //@line 3365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=(($nm+20)|0); //@line 3365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($128)>>2)]=$127; //@line 3365 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=$1; //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=(($129+432)|0); //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=HEAP32[(($130)>>2)]; //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=$mfree; //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=((($131)-($132))|0); //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=(($nm+28)|0); //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($134)>>2)]=$133; //@line 3366 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$mfree; //@line 3367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=(($nm+32)|0); //@line 3367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($136)>>2)]=$135; //@line 3367 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=$1; //@line 3368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=(($137+12)|0); //@line 3368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=HEAP32[(($138)>>2)]; //@line 3368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=(($nm+36)|0); //@line 3368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($140)>>2)]=$139; //@line 3368 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 3369 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $142=$agg_result; //@line 3373 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=$nm; //@line 3373 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      assert(40 % 1 === 0, 'memcpy given ' + 40 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');for (var $$src = $143>>2, $$dest = $142>>2, $$stop = $$src + 10; $$src < $$stop; $$src++, $$dest++) {
        HEAP32[$$dest] = HEAP32[$$src]
      }; //@line 3373 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      STACKTOP = __stackBase__;
      return; //@line 3373 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_mallinfo["X"]=1;

function _malloc_stats() {
  ;
  var __label__;

  _internal_malloc_stats(__gm_); //@line 4935 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return; //@line 4936 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _internal_malloc_stats($m) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $maxfp;
      var $fp;
      var $used;
      var $s;
      var $q;
      $1=$m;
      var $2=HEAP32[((((_mparams)|0))>>2)]; //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)|0)!=0; //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($3) { var $8 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=_init_mparams(); //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)|0)!=0; //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8 = $6;__label__ = 4; break; //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $8;
      var $9=(($8)&1); //@line 3378 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $maxfp=0; //@line 3380 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $fp=0; //@line 3381 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $used=0; //@line 3382 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$1; //@line 3384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=(($10+24)|0); //@line 3384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=HEAP32[(($11)>>2)]; //@line 3384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)|0)!=0; //@line 3384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 21; break; } //@line 3384 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $15=$1; //@line 3385 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($15+444)|0); //@line 3385 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $s=$16; //@line 3385 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=$1; //@line 3386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=(($17+436)|0); //@line 3386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[(($18)>>2)]; //@line 3386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $maxfp=$19; //@line 3386 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$1; //@line 3387 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=(($20+432)|0); //@line 3387 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=HEAP32[(($21)>>2)]; //@line 3387 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $fp=$22; //@line 3387 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$fp; //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$1; //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24+12)|0); //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($25)>>2)]; //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=((($26)+(40))|0); //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=((($23)-($27))|0); //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $used=$28; //@line 3388 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 3390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $30=$s; //@line 3390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($30)|0)!=0; //@line 3390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($31) { __label__ = 7; break; } else { __label__ = 20; break; } //@line 3390 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $33=$s; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=(($33)|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=HEAP32[(($34)>>2)]; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$s; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=(($36)|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($37)>>2)]; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=(($38+8)|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$39; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$40 & 7; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($41)|0)==0; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($42) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $54 = 0;__label__ = 10; break; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $45=$s; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=HEAP32[(($46)>>2)]; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=(($47+8)|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=$48; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$49 & 7; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=(((8)-($50))|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$51 & 7; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54 = $52;__label__ = 10; break; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $54; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=(($35+$54)|0); //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$55; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $q=$56; //@line 3391 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $58=$q; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$58; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$s; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=(($60)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=HEAPU32[(($61)>>2)]; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=(($59)>>>0) >= (($62)>>>0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($63) { __label__ = 12; break; } else { var $87 = 0;__label__ = 15; break; } //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $65=$q; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=$s; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=(($67)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=HEAP32[(($68)>>2)]; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$s; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=(($70+4)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($71)>>2)]; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=(($69+$72)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($66)>>>0) < (($73)>>>0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($74) { __label__ = 13; break; } else { var $87 = 0;__label__ = 15; break; } //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $76=$q; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=$1; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=(($77+24)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=HEAP32[(($78)>>2)]; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=(($76)|0)!=(($79)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($80) { __label__ = 14; break; } else { var $87 = 0;__label__ = 15; break; } //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $82=$q; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=(($82+4)|0); //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[(($83)>>2)]; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=(($84)|0)!=7; //@line 3392 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87 = $85;__label__ = 15; break;
    case 15: 
      var $87;
      if ($87) { __label__ = 16; break; } else { __label__ = 19; break; }
    case 16: 
      var $89=$q; //@line 3394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=(($89+4)|0); //@line 3394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=HEAP32[(($90)>>2)]; //@line 3394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=$91 & 3; //@line 3394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=(($92)|0)!=1; //@line 3394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($93) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 3394 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $95=$q; //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=(($95+4)|0); //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=HEAP32[(($96)>>2)]; //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$97 & -8; //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$used; //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=((($99)-($98))|0); //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $used=$100; //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 3395 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $102=$q; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$102; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=$q; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=(($104+4)|0); //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=HEAP32[(($105)>>2)]; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=$106 & -8; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=(($103+$107)|0); //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=$108; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $q=$109; //@line 3396 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 3397 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $111=$s; //@line 3398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $112=(($111+8)|0); //@line 3398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($112)>>2)]; //@line 3398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $s=$113; //@line 3398 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 3399 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      __label__ = 21; break; //@line 3400 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $116=HEAP32[((_stderr)>>2)]; //@line 3402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=$maxfp; //@line 3402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=_fprintf($116, ((STRING_TABLE.__str63)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$117,tempInt)); //@line 3402 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $119=HEAP32[((_stderr)>>2)]; //@line 3403 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=$fp; //@line 3403 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=_fprintf($119, ((STRING_TABLE.__str164)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$120,tempInt)); //@line 3403 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=HEAP32[((_stderr)>>2)]; //@line 3404 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=$used; //@line 3404 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=_fprintf($122, ((STRING_TABLE.__str265)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$123,tempInt)); //@line 3404 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      STACKTOP = __stackBase__;
      return; //@line 3408 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_malloc_stats["X"]=1;

function _mallopt($param_number, $value) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$param_number;
  $2=$value;
  var $3=$1; //@line 4939 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $4=$2; //@line 4939 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  var $5=_change_mparam($3, $4); //@line 4939 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
  ;
  return $5; //@line 4939 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
}


function _init_mparams() {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $magic;
      var $psize;
      var $gsize;
      var $1=HEAP32[((((_mparams)|0))>>2)]; //@line 2965 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $2=(($1)|0)==0; //@line 2965 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($2) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 2965 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $4=_sysconf(8); //@line 2971 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$4; //@line 2971 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=$psize; //@line 2972 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $gsize=$5; //@line 2972 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=$gsize; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=$gsize; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=((($7)-(1))|0); //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$6 & $8; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=(($9)|0)!=0; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($10) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $12=$psize; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$psize; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=((($13)-(1))|0); //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$12 & $14; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($15)|0)!=0; //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2989 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      _abort(); //@line 2997 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 2997 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $19=$gsize; //@line 2999 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+8)|0))>>2)]=$19; //@line 2999 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$psize; //@line 3000 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+4)|0))>>2)]=$20; //@line 3000 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+12)|0))>>2)]=-1; //@line 3001 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+16)|0))>>2)]=2097152; //@line 3002 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+20)|0))>>2)]=0; //@line 3004 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[((((_mparams+20)|0))>>2)]; //@line 3011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+440)|0))>>2)]=$21; //@line 3011 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=_time(0); //@line 3030 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$22 ^ 1431655765; //@line 3030 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $magic=$23; //@line 3030 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$magic; //@line 3032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$24 | 8; //@line 3032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $magic=$25; //@line 3032 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=$magic; //@line 3033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$26 & -8; //@line 3033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $magic=$27; //@line 3033 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$magic; //@line 3034 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams)|0))>>2)]=$28; //@line 3034 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 3036 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      ;
      return 1; //@line 3039 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _malloc_usable_size($mem) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $p;
      $2=$mem;
      var $3=$2; //@line 4945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)|0)!=0; //@line 4945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($4) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 4945 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $6=$2; //@line 4946 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=((($6)-(8))|0); //@line 4946 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$7; //@line 4946 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$8; //@line 4946 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$p; //@line 4947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=(($9+4)|0); //@line 4947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($10)>>2)]; //@line 4947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$11 & 3; //@line 4947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)|0)!=1; //@line 4947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($13) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4947 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $15=$p; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($15+4)|0); //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=HEAP32[(($16)>>2)]; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$17 & -8; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$p; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=(($19+4)|0); //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[(($20)>>2)]; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$21 & 3; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=(($22)|0)==0; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$23 ? 8 : 4; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=((($18)-($24))|0); //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$25; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 4948 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      __label__ = 6; break; //@line 4949 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      $1=0; //@line 4950 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 4950 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $29=$1; //@line 4951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $29; //@line 4951 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _mmap_resize($m, $oldp, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $oldsize;
      var $offset;
      var $oldmmsize;
      var $newmmsize;
      var $cp;
      var $newp;
      var $psize;
      $2=$m;
      $3=$oldp;
      $4=$nb;
      var $5=$3; //@line 3699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5+4)|0); //@line 3699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($6)>>2)]; //@line 3699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$7 & -8; //@line 3699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldsize=$8; //@line 3699 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$4; //@line 3700 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$9 >>> 3; //@line 3700 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=(($10)>>>0) < 32; //@line 3700 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3700 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      $1=0; //@line 3701 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3701 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $14=$oldsize; //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$4; //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=((($15)+(4))|0); //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(($14)>>>0) >= (($16)>>>0); //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($17) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $19=$oldsize; //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$4; //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=((($19)-($20))|0); //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$22 << 1; //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=(($21)>>>0) <= (($23)>>>0); //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($24) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3703 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $26=$3; //@line 3705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$26; //@line 3705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3705 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $28=$3; //@line 3707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=(($28)|0); //@line 3707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($29)>>2)]; //@line 3707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $offset=$30; //@line 3707 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$oldsize; //@line 3708 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$offset; //@line 3708 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=((($31)+($32))|0); //@line 3708 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=((($33)+(16))|0); //@line 3708 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldmmsize=$34; //@line 3708 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$4; //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=((($35)+(24))|0); //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=((($36)+(7))|0); //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=((($38)-(1))|0); //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=((($37)+($39))|0); //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=((($41)-(1))|0); //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$42 ^ -1; //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$40 & $43; //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newmmsize=$44; //@line 3709 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $cp=-1; //@line 3711 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$cp; //@line 3712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0)!=-1; //@line 3712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($46) { __label__ = 8; break; } else { __label__ = 13; break; } //@line 3712 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $48=$cp; //@line 3713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=$offset; //@line 3713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=(($48+$49)|0); //@line 3713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 3713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $newp=$51; //@line 3713 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$newmmsize; //@line 3714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=$offset; //@line 3714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=((($52)-($53))|0); //@line 3714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=((($54)-(16))|0); //@line 3714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$55; //@line 3714 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$psize; //@line 3715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=$newp; //@line 3715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=(($57+4)|0); //@line 3715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($58)>>2)]=$56; //@line 3715 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$newp; //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$59; //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$psize; //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=(($60+$61)|0); //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$62; //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=(($63+4)|0); //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($64)>>2)]=7; //@line 3717 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=$newp; //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=$psize; //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=((($67)+(4))|0); //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=(($66+$68)|0); //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$69; //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=(($70+4)|0); //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($71)>>2)]=0; //@line 3718 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=$cp; //@line 3720 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=$2; //@line 3720 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+16)|0); //@line 3720 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=HEAPU32[(($74)>>2)]; //@line 3720 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=(($72)>>>0) < (($75)>>>0); //@line 3720 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($76) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3720 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $78=$cp; //@line 3721 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=$2; //@line 3721 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+16)|0); //@line 3721 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($80)>>2)]=$78; //@line 3721 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3721 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $82=$newmmsize; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=$oldmmsize; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=((($82)-($83))|0); //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$2; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=(($85+432)|0); //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=HEAP32[(($86)>>2)]; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=((($87)+($84))|0); //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($86)>>2)]=$88; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=$2; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=(($89+436)|0); //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=HEAPU32[(($90)>>2)]; //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=(($88)>>>0) > (($91)>>>0); //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($92) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3722 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $94=$2; //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=(($94+432)|0); //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($95)>>2)]; //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=$2; //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=(($97+436)|0); //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($98)>>2)]=$96; //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 3723 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $100=$newp; //@line 3725 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$100; //@line 3725 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3725 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      __label__ = 14; break;
    case 14: 
      $1=0; //@line 3728 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3728 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $104=$1; //@line 3729 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $104; //@line 3729 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_mmap_resize["X"]=1;

function _segment_holding($m, $addr) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $sp;
      $2=$m;
      $3=$addr;
      var $4=$2; //@line 2562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=(($4+444)|0); //@line 2562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$5; //@line 2562 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 2563 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $7=$3; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$sp; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0); //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=HEAPU32[(($9)>>2)]; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=(($7)>>>0) >= (($10)>>>0); //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13=$3; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=$sp; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=(($14)|0); //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($15)>>2)]; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=$sp; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=(($17+4)|0); //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[(($18)>>2)]; //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=(($16+$19)|0); //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=(($13)>>>0) < (($20)>>>0); //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($21) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2564 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $23=$sp; //@line 2565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$23; //@line 2565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 2565 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $25=$sp; //@line 2566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=(($25+8)|0); //@line 2566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=HEAP32[(($26)>>2)]; //@line 2566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$27; //@line 2566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=(($27)|0)==0; //@line 2566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($28) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 2566 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      $1=0; //@line 2567 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 2567 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      __label__ = 3; break; //@line 2568 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $32=$1; //@line 2569 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $32; //@line 2569 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _init_top($m, $p, $psize) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $offset;
      $1=$m;
      $2=$p;
      $3=$psize;
      var $4=$2; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=$4; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5+8)|0); //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=$6; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$7 & 7; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0)==0; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $20 = 0;__label__ = 5; break; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $12=$2; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$12; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+8)|0); //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$14; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & 7; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(((8)-($16))|0); //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$17 & 7; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20 = $18;__label__ = 5; break; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $20; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $offset=$20; //@line 3736 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=$2; //@line 3737 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$21; //@line 3737 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$offset; //@line 3737 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=(($22+$23)|0); //@line 3737 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$24; //@line 3737 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $2=$25; //@line 3737 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=$offset; //@line 3738 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$3; //@line 3738 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=((($27)-($26))|0); //@line 3738 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $3=$28; //@line 3738 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=$2; //@line 3740 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$1; //@line 3740 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($30+24)|0); //@line 3740 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($31)>>2)]=$29; //@line 3740 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=$3; //@line 3741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$1; //@line 3741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=(($33+12)|0); //@line 3741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($34)>>2)]=$32; //@line 3741 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$3; //@line 3742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$35 | 1; //@line 3742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$2; //@line 3742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=(($37+4)|0); //@line 3742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($38)>>2)]=$36; //@line 3742 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=$2; //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$39; //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$3; //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($40+$41)|0); //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=(($43+4)|0); //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($44)>>2)]=40; //@line 3744 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=HEAP32[((((_mparams+16)|0))>>2)]; //@line 3745 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=$1; //@line 3745 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=(($46+28)|0); //@line 3745 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($47)>>2)]=$45; //@line 3745 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return; //@line 3746 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_init_top["X"]=1;

function _mmap_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $mmsize;
      var $mm;
      var $offset;
      var $psize;
      var $p;
      $2=$m;
      $3=$nb;
      var $4=$3; //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=((($4)+(24))|0); //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=((($5)+(7))|0); //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=((($7)-(1))|0); //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=((($6)+($8))|0); //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=((($10)-(1))|0); //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$11 ^ -1; //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$9 & $12; //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $mmsize=$13; //@line 3672 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=$mmsize; //@line 3673 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$3; //@line 3673 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($14)>>>0) > (($15)>>>0); //@line 3673 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 3; break; } else { __label__ = 14; break; } //@line 3673 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      $mm=-1; //@line 3674 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$mm; //@line 3675 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=(($18)|0)!=-1; //@line 3675 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($19) { __label__ = 4; break; } else { __label__ = 13; break; } //@line 3675 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $21=$mm; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=(($21+8)|0); //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$22; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$23 & 7; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24)|0)==0; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $35 = 0;__label__ = 7; break; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $28=$mm; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=(($28+8)|0); //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$29; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=$30 & 7; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=(((8)-($31))|0); //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$32 & 7; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35 = $33;__label__ = 7; break; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $35; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $offset=$35; //@line 3676 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$mmsize; //@line 3677 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$offset; //@line 3677 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38=((($36)-($37))|0); //@line 3677 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=((($38)-(16))|0); //@line 3677 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$39; //@line 3677 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$mm; //@line 3678 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$offset; //@line 3678 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($40+$41)|0); //@line 3678 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3678 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$43; //@line 3678 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$offset; //@line 3679 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$p; //@line 3679 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0); //@line 3679 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($46)>>2)]=$44; //@line 3679 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=$psize; //@line 3680 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=$p; //@line 3680 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=(($48+4)|0); //@line 3680 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($49)>>2)]=$47; //@line 3680 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$p; //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$psize; //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=(($51+$52)|0); //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=$53; //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=(($54+4)|0); //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($55)>>2)]=7; //@line 3682 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$p; //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=$psize; //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=((($58)+(4))|0); //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=(($57+$59)|0); //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$60; //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=(($61+4)|0); //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($62)>>2)]=0; //@line 3683 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$2; //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=(($63+16)|0); //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=HEAP32[(($64)>>2)]; //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=(($65)|0)==0; //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($66) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $68=$mm; //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=$2; //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=(($69+16)|0); //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=HEAPU32[(($70)>>2)]; //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=(($68)>>>0) < (($71)>>>0); //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($72) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3685 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $74=$mm; //@line 3686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=$2; //@line 3686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=(($75+16)|0); //@line 3686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($76)>>2)]=$74; //@line 3686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3686 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $78=$mmsize; //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=$2; //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+432)|0); //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($80)>>2)]; //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=((($81)+($78))|0); //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($80)>>2)]=$82; //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=$2; //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=(($83+436)|0); //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=HEAPU32[(($84)>>2)]; //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=(($82)>>>0) > (($85)>>>0); //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($86) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3687 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $88=$2; //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=(($88+432)|0); //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($89)>>2)]; //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=$2; //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=(($91+436)|0); //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($92)>>2)]=$90; //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 3688 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $94=$p; //@line 3691 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=$94; //@line 3691 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=(($95+8)|0); //@line 3691 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=$96; //@line 3691 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3691 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      __label__ = 14; break; //@line 3693 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      $1=0; //@line 3694 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3694 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $100=$1; //@line 3695 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $100; //@line 3695 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_mmap_alloc["X"]=1;

function _init_bins($m) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $bin;
      $1=$m;
      $i=0; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $3=$i; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)>>>0) < 32; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($4) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $6=$i; //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=$6 << 1; //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$1; //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=(($8+40)|0); //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=(($9+($7<<2))|0); //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=$10; //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$11; //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $bin=$12; //@line 3753 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=$bin; //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=$bin; //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=(($14+12)|0); //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($15)>>2)]=$13; //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$bin; //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(($16+8)|0); //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($17)>>2)]=$13; //@line 3754 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 3755 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $19=$i; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=((($19)+(1))|0); //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $i=$20; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 3752 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      ;
      return; //@line 3756 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _change_mparam($param_number, $value) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $val;
      $2=$param_number;
      $3=$value;
      var $4=HEAP32[((((_mparams)|0))>>2)]; //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $5=(($4)|0)!=0; //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($5) { var $10 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $7=_init_mparams(); //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=(($7)|0)!=0; //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10 = $8;__label__ = 4; break; //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $10;
      var $11=(($10)&1); //@line 3045 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$3; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)|0)==-1; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $18 = -1;__label__ = 7; break; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $16=$3; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18 = $16;__label__ = 7; break; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $18; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $val=$18; //@line 3046 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$2; //@line 3047 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ((($19)|0) == -1) {
        __label__ = 8; break;
      }
      else if ((($19)|0) == -2) {
        __label__ = 9; break;
      }
      else if ((($19)|0) == -3) {
        __label__ = 13; break;
      }
      else {
      __label__ = 14; break;
      }
      
    case 8: 
      var $21=$val; //@line 3049 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+16)|0))>>2)]=$21; //@line 3049 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=1; //@line 3050 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3050 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $23=$val; //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=HEAPU32[((((_mparams+4)|0))>>2)]; //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($23)>>>0) >= (($24)>>>0); //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 10; break; } else { __label__ = 12; break; } //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $27=$val; //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$val; //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=((($28)-(1))|0); //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $30=$27 & $29; //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $31=(($30)|0)==0; //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($31) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3052 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $33=$val; //@line 3053 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+8)|0))>>2)]=$33; //@line 3053 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=1; //@line 3054 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3054 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      $1=0; //@line 3057 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3057 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $36=$val; //@line 3059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+12)|0))>>2)]=$36; //@line 3059 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $1=1; //@line 3060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3060 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      $1=0; //@line 3062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3062 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $39=$1; //@line 3064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $39; //@line 3064 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_change_mparam["X"]=1;

function _prepend_alloc($m, $newbase, $oldbase, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $p;
      var $oldfirst;
      var $psize;
      var $q;
      var $qsize;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F1;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I2;
      var $B3;
      var $F4;
      var $TP5;
      var $H6;
      var $I7;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K8;
      var $C;
      var $F9;
      $1=$m;
      $2=$newbase;
      $3=$oldbase;
      $4=$nb;
      var $5=$2; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=$2; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=(($6+8)|0); //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$7; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$8 & 7; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=(($9)|0)==0; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $20 = 0;__label__ = 5; break; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13=$2; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+8)|0); //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$14; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & 7; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=(((8)-($16))|0); //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=$17 & 7; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20 = $18;__label__ = 5; break; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $20; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=(($5+$20)|0); //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=$21; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$22; //@line 3780 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=$3; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=$3; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=(($24+8)|0); //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=$25; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$26 & 7; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=(($27)|0)==0; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($28) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $38 = 0;__label__ = 8; break; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $31=$3; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $32=(($31+8)|0); //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=$33 & 7; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=(((8)-($34))|0); //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=$35 & 7; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $38 = $36;__label__ = 8; break; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $38; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39=(($23+$38)|0); //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$39; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$40; //@line 3781 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$oldfirst; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=$41; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$p; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=$42; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=$44; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $47=((($45)-($46))|0); //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$47; //@line 3782 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $48=$p; //@line 3783 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $49=$48; //@line 3783 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $50=$4; //@line 3783 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $51=(($49+$50)|0); //@line 3783 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52=$51; //@line 3783 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $q=$52; //@line 3783 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=$psize; //@line 3784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=$4; //@line 3784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=((($53)-($54))|0); //@line 3784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $qsize=$55; //@line 3784 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$4; //@line 3785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=$56 | 1; //@line 3785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=$57 | 2; //@line 3785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$p; //@line 3785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=(($59+4)|0); //@line 3785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($60)>>2)]=$58; //@line 3785 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$oldfirst; //@line 3792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=$1; //@line 3792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=(($62+24)|0); //@line 3792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($63)>>2)]; //@line 3792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=(($61)|0)==(($64)|0); //@line 3792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($65) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3792 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $67=$qsize; //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=$1; //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=(($68+12)|0); //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($69)>>2)]; //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=((($70)+($67))|0); //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($69)>>2)]=$71; //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tsize=$71; //@line 3793 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=$q; //@line 3794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=$1; //@line 3794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+24)|0); //@line 3794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($74)>>2)]=$72; //@line 3794 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=$tsize; //@line 3795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=$75 | 1; //@line 3795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=$q; //@line 3795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=(($77+4)|0); //@line 3795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($78)>>2)]=$76; //@line 3795 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 110; break; //@line 3797 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $80=$oldfirst; //@line 3798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=$1; //@line 3798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=(($81+20)|0); //@line 3798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=HEAP32[(($82)>>2)]; //@line 3798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=(($80)|0)==(($83)|0); //@line 3798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($84) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3798 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $86=$qsize; //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=$1; //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=(($87+8)|0); //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=HEAP32[(($88)>>2)]; //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=((($89)+($86))|0); //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($88)>>2)]=$90; //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $dsize=$90; //@line 3799 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=$q; //@line 3800 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=$1; //@line 3800 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=(($92+20)|0); //@line 3800 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($93)>>2)]=$91; //@line 3800 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=$dsize; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=$94 | 1; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $96=$q; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $97=(($96+4)|0); //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($97)>>2)]=$95; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$dsize; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=$q; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=$99; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$dsize; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=(($100+$101)|0); //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$102; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=(($103)|0); //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($104)>>2)]=$98; //@line 3801 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 109; break; //@line 3802 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $106=$oldfirst; //@line 3804 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=(($106+4)|0); //@line 3804 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($107)>>2)]; //@line 3804 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=$108 & 3; //@line 3804 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $110=(($109)|0)!=1; //@line 3804 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($110) { __label__ = 73; break; } else { __label__ = 13; break; } //@line 3804 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $112=$oldfirst; //@line 3805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $113=(($112+4)|0); //@line 3805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($113)>>2)]; //@line 3805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $115=$114 & -8; //@line 3805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nsize=$115; //@line 3805 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=$nsize; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=$116 >>> 3; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $118=(($117)>>>0) < 32; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($118) { __label__ = 14; break; } else { __label__ = 26; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $120=$oldfirst; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=(($120+8)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=HEAP32[(($121)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$122; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=$oldfirst; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=(($123+12)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=HEAP32[(($124)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B=$125; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=$nsize; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=$126 >>> 3; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$127; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=$F; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=$B; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=(($128)|0)==(($129)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($130) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $132=$I; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=1 << $132; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=$133 ^ -1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=(($135)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=HEAP32[(($136)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=$137 & $134; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($136)>>2)]=$138; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $140=$F; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=$I; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=$141 << 1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=(($143+40)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=(($144+($142<<2))|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=$145; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=$146; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=(($140)|0)==(($147)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($148) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $150=$F; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$150; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=(($152+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=HEAPU32[(($153)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=(($151)>>>0) >= (($154)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($155) { __label__ = 18; break; } else { var $176 = 0;__label__ = 21; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $157=$B; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=$I; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=$158 << 1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=(($160+40)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=(($161+($159<<2))|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=$162; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=$163; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=(($157)|0)==(($164)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($165) { var $174 = 1;__label__ = 20; break; } else { __label__ = 19; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $167=$B; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $168=$167; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=(($169+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=HEAPU32[(($170)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=(($168)>>>0) >= (($171)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $174 = $172;__label__ = 20; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $174;
      var $176 = $174;__label__ = 21; break;
    case 21: 
      var $176;
      var $177=(($176)&1);
      var $178=(($177)==(1));
      var $179=(($178)|0)!=0;
      if ($179) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: 
      var $181=$B; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $182=$F; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=(($182+12)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($183)>>2)]=$181; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=$F; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=$B; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $186=(($185+8)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($186)>>2)]=$184; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 24; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      __label__ = 25; break;
    case 25: 
      __label__ = 72; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $191=$oldfirst; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $192=$191; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $TP=$192; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $193=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=(($193+24)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=HEAP32[(($194)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $XP=$195; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=(($196+12)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=HEAP32[(($197)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=(($198)|0)!=(($199)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($200) { __label__ = 27; break; } else { __label__ = 31; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 27: 
      var $202=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=(($202+8)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=HEAP32[(($203)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F1=$204; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $205=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $206=(($205+12)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=HEAP32[(($206)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$207; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=$F1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=$208; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=(($210+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $212=HEAPU32[(($211)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $213=(($209)>>>0) >= (($212)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $214=(($213)&1); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $215=(($214)==(1)); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $216=(($215)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($216) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $218=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $219=$F1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $220=(($219+12)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($220)>>2)]=$218; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=$F1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=(($222+8)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($223)>>2)]=$221; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      __label__ = 43; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $227=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=(($227+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $229=(($228+4)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$229; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230=HEAP32[(($229)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$230; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $231=(($230)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($231) { __label__ = 33; break; } else { __label__ = 32; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $233=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $234=(($233+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $235=(($234)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$235; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $236=HEAP32[(($235)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$236; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=(($236)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($237) { __label__ = 33; break; } else { __label__ = 42; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      __label__ = 34; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $240=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $241=(($240+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $242=(($241+4)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$242; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=HEAP32[(($242)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=(($243)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($244) { var $252 = 1;__label__ = 36; break; } else { __label__ = 35; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $246=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=(($246+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=(($247)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $CP=$248; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $249=HEAP32[(($248)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $250=(($249)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $252 = $250;__label__ = 36; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $252;
      if ($252) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $254=$CP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $RP=$254; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $255=HEAP32[(($254)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $R=$255; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $257=$RP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $258=$257; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=(($259+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $261=HEAPU32[(($260)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $262=(($258)>>>0) >= (($261)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $263=(($262)&1); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $264=(($263)==(1)); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $265=(($264)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($265) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $267=$RP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($267)>>2)]=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 41: 
      __label__ = 42; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      __label__ = 43; break;
    case 43: 
      var $272=$XP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $273=(($272)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($273) { __label__ = 44; break; } else { __label__ = 71; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $275=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=(($275+28)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $277=HEAP32[(($276)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $278=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=(($278+304)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $280=(($279+($277<<2))|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H=$280; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $281=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=$H; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $283=HEAP32[(($282)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $284=(($281)|0)==(($283)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($284) { __label__ = 45; break; } else { __label__ = 48; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      var $286=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=$H; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($287)>>2)]=$286; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=(($286)|0)==0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($288) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $290=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $291=(($290+28)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $292=HEAP32[(($291)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $293=1 << $292; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $294=$293 ^ -1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $295=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $296=(($295+4)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $297=HEAP32[(($296)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $298=$297 & $294; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($296)>>2)]=$298; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      __label__ = 55; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $301=$XP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $302=$301; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $303=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $304=(($303+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $305=HEAPU32[(($304)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $306=(($302)>>>0) >= (($305)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $307=(($306)&1); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $308=(($307)==(1)); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $309=(($308)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($309) { __label__ = 49; break; } else { __label__ = 53; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $311=$XP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $312=(($311+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $313=(($312)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $314=HEAP32[(($313)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=(($314)|0)==(($315)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($316) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $318=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $319=$XP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $320=(($319+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=(($320)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($321)>>2)]=$318; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $323=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=$XP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=(($324+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=(($325+4)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($326)>>2)]=$323; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break;
    case 52: 
      __label__ = 54; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 53: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 54: 
      __label__ = 55; break;
    case 55: 
      var $331=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $332=(($331)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($332) { __label__ = 56; break; } else { __label__ = 70; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 56: 
      var $334=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $335=$334; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $336=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $337=(($336+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $338=HEAPU32[(($337)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=(($335)>>>0) >= (($338)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=(($339)&1); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=(($340)==(1)); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=(($341)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($342) { __label__ = 57; break; } else { __label__ = 68; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $344=$XP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $345=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=(($345+24)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($346)>>2)]=$344; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348=(($347+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $349=(($348)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=HEAP32[(($349)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C0=$350; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=(($350)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($351) { __label__ = 58; break; } else { __label__ = 62; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 58: 
      var $353=$C0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $354=$353; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $355=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $356=(($355+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $357=HEAPU32[(($356)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=(($354)>>>0) >= (($357)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=(($358)&1); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $360=(($359)==(1)); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $361=(($360)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($361) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $363=$C0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $364=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $365=(($364+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $366=(($365)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($366)>>2)]=$363; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $367=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=$C0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=(($368+24)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($369)>>2)]=$367; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 61; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 60: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 61: 
      __label__ = 62; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $373=$TP; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374=(($373+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $375=(($374+4)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $376=HEAP32[(($375)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C1=$376; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $377=(($376)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($377) { __label__ = 63; break; } else { __label__ = 67; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $379=$C1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=$379; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=$1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=(($381+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $383=HEAPU32[(($382)>>2)]; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $384=(($380)>>>0) >= (($383)>>>0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $385=(($384)&1); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=(($385)==(1)); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=(($386)|0)!=0; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($387) { __label__ = 64; break; } else { __label__ = 65; break; } //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 64: 
      var $389=$C1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $390=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $391=(($390+16)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $392=(($391+4)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($392)>>2)]=$389; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $393=$R; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $394=$C1; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $395=(($394+24)|0); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($395)>>2)]=$393; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 65: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 66: 
      __label__ = 67; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 67: 
      __label__ = 69; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 68: 
      _abort(); //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 70: 
      __label__ = 71; break; //@line 3806 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 71: 
      __label__ = 72; break;
    case 72: 
      var $404=$oldfirst; //@line 3807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $405=$404; //@line 3807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $406=$nsize; //@line 3807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $407=(($405+$406)|0); //@line 3807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $408=$407; //@line 3807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$408; //@line 3807 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $409=$nsize; //@line 3808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $410=$qsize; //@line 3808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $411=((($410)+($409))|0); //@line 3808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $qsize=$411; //@line 3808 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 73; break; //@line 3809 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $413=$oldfirst; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $414=(($413+4)|0); //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $415=HEAP32[(($414)>>2)]; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $416=$415 & -2; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($414)>>2)]=$416; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $417=$qsize; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $418=$417 | 1; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $419=$q; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $420=(($419+4)|0); //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($420)>>2)]=$418; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $421=$qsize; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $422=$q; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $423=$422; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $424=$qsize; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $425=(($423+$424)|0); //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $426=$425; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $427=(($426)|0); //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($427)>>2)]=$421; //@line 3810 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $428=$qsize; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $429=$428 >>> 3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $430=(($429)>>>0) < 32; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($430) { __label__ = 74; break; } else { __label__ = 81; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $432=$qsize; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $433=$432 >>> 3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I2=$433; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $434=$I2; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $435=$434 << 1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $436=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $437=(($436+40)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $438=(($437+($435<<2))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $439=$438; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $440=$439; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B3=$440; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $441=$B3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F4=$441; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $442=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $443=(($442)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $444=HEAP32[(($443)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $445=$I2; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $446=1 << $445; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $447=$444 & $446; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $448=(($447)|0)!=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($448) { __label__ = 76; break; } else { __label__ = 75; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 75: 
      var $450=$I2; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $451=1 << $450; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $452=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $453=(($452)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $454=HEAP32[(($453)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $455=$454 | $451; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($453)>>2)]=$455; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 80; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 76: 
      var $457=$B3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $458=(($457+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $459=HEAP32[(($458)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $460=$459; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $461=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $462=(($461+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $463=HEAPU32[(($462)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $464=(($460)>>>0) >= (($463)>>>0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $465=(($464)&1); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $466=(($465)==(1)); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $467=(($466)|0)!=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($467) { __label__ = 77; break; } else { __label__ = 78; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 77: 
      var $469=$B3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $470=(($469+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $471=HEAP32[(($470)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F4=$471; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 79; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 78: 
      _abort(); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 79: 
      __label__ = 80; break;
    case 80: 
      var $475=$q; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $476=$B3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $477=(($476+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($477)>>2)]=$475; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $478=$q; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $479=$F4; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $480=(($479+12)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($480)>>2)]=$478; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $481=$F4; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $482=$q; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $483=(($482+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($483)>>2)]=$481; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $484=$B3; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $485=$q; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $486=(($485+12)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($486)>>2)]=$484; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 108; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 81: 
      var $488=$q; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $489=$488; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $TP5=$489; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $490=$qsize; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $491=$490 >>> 8; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $X=$491; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $492=$X; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $493=(($492)|0)==0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($493) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 82: 
      $I7=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 87; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 83: 
      var $496=$X; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $497=(($496)>>>0) > 65535; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($497) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 84: 
      $I7=31; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 86; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 85: 
      var $500=$X; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$500; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $501=$Y; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $502=((($501)-(256))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $503=$502 >>> 16; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $504=$503 & 8; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$504; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $505=$N; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $506=$Y; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $507=$506 << $505; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$507; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $508=((($507)-(4096))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $509=$508 >>> 16; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $510=$509 & 4; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$510; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $511=$K; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $512=$N; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $513=((($512)+($511))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$513; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $514=$K; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $515=$Y; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $516=$515 << $514; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$516; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $517=((($516)-(16384))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $518=$517 >>> 16; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $519=$518 & 2; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$519; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $520=$N; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $521=((($520)+($519))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$521; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $522=$N; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $523=(((14)-($522))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $524=$K; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $525=$Y; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $526=$525 << $524; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$526; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $527=$526 >>> 15; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $528=((($523)+($527))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$528; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $529=$K; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $530=$529 << 1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $531=$qsize; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $532=$K; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $533=((($532)+(7))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $534=$531 >>> (($533)>>>0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $535=$534 & 1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $536=((($530)+($535))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I7=$536; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 86; break;
    case 86: 
      __label__ = 87; break;
    case 87: 
      var $539=$I7; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $540=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $541=(($540+304)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $542=(($541+($539<<2))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H6=$542; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $543=$I7; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $544=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $545=(($544+28)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($545)>>2)]=$543; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $546=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $547=(($546+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $548=(($547+4)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($548)>>2)]=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $549=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $550=(($549+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $551=(($550)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($551)>>2)]=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $552=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $553=(($552+4)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $554=HEAP32[(($553)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $555=$I7; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $556=1 << $555; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $557=$554 & $556; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $558=(($557)|0)!=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($558) { __label__ = 89; break; } else { __label__ = 88; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $560=$I7; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $561=1 << $560; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $562=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $563=(($562+4)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $564=HEAP32[(($563)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $565=$564 | $561; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($563)>>2)]=$565; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $566=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $567=$H6; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($567)>>2)]=$566; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $568=$H6; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $569=$568; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $570=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $571=(($570+24)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($571)>>2)]=$569; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $572=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $573=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $574=(($573+12)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($574)>>2)]=$572; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $575=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $576=(($575+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($576)>>2)]=$572; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 107; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $578=$H6; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $579=HEAP32[(($578)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$579; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $580=$qsize; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $581=$I7; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $582=(($581)|0)==31; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($582) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $591 = 0;__label__ = 92; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $585=$I7; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $586=$585 >>> 1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $587=((($586)+(8))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $588=((($587)-(2))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $589=(((31)-($588))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $591 = $589;__label__ = 92; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $591; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $592=$580 << $591; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K8=$592; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 93: 
      var $594=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $595=(($594+4)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $596=HEAP32[(($595)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $597=$596 & -8; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $598=$qsize; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $599=(($597)|0)!=(($598)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($599) { __label__ = 94; break; } else { __label__ = 100; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 94: 
      var $601=$K8; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $602=$601 >>> 31; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $603=$602 & 1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $604=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $605=(($604+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $606=(($605+($603<<2))|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C=$606; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $607=$K8; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $608=$607 << 1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K8=$608; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $609=$C; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $610=HEAP32[(($609)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $611=(($610)|0)!=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($611) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 95: 
      var $613=$C; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $614=HEAP32[(($613)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$614; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 96: 
      var $616=$C; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $617=$616; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $618=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $619=(($618+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $620=HEAPU32[(($619)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $621=(($617)>>>0) >= (($620)>>>0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $622=(($621)&1); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $623=(($622)==(1)); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $624=(($623)|0)!=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($624) { __label__ = 97; break; } else { __label__ = 98; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 97: 
      var $626=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $627=$C; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($627)>>2)]=$626; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $628=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $629=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $630=(($629+24)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($630)>>2)]=$628; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $631=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $632=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $633=(($632+12)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($633)>>2)]=$631; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $634=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $635=(($634+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($635)>>2)]=$631; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 98: 
      _abort(); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 99: 
      __label__ = 105; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 100: 
      var $639=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $640=(($639+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $641=HEAP32[(($640)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F9=$641; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $642=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $643=$642; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $644=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $645=(($644+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $646=HEAPU32[(($645)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $647=(($643)>>>0) >= (($646)>>>0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($647) { __label__ = 101; break; } else { var $656 = 0;__label__ = 102; break; } //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 101: 
      var $649=$F9; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $650=$649; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $651=$1; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $652=(($651+16)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $653=HEAPU32[(($652)>>2)]; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $654=(($650)>>>0) >= (($653)>>>0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $656 = $654;__label__ = 102; break;
    case 102: 
      var $656;
      var $657=(($656)&1);
      var $658=(($657)==(1));
      var $659=(($658)|0)!=0;
      if ($659) { __label__ = 103; break; } else { __label__ = 104; break; }
    case 103: 
      var $661=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $662=$F9; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $663=(($662+12)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($663)>>2)]=$661; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $664=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $665=(($664+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($665)>>2)]=$661; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $666=$F9; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $667=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $668=(($667+8)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($668)>>2)]=$666; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $669=$T; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $670=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $671=(($670+12)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($671)>>2)]=$669; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $672=$TP5; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $673=(($672+24)|0); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($673)>>2)]=0; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 104: 
      _abort(); //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 105: 
      __label__ = 93; break; //@line 3811 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 106: 
      __label__ = 107; break;
    case 107: 
      __label__ = 108; break;
    case 108: 
      __label__ = 109; break;
    case 109: 
      __label__ = 110; break;
    case 110: 
      var $681=$p; //@line 3816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $682=$681; //@line 3816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $683=(($682+8)|0); //@line 3816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      ;
      return $683; //@line 3816 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prepend_alloc["X"]=1;

function __ZNKSt9bad_alloc4whatEv($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  ;
  return ((STRING_TABLE.__str366)|0); //@line 160 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZSt15get_new_handlerv() {
  ;
  var __label__;

  var $1=(tempValue=HEAP32[((__ZL13__new_handler)>>2)],HEAP32[((__ZL13__new_handler)>>2)]=tempValue+0,tempValue); //@line 146 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  var $2=$1; //@line 146 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return $2; //@line 146 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZSt15set_new_handlerPFvvE($handler) {
  ;
  var __label__;

  var $1;
  $1=$handler;
  var $2=$1; //@line 140 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  var $3=$2; //@line 140 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  var $4=(tempValue=HEAP32[((__ZL13__new_handler)>>2)],HEAP32[((__ZL13__new_handler)>>2)]=$3,tempValue); //@line 140 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  var $5=$4; //@line 140 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return $5; //@line 140 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt9bad_allocC2Ev($this) {
  ;
  var __label__;

  var $1;
  var $2;
  $2=$this;
  var $3=$2;
  var $4=$3; //@line 150 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  $1=$4;
  var $5=$1;
  var $6=$5; //@line 90 "/Users/aroben/dev/emscripten/system/include/libcxx/exception"
  HEAP32[(($6)>>2)]=((__ZTVSt9exception+8)|0); //@line 90 "/Users/aroben/dev/emscripten/system/include/libcxx/exception"
  var $7=$3; //@line 150 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  HEAP32[(($7)>>2)]=((__ZTVSt9bad_alloc+8)|0); //@line 150 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 151 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt9bad_allocC1Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZNSt9bad_allocC2Ev($2); //@line 151 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 151 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
}


function __ZNSt9bad_allocD1Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZNSt9bad_allocD2Ev($2); //@line 154 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 155 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
}


function __ZdlPv($ptr) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$ptr;
      var $2=$1; //@line 107 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $3=(($2)|0)!=0; //@line 107 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      if ($3) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 107 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 3: 
      var $5=$1; //@line 108 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      _free($5); //@line 108 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 4; break; //@line 108 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 4: 
      ;
      return; //@line 109 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZdlPvRKSt9nothrow_t($ptr, $0) {
  ;
  var __label__;

  var $2;
  var $3;
  $2=$ptr;
  $3=$0;
  var $4=$2; //@line 115 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  __ZdlPv($4); //@line 115 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 116 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZdaPv($ptr) {
  ;
  var __label__;

  var $1;
  $1=$ptr;
  var $2=$1; //@line 122 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  __ZdlPv($2); //@line 122 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 123 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZdaPvRKSt9nothrow_t($ptr, $0) {
  ;
  var __label__;

  var $2;
  var $3;
  $2=$ptr;
  $3=$0;
  var $4=$2; //@line 129 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  __ZdaPv($4); //@line 129 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 130 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt9bad_allocD0Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZNSt9bad_allocD1Ev($2); //@line 154 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  var $3=$2; //@line 154 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  __ZdlPv($3); //@line 154 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 155 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
}


function __ZNSt9bad_allocD2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=$2; //@line 155 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  __ZNSt9exceptionD2Ev($3); //@line 155 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 155 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function _add_segment($m, $tbase, $tsize, $mmapped) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $old_top;
      var $oldsp;
      var $old_end;
      var $ssize;
      var $rawsp;
      var $offset;
      var $asp;
      var $csp;
      var $sp;
      var $ss;
      var $tnext;
      var $p;
      var $nfences;
      var $nextp;
      var $q;
      var $psize;
      var $tn;
      var $I;
      var $B;
      var $F;
      var $TP;
      var $H;
      var $I1;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K2;
      var $C;
      var $F3;
      $1=$m;
      $2=$tbase;
      $3=$tsize;
      $4=$mmapped;
      var $5=$1; //@line 3822 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $6=(($5+24)|0); //@line 3822 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($6)>>2)]; //@line 3822 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $8=$7; //@line 3822 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $old_top=$8; //@line 3822 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $9=$1; //@line 3823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $10=$old_top; //@line 3823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $11=_segment_holding($9, $10); //@line 3823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $oldsp=$11; //@line 3823 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $12=$oldsp; //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)|0); //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($13)>>2)]; //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $15=$oldsp; //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $16=(($15+4)|0); //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $17=HEAP32[(($16)>>2)]; //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $18=(($14+$17)|0); //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $old_end=$18; //@line 3824 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $ssize=24; //@line 3825 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $19=$old_end; //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $20=$ssize; //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $21=((($20)+(16))|0); //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $22=((($21)+(7))|0); //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $23=(((-$22))|0); //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $24=(($19+$23)|0); //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $rawsp=$24; //@line 3826 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $25=$rawsp; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $26=(($25+8)|0); //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $27=$26; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $28=$27 & 7; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $29=(($28)|0)==0; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($29) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $39 = 0;__label__ = 5; break; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $32=$rawsp; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $33=(($32+8)|0); //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $34=$33; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $35=$34 & 7; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $36=(((8)-($35))|0); //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $37=$36 & 7; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $39 = $37;__label__ = 5; break; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $39; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $offset=$39; //@line 3827 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $40=$rawsp; //@line 3828 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $41=$offset; //@line 3828 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $42=(($40+$41)|0); //@line 3828 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $asp=$42; //@line 3828 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $43=$asp; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $44=$old_top; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $45=(($44+16)|0); //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $46=(($43)>>>0) < (($45)>>>0); //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($46) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $48=$old_top; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52 = $48;__label__ = 8; break; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $50=$asp; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $52 = $50;__label__ = 8; break; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $52; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $csp=$52; //@line 3829 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $53=$csp; //@line 3830 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $54=$53; //@line 3830 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $sp=$54; //@line 3830 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $55=$sp; //@line 3831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $56=$55; //@line 3831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+8)|0); //@line 3831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $58=$57; //@line 3831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $ss=$58; //@line 3831 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $59=$sp; //@line 3832 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $60=$59; //@line 3832 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $61=$ssize; //@line 3832 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $62=(($60+$61)|0); //@line 3832 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $63=$62; //@line 3832 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tnext=$63; //@line 3832 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $64=$tnext; //@line 3833 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$64; //@line 3833 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nfences=0; //@line 3834 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $65=$1; //@line 3837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $66=$2; //@line 3837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $67=$66; //@line 3837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $68=$3; //@line 3837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)-(40))|0); //@line 3837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      _init_top($65, $67, $69); //@line 3837 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $70=$ssize; //@line 3841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $71=$70 | 1; //@line 3841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $72=$71 | 2; //@line 3841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $73=$sp; //@line 3841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+4)|0); //@line 3841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($74)>>2)]=$72; //@line 3841 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $75=$ss; //@line 3842 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $76=$1; //@line 3842 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $77=(($76+444)|0); //@line 3842 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $78=$75; //@line 3842 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $79=$77; //@line 3842 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      assert(16 % 1 === 0, 'memcpy given ' + 16 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP32[(($78)>>2)]=HEAP32[(($79)>>2)];HEAP32[((($78)+(4))>>2)]=HEAP32[((($79)+(4))>>2)];HEAP32[((($78)+(8))>>2)]=HEAP32[((($79)+(8))>>2)];HEAP32[((($78)+(12))>>2)]=HEAP32[((($79)+(12))>>2)]; //@line 3842 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $80=$2; //@line 3843 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $81=$1; //@line 3843 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $82=(($81+444)|0); //@line 3843 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $83=(($82)|0); //@line 3843 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($83)>>2)]=$80; //@line 3843 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $84=$3; //@line 3844 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $85=$1; //@line 3844 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $86=(($85+444)|0); //@line 3844 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $87=(($86+4)|0); //@line 3844 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($87)>>2)]=$84; //@line 3844 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $88=$4; //@line 3845 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $89=$1; //@line 3845 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $90=(($89+444)|0); //@line 3845 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $91=(($90+12)|0); //@line 3845 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($91)>>2)]=$88; //@line 3845 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $92=$ss; //@line 3846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $93=$1; //@line 3846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $94=(($93+444)|0); //@line 3846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $95=(($94+8)|0); //@line 3846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($95)>>2)]=$92; //@line 3846 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 3849 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $97=$p; //@line 3850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $98=$97; //@line 3850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $99=(($98+4)|0); //@line 3850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $100=$99; //@line 3850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nextp=$100; //@line 3850 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $101=$p; //@line 3851 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $102=(($101+4)|0); //@line 3851 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($102)>>2)]=7; //@line 3851 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $103=$nfences; //@line 3852 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $104=((($103)+(1))|0); //@line 3852 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $nfences=$104; //@line 3852 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $105=$nextp; //@line 3853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $106=(($105+4)|0); //@line 3853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $107=$106; //@line 3853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $108=$old_end; //@line 3853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $109=(($107)>>>0) < (($108)>>>0); //@line 3853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($109) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 3853 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $111=$nextp; //@line 3854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $p=$111; //@line 3854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 3854 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 11: 
      __label__ = 13; break; //@line 3856 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 12: 
      __label__ = 9; break; //@line 3857 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $115=$csp; //@line 3861 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $116=$old_top; //@line 3861 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $117=(($115)|0)!=(($116)|0); //@line 3861 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($117) { __label__ = 14; break; } else { __label__ = 50; break; } //@line 3861 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $119=$old_top; //@line 3862 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 3862 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $q=$120; //@line 3862 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $121=$csp; //@line 3863 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $122=$old_top; //@line 3863 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $123=$121; //@line 3863 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $124=$122; //@line 3863 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $125=((($123)-($124))|0); //@line 3863 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $psize=$125; //@line 3863 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $126=$q; //@line 3864 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $127=$126; //@line 3864 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $128=$psize; //@line 3864 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $129=(($127+$128)|0); //@line 3864 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $130=$129; //@line 3864 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $tn=$130; //@line 3864 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $131=$tn; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $132=(($131+4)|0); //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($132)>>2)]; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $134=$133 & -2; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($132)>>2)]=$134; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $135=$psize; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $136=$135 | 1; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $137=$q; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $138=(($137+4)|0); //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($138)>>2)]=$136; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $139=$psize; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $140=$q; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $141=$140; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $142=$psize; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $143=(($141+$142)|0); //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $144=$143; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $145=(($144)|0); //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($145)>>2)]=$139; //@line 3865 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $146=$psize; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $147=$146 >>> 3; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $148=(($147)>>>0) < 32; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($148) { __label__ = 15; break; } else { __label__ = 22; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $150=$psize; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $151=$150 >>> 3; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I=$151; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $152=$I; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $153=$152 << 1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $154=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $155=(($154+40)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $156=(($155+($153<<2))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $B=$158; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $159=$B; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$159; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $160=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $161=(($160)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $162=HEAP32[(($161)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $163=$I; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $164=1 << $163; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $165=$162 & $164; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $166=(($165)|0)!=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($166) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $168=$I; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $169=1 << $168; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $170=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $171=(($170)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[(($171)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $173=$172 | $169; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($171)>>2)]=$173; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $175=$B; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $176=(($175+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($176)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $178=$177; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $179=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $180=(($179+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $181=HEAPU32[(($180)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $182=(($178)>>>0) >= (($181)>>>0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $183=(($182)&1); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $184=(($183)==(1)); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $185=(($184)|0)!=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($185) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $187=$B; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $188=(($187+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $189=HEAP32[(($188)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F=$189; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 19: 
      _abort(); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 20: 
      __label__ = 21; break;
    case 21: 
      var $193=$q; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $194=$B; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $195=(($194+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($195)>>2)]=$193; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $196=$q; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $197=$F; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $198=(($197+12)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($198)>>2)]=$196; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $199=$F; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $200=$q; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $201=(($200+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($201)>>2)]=$199; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $202=$B; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $203=$q; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $204=(($203+12)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($204)>>2)]=$202; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $206=$q; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $207=$206; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $TP=$207; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $208=$psize; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $209=$208 >>> 8; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $X=$209; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $210=$X; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $211=(($210)|0)==0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($211) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 23: 
      $I1=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $214=$X; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $215=(($214)>>>0) > 65535; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($215) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 25: 
      $I1=31; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $218=$X; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$218; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $219=$Y; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $220=((($219)-(256))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $221=$220 >>> 16; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $222=$221 & 8; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$222; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $223=$N; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $224=$Y; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $225=$224 << $223; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$225; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $226=((($225)-(4096))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $227=$226 >>> 16; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $228=$227 & 4; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$228; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $229=$K; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $230=$N; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $231=((($230)+($229))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$231; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $232=$K; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $233=$Y; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $234=$233 << $232; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$234; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $235=((($234)-(16384))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $236=$235 >>> 16; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $237=$236 & 2; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$237; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $238=$N; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $239=((($238)+($237))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $N=$239; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $240=$N; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $241=(((14)-($240))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $242=$K; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $243=$Y; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $244=$243 << $242; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $Y=$244; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $245=$244 >>> 15; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $246=((($241)+($245))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K=$246; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $247=$K; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $248=$247 << 1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $249=$psize; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $250=$K; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $251=((($250)+(7))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $252=$249 >>> (($251)>>>0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $253=$252 & 1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $254=((($248)+($253))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $I1=$254; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break;
    case 27: 
      __label__ = 28; break;
    case 28: 
      var $257=$I1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $258=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $259=(($258+304)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $260=(($259+($257<<2))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $H=$260; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $261=$I1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $262=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $263=(($262+28)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($263)>>2)]=$261; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $264=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $265=(($264+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $266=(($265+4)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($266)>>2)]=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $267=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $268=(($267+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $269=(($268)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($269)>>2)]=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $270=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $271=(($270+4)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $272=HEAP32[(($271)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $273=$I1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $274=1 << $273; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $275=$272 & $274; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $276=(($275)|0)!=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($276) { __label__ = 30; break; } else { __label__ = 29; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $278=$I1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $279=1 << $278; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $280=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $281=(($280+4)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $282=HEAP32[(($281)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $283=$282 | $279; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($281)>>2)]=$283; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $284=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $285=$H; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($285)>>2)]=$284; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $286=$H; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $287=$286; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $288=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $289=(($288+24)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($289)>>2)]=$287; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $290=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $291=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $292=(($291+12)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($292)>>2)]=$290; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $293=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $294=(($293+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($294)>>2)]=$290; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $296=$H; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $297=HEAP32[(($296)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$297; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $298=$psize; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $299=$I1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $300=(($299)|0)==31; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($300) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $309 = 0;__label__ = 33; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $303=$I1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $304=$303 >>> 1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $305=((($304)+(8))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $306=((($305)-(2))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $307=(((31)-($306))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $309 = $307;__label__ = 33; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $309; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $310=$298 << $309; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$310; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $312=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $313=(($312+4)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $314=HEAP32[(($313)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $315=$314 & -8; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $316=$psize; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $317=(($315)|0)!=(($316)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($317) { __label__ = 35; break; } else { __label__ = 41; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $319=$K2; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $320=$319 >>> 31; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $321=$320 & 1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $322=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $323=(($322+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $324=(($323+($321<<2))|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $C=$324; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $325=$K2; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $326=$325 << 1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $K2=$326; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $327=$C; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $328=HEAP32[(($327)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $329=(($328)|0)!=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($329) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $331=$C; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $332=HEAP32[(($331)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $T=$332; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 40; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $334=$C; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $335=$334; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $336=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $337=(($336+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $338=HEAPU32[(($337)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $339=(($335)>>>0) >= (($338)>>>0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $340=(($339)&1); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $341=(($340)==(1)); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $342=(($341)|0)!=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($342) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $344=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $345=$C; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($345)>>2)]=$344; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $346=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $347=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $348=(($347+24)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($348)>>2)]=$346; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $349=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $350=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+12)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($351)>>2)]=$349; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $352=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $353=(($352+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($353)>>2)]=$349; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 39: 
      _abort(); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 40: 
      __label__ = 46; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $357=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $358=(($357+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $359=HEAP32[(($358)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      $F3=$359; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $360=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $361=$360; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $362=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $363=(($362+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $364=HEAPU32[(($363)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $365=(($361)>>>0) >= (($364)>>>0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      if ($365) { __label__ = 42; break; } else { var $374 = 0;__label__ = 43; break; } //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $367=$F3; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $368=$367; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $369=$1; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $370=(($369+16)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $371=HEAPU32[(($370)>>2)]; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $372=(($368)>>>0) >= (($371)>>>0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $374 = $372;__label__ = 43; break;
    case 43: 
      var $374;
      var $375=(($374)&1);
      var $376=(($375)==(1));
      var $377=(($376)|0)!=0;
      if ($377) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: 
      var $379=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $380=$F3; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $381=(($380+12)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($381)>>2)]=$379; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $382=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $383=(($382+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($383)>>2)]=$379; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $384=$F3; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $385=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $386=(($385+8)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($386)>>2)]=$384; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $387=$T; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $388=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $389=(($388+12)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($389)>>2)]=$387; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $390=$TP; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      var $391=(($390+24)|0); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($391)>>2)]=0; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 45: 
      _abort(); //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 46: 
      __label__ = 34; break; //@line 3866 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 47: 
      __label__ = 48; break;
    case 48: 
      __label__ = 49; break;
    case 49: 
      __label__ = 50; break; //@line 3867 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    case 50: 
      ;
      return; //@line 3870 "/Users/aroben/dev/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_add_segment["X"]=1;

function __Znwj($size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $p;
      var $nh;
      var $2;
      var $3;
      $1=$size;
      var $4=$1; //@line 35 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $5=(($4)|0)==0; //@line 35 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 35 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 3: 
      $1=1; //@line 36 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 4; break; //@line 36 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 4: 
      __label__ = 5; break; //@line 38 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 5: 
      var $9=$1; //@line 38 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $10=_malloc($9); //@line 38 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $p=$10; //@line 38 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $11=(($10)|0)==0; //@line 38 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      if ($11) { __label__ = 6; break; } else { __label__ = 14; break; } //@line 38 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 6: 
      var $13=__ZSt15get_new_handlerv(); //@line 42 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $nh=$13; //@line 42 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $14=$nh; //@line 43 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $15=(($14)|0)!=0; //@line 43 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      if ($15) { __label__ = 7; break; } else { __label__ = 12; break; } //@line 43 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 7: 
      var $17=$nh; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[$17]() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      __label__ = 13; break; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 9: 
      var $20=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $21=$20.f0; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $2=$21; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $22=$20.f1; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $3=$22; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 10; break; //@line 44 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 10: 
      var $24=$3; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $25=(($24)|0) < 0; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      if ($25) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 11: 
      var $27=$2; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($27); //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 12: 
      var $29=___cxa_allocate_exception(4); //@line 47 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $30=$29; //@line 47 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __ZNSt9bad_allocC1Ev($30); //@line 47 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return ___cxa_throw($29, __ZTISt9bad_alloc, 2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 16; break; } else { __label__ = 9; break; }
    case 13: 
      __label__ = 5; break; //@line 51 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 14: 
      var $33=$p; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ;
      return $33; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 15: 
      var $35=$2; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $36=$3; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $37=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $35, tempValue); //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $38=($37.f1 = $36, $37); //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)]; //@line 52 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 16: 
      throw "Reached an unreachable!"
    default: assert(0, "bad label: " + __label__);
  }
}
__Znwj["X"]=1;

function __ZnwjRKSt9nothrow_t($size, $0) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $2;
      var $3;
      var $p;
      var $4;
      var $5;
      $2=$size;
      $3=$0;
      $p=0; //@line 59 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $6=$2; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $7 = (function() { try { __THREW__ = false; return __Znwj($6) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      $p=$7; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 7; break; //@line 66 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 4: 
      var $10=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[0]);
      var $11=$10.f0; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $4=$11; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $12=$10.f1; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $5=$12; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 5; break; //@line 64 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 5: 
      var $14=$4; //@line 66 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $15=___cxa_begin_catch($14); //@line 66 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: 
      __label__ = 7; break; //@line 69 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 7: 
      var $18=$p; //@line 71 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ;
      return $18; //@line 71 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 8: 
      var $20=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $21=$20.f0; //@line 69 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $4=$21; //@line 69 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $22=$20.f1; //@line 69 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $5=$22; //@line 69 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 9; break; //@line 69 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 9: 
      var $24=$4; //@line 71 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($24); //@line 71 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 71 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __Znaj($size) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$size;
      var $4=$1; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $5 = (function() { try { __THREW__ = false; return __Znwj($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      ;
      return $5; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 4: 
      var $8=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $9=$8.f0; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $2=$9; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $10=$8.f1; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $3=$10; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 5; break; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 5: 
      var $12=$3; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $13=(($12)|0) < 0; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      if ($13) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 6: 
      var $15=$2; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($15); //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 7: 
      var $17=$2; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $18=$3; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $19=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $17, tempValue); //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $20=($19.f1 = $18, $19); //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)]; //@line 81 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZnajRKSt9nothrow_t($size, $nothrow) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $p;
      var $3;
      var $4;
      $1=$size;
      $2=$nothrow;
      $p=0; //@line 88 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $5=$1; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $6 = (function() { try { __THREW__ = false; return __Znaj($5) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      $p=$6; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 7; break; //@line 95 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 4: 
      var $9=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[0]);
      var $10=$9.f0; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $3=$10; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $11=$9.f1; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $4=$11; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 5; break; //@line 93 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 5: 
      var $13=$3; //@line 95 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $14=___cxa_begin_catch($13); //@line 95 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: 
      __label__ = 7; break; //@line 98 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 7: 
      var $17=$p; //@line 100 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ;
      return $17; //@line 100 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 8: 
      var $19=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $20=$19.f0; //@line 98 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $3=$20; //@line 98 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      var $21=$19.f1; //@line 98 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      $4=$21; //@line 98 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 9; break; //@line 98 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    case 9: 
      var $23=$3; //@line 100 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($23); //@line 100 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 100 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNKSt20bad_array_new_length4whatEv($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  ;
  return ((STRING_TABLE.__str1467)|0); //@line 174 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt20bad_array_new_lengthC1Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZNSt20bad_array_new_lengthC2Ev($2); //@line 165 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 165 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
}


function __ZNSt20bad_array_new_lengthC2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=$2; //@line 164 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  __ZNSt9bad_allocC2Ev($3); //@line 164 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  var $4=$2; //@line 164 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  HEAP32[(($4)>>2)]=((__ZTVSt20bad_array_new_length+8)|0); //@line 164 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 165 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt20bad_array_new_lengthD0Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZNSt20bad_array_new_lengthD1Ev($2); //@line 168 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  var $3=$2; //@line 168 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  __ZdlPv($3); //@line 168 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 169 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
}


function __ZNSt20bad_array_new_lengthD1Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZNSt20bad_array_new_lengthD2Ev($2); //@line 168 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
  ;
  return; //@line 169 "/Users/aroben/dev/emscripten/system/include/libcxx/new"
}


function __ZNSt20bad_array_new_lengthD2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=$2; //@line 169 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  __ZNSt9bad_allocD2Ev($3); //@line 169 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 169 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}


function __ZSt17__throw_bad_allocv() {
  ;
  var __label__;

  var $1=___cxa_allocate_exception(4); //@line 181 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  var $2=$1; //@line 181 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  __ZNSt9bad_allocC1Ev($2); //@line 181 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ___cxa_throw($1, __ZTISt9bad_alloc, 2); //@line 181 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  throw "Reached an unreachable!" //@line 181 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 183 "/Users/aroben/dev/emscripten/system/lib/libcxx/new.cpp"
}

// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;
var _llvm_dbg_declare; // stub for _llvm_dbg_declare

  
  function _tolower(chr) {
      if (chr >= 'A'.charCodeAt(0) && chr <= 'Z'.charCodeAt(0)) {
        return chr - 'A'.charCodeAt(0) + 'a'.charCodeAt(0);
      } else {
        return chr;
      }
    }function _strncasecmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = _tolower(HEAPU8[((px)+(i))]);
        var y = _tolower(HEAPU8[((py)+(i))]);
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }

  function ___assert_func(filename, line, func, condition) {
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [Pointer_stringify(filename), line, Pointer_stringify(func)];
    }

  
  function _memcpy(dest, src, num, align) {
      assert(num % 1 === 0, 'memcpy given ' + num + ' bytes to copy. Problem with quantum=1 corrections perhaps?');
      if (num >= 20 && src % 2 == dest % 2) {
        // This is unaligned, but quite large, and potentially alignable, so work hard to get to aligned settings
        if (src % 4 == dest % 4) {
          var stop = src + num;
          while (src % 4) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src4 = src >> 2, dest4 = dest >> 2, stop4 = stop >> 2;
          while (src4 < stop4) {
            HEAP32[dest4++] = HEAP32[src4++];
          }
          src = src4 << 2;
          dest = dest4 << 2;
          while (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        } else {
          var stop = src + num;
          if (src % 2) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src2 = src >> 1, dest2 = dest >> 1, stop2 = stop >> 1;
          while (src2 < stop2) {
            HEAP16[dest2++] = HEAP16[src2++];
          }
          src = src2 << 1;
          dest = dest2 << 1;
          if (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        }
      } else {
        while (num--) {
          HEAP8[dest++] = HEAP8[src++];
        }
      }
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  
  function _memset(ptr, value, num, align) {
      // TODO: make these settings, and in memcpy, {{'s
      if (num >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        var stop = ptr + num;
        while (ptr % 4) { // no need to check for stop, since we have large num
          HEAP8[ptr++] = value;
        }
        if (value < 0) value += 256; // make it unsigned
        var ptr4 = ptr >> 2, stop4 = stop >> 2, value4 = value | (value << 8) | (value << 16) | (value << 24);
        while (ptr4 < stop4) {
          HEAP32[ptr4++] = value4;
        }
        ptr = ptr4 << 2;
        while (ptr < stop) {
          HEAP8[ptr++] = value;
        }
      } else {
        while (num--) {
          HEAP8[ptr++] = value;
        }
      }
    }var _llvm_memset_p0i8_i32=_memset;

  function _memcmp(p1, p2, num) {
      for (var i = 0; i < num; i++) {
        var v1 = HEAPU8[((p1)+(i))];
        var v2 = HEAPU8[((p2)+(i))];
        if (v1 != v2) return v1 > v2 ? 1 : -1;
      }
      return 0;
    }

  function _isalnum(chr) {
      return (chr >= '0'.charCodeAt(0) && chr <= '9'.charCodeAt(0)) ||
             (chr >= 'a'.charCodeAt(0) && chr <= 'z'.charCodeAt(0)) ||
             (chr >= 'A'.charCodeAt(0) && chr <= 'Z'.charCodeAt(0));
    }

  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }


  
  function _memmove(dest, src, num, align) {
      if (src < dest && dest < src + num) {
        // Copy backwards in a safe manner
        src += num;
        dest += num;
        while (num--) {
          dest--;
          src--;
          HEAP8[(dest)]=HEAP8[(src)];
        }
      } else {
        _memcpy(dest, src, num, align);
      }
    }var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[((px)+(i))];
        var y = HEAPU8[((py)+(i))];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }

  function _strlen(ptr) {
      return String_len(ptr);
    }
var _llvm_va_start; // stub for _llvm_va_start

  
  
  function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (tempDoubleI32[0]=HEAP32[(((varargs)+(argIndex))>>2)],tempDoubleI32[1]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],tempDoubleF64[0]);
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[(textIndex+1)];
        if (curr == '%'.charCodeAt(0)) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case '+'.charCodeAt(0):
                flagAlwaysSigned = true;
                break;
              case '-'.charCodeAt(0):
                flagLeftAlign = true;
                break;
              case '#'.charCodeAt(0):
                flagAlternative = true;
                break;
              case '0'.charCodeAt(0):
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[(textIndex+1)];
          }
  
          // Handle width.
          var width = 0;
          if (next == '*'.charCodeAt(0)) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[(textIndex+1)];
          } else {
            while (next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0)) {
              width = width * 10 + (next - '0'.charCodeAt(0));
              textIndex++;
              next = HEAP8[(textIndex+1)];
            }
          }
  
          // Handle precision.
          var precisionSet = false;
          if (next == '.'.charCodeAt(0)) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[(textIndex+1)];
            if (next == '*'.charCodeAt(0)) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[(textIndex+1)];
                if (precisionChr < '0'.charCodeAt(0) ||
                    precisionChr > '9'.charCodeAt(0)) break;
                precision = precision * 10 + (precisionChr - '0'.charCodeAt(0));
                textIndex++;
              }
            }
            next = HEAP8[(textIndex+1)];
          } else {
            var precision = 6; // Standard default.
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[(textIndex+2)];
              if (nextNext == 'h'.charCodeAt(0)) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[(textIndex+2)];
              if (nextNext == 'l'.charCodeAt(0)) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[(textIndex+1)];
  
          // Handle type specifier.
          if (['d', 'i', 'u', 'o', 'x', 'X', 'p'].indexOf(String.fromCharCode(next)) != -1) {
            // Integer.
            var signed = next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0);
            argSize = argSize || 4;
            var currArg = getNextArg('i' + (argSize * 8));
            var origArg = currArg;
            var argText;
            // Flatten i64-1 [low, high] into a (slightly rounded) double
            if (argSize == 8) {
              currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 'u'.charCodeAt(0));
            }
            // Truncate to requested size.
            if (argSize <= 4) {
              var limit = Math.pow(256, argSize) - 1;
              currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
            }
            // Format the number.
            var currAbsArg = Math.abs(currArg);
            var prefix = '';
            if (next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0)) {
              if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1]); else
              argText = reSign(currArg, 8 * argSize, 1).toString(10);
            } else if (next == 'u'.charCodeAt(0)) {
              if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
              argText = unSign(currArg, 8 * argSize, 1).toString(10);
              currArg = Math.abs(currArg);
            } else if (next == 'o'.charCodeAt(0)) {
              argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
            } else if (next == 'x'.charCodeAt(0) || next == 'X'.charCodeAt(0)) {
              prefix = flagAlternative ? '0x' : '';
              if (currArg < 0) {
                // Represent negative numbers in hex as 2's complement.
                currArg = -currArg;
                argText = (currAbsArg - 1).toString(16);
                var buffer = [];
                for (var i = 0; i < argText.length; i++) {
                  buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                }
                argText = buffer.join('');
                while (argText.length < argSize * 2) argText = 'f' + argText;
              } else {
                argText = currAbsArg.toString(16);
              }
              if (next == 'X'.charCodeAt(0)) {
                prefix = prefix.toUpperCase();
                argText = argText.toUpperCase();
              }
            } else if (next == 'p'.charCodeAt(0)) {
              if (currAbsArg === 0) {
                argText = '(nil)';
              } else {
                prefix = '0x';
                argText = currAbsArg.toString(16);
              }
            }
            if (precisionSet) {
              while (argText.length < precision) {
                argText = '0' + argText;
              }
            }
  
            // Add sign if needed
            if (flagAlwaysSigned) {
              if (currArg < 0) {
                prefix = '-' + prefix;
              } else {
                prefix = '+' + prefix;
              }
            }
  
            // Add padding.
            while (prefix.length + argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad) {
                  argText = '0' + argText;
                } else {
                  prefix = ' ' + prefix;
                }
              }
            }
  
            // Insert the result into the buffer.
            argText = prefix + argText;
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (['f', 'F', 'e', 'E', 'g', 'G'].indexOf(String.fromCharCode(next)) != -1) {
            // Float.
            var currArg = getNextArg('double');
            var argText;
  
            if (isNaN(currArg)) {
              argText = 'nan';
              flagZeroPad = false;
            } else if (!isFinite(currArg)) {
              argText = (currArg < 0 ? '-' : '') + 'inf';
              flagZeroPad = false;
            } else {
              var isGeneral = false;
              var effectivePrecision = Math.min(precision, 20);
  
              // Convert g/G to f/F or e/E, as per:
              // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
              if (next == 'g'.charCodeAt(0) || next == 'G'.charCodeAt(0)) {
                isGeneral = true;
                precision = precision || 1;
                var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                if (precision > exponent && exponent >= -4) {
                  next = ((next == 'g'.charCodeAt(0)) ? 'f' : 'F').charCodeAt(0);
                  precision -= exponent + 1;
                } else {
                  next = ((next == 'g'.charCodeAt(0)) ? 'e' : 'E').charCodeAt(0);
                  precision--;
                }
                effectivePrecision = Math.min(precision, 20);
              }
  
              if (next == 'e'.charCodeAt(0) || next == 'E'.charCodeAt(0)) {
                argText = currArg.toExponential(effectivePrecision);
                // Make sure the exponent has at least 2 digits.
                if (/[eE][-+]\d$/.test(argText)) {
                  argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                }
              } else if (next == 'f'.charCodeAt(0) || next == 'F'.charCodeAt(0)) {
                argText = currArg.toFixed(effectivePrecision);
              }
  
              var parts = argText.split('e');
              if (isGeneral && !flagAlternative) {
                // Discard trailing zeros and periods.
                while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                       (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                  parts[0] = parts[0].slice(0, -1);
                }
              } else {
                // Make sure we have a period in alternative mode.
                if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                // Zero pad until required precision.
                while (precision > effectivePrecision++) parts[0] += '0';
              }
              argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
              // Capitalize 'E' if needed.
              if (next == 'E'.charCodeAt(0)) argText = argText.toUpperCase();
  
              // Add sign.
              if (flagAlwaysSigned && currArg >= 0) {
                argText = '+' + argText;
              }
            }
  
            // Add padding.
            while (argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                  argText = argText[0] + '0' + argText.slice(1);
                } else {
                  argText = (flagZeroPad ? '0' : ' ') + argText;
                }
              }
            }
  
            // Adjust case.
            if (next < 'a'.charCodeAt(0)) argText = argText.toUpperCase();
  
            // Insert the result into the buffer.
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (next == 's'.charCodeAt(0)) {
            // String.
            var arg = getNextArg('i8*') || nullString;
            var argLength = String_len(arg);
            if (precisionSet) argLength = Math.min(argLength, precision);
            if (!flagLeftAlign) {
              while (argLength < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
            for (var i = 0; i < argLength; i++) {
              ret.push(HEAPU8[(arg++)]);
            }
            if (flagLeftAlign) {
              while (argLength < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
          } else if (next == 'c'.charCodeAt(0)) {
            // Character.
            if (flagLeftAlign) ret.push(getNextArg('i8'));
            while (--width > 0) {
              ret.push(' '.charCodeAt(0));
            }
            if (!flagLeftAlign) ret.push(getNextArg('i8'));
          } else if (next == 'n'.charCodeAt(0)) {
            // Write the length written so far to the next parameter.
            var ptr = getNextArg('i32*');
            HEAP32[((ptr)>>2)]=ret.length
          } else if (next == '%'.charCodeAt(0)) {
            // Literal percent sign.
            ret.push(curr);
          } else {
            // Unknown specifiers remain untouched.
            for (var i = startTextIndex; i < textIndex + 2; i++) {
              ret.push(HEAP8[(i)]);
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, n - 1);
      for (var i = 0; i < limit; i++) {
        HEAP8[((s)+(i))]=result[i];
      }
      HEAP8[((s)+(i))]=0;
      return result.length;
    }var _vsnprintf=_snprintf;

  function _llvm_va_end() {}

  function _ispunct(chr) {
      return (chr >= '!'.charCodeAt(0) && chr <= '/'.charCodeAt(0)) ||
             (chr >= ':'.charCodeAt(0) && chr <= '@'.charCodeAt(0)) ||
             (chr >= '['.charCodeAt(0) && chr <= '`'.charCodeAt(0)) ||
             (chr >= '{'.charCodeAt(0) && chr <= '~'.charCodeAt(0));
    }

  function _isspace(chr) {
      return chr in { 32: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0 };
    }

  function _isalpha(chr) {
      return (chr >= 'a'.charCodeAt(0) && chr <= 'z'.charCodeAt(0)) ||
             (chr >= 'A'.charCodeAt(0) && chr <= 'Z'.charCodeAt(0));
    }

var _llvm_expect_i32; // stub for _llvm_expect_i32

  function _abort() {
      ABORT = true;
      throw 'abort() at ' + (new Error().stack);
    }

  
  
  
  var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
  
  function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      if (!___setErrNo.ret) ___setErrNo.ret = allocate([0], 'i32', ALLOC_STATIC);
      HEAP32[((___setErrNo.ret)>>2)]=value
      return value;
    }
  
  var _stdin=0;
  
  var _stdout=0;
  
  var _stderr=0;
  
  var __impure_ptr=0;var FS={currentPath:"/",nextInode:2,streams:[null],checkStreams:function () {
        for (var i in FS.streams) assert(i >= 0 && i < FS.streams.length); // no keys not in dense span
        for (var i = 0; i < FS.streams.length; i++) assert(typeof FS.streams[i] == 'object'); // no non-null holes in dense span
      },ignorePermissions:true,joinPath:function (parts, forceRelative) {
        var ret = parts[0];
        for (var i = 1; i < parts.length; i++) {
          if (ret[ret.length-1] != '/') ret += '/';
          ret += parts[i];
        }
        if (forceRelative && ret[0] == '/') ret = ret.substr(1);
        return ret;
      },absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              ret = FS.analyzePath([link].concat(path).join('/'),
                                   dontResolveLastLink, linksVisited + 1);
              return ret;
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
  
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
  
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
  
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = new Array(data.length);
          for (var i = 0, len = data.length; i < len; ++i) dataArray[i] = data.charCodeAt(i);
          data = dataArray;
        }
        var properties = {
          isDevice: false,
          contents: data.subarray ? data.subarray(0) : data // as an optimization, create a new array wrapper (not buffer) here, to help JS engines understand this object
        };
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        var properties = {isDevice: false, url: url};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile) {
        Browser.ensureObjects();
        var fullname = FS.joinPath([parent, name], true);
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          // Browser.
          throw 'Cannot do synchronous binary XHRs in modern browsers. Use --embed-file or --preload-file in emcc';
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureRoot();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input = input || Module['stdin'];
        output = output || Module['stdout'];
        error = error || Module['stderr'];
  
        // Default handlers.
        var stdinOverridden = true, stdoutOverridden = true, stderrOverridden = true;
        if (!input) {
          stdinOverridden = false;
          input = function() {
            if (!input.cache || !input.cache.length) {
              var result;
              if (typeof window != 'undefined' &&
                  typeof window.prompt == 'function') {
                // Browser.
                result = window.prompt('Input: ');
                if (result === null) result = String.fromCharCode(0); // cancel ==> EOF
              } else if (typeof readline == 'function') {
                // Command line.
                result = readline();
              }
              if (!result) result = '';
              input.cache = intArrayFromString(result + '\n', true);
            }
            return input.cache.shift();
          };
        }
        var utf8 = new Runtime.UTF8Processor();
        function simpleOutput(val) {
          if (val === null || val === '\n'.charCodeAt(0)) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(utf8.processCChar(val));
          }
        }
        if (!output) {
          stdoutOverridden = false;
          output = simpleOutput;
        }
        if (!output.printer) output.printer = Module['print'];
        if (!output.buffer) output.buffer = [];
        if (!error) {
          stderrOverridden = false;
          error = simpleOutput;
        }
        if (!error.printer) error.printer = Module['print'];
        if (!error.buffer) error.buffer = [];
  
        // Create the temporary folder, if not already created
        try {
          FS.createFolder('/', 'tmp', true, true);
        } catch(e) {}
  
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
  
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          isTerminal: !stdinOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stdoutOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stderrOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        // Allocate these on the stack (and never free, we are called from ATINIT or earlier), to keep their locations low
        _stdin = allocate([1], 'void*', ALLOC_STACK);
        _stdout = allocate([2], 'void*', ALLOC_STACK);
        _stderr = allocate([3], 'void*', ALLOC_STACK);
  
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
  
        // Newlib initialization
        for (var i = FS.streams.length; i < Math.max(_stdin, _stdout, _stderr) + 4; i++) {
          FS.streams[i] = null; // Make sure to keep FS.streams dense
        }
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        FS.checkStreams();
        assert(FS.streams.length < 1024); // at this early stage, we should not have a large set of file descriptors - just a few
        __impure_ptr = allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_STATIC) ], 'void*', ALLOC_STATIC);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr. Careful, they may have been closed
        if (FS.streams[2] && FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output('\n'.charCodeAt(0));
        if (FS.streams[3] && FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output('\n'.charCodeAt(0));
      },standardizePath:function (path) {
        if (path.substr(0, 2) == './') path = path.substr(2);
        return path;
      },deleteFile:function (path) {
        var path = FS.analyzePath(path);
        if (!path.parentExists || !path.exists) {
          throw 'Invalid path ' + path;
        }
        delete path.parentObject.contents[path.name];
      }};
  
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[((buf)+(i))];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[((buf)+(i))]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }

  
  function ___errno_location() {
      return ___setErrNo.ret;
    }var ___errno=___errno_location;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
  
      // We need to make sure no one else allocates unfreeable memory!
      // We must control this entirely. So we don't even need to do
      // unfreeable allocations - the HEAP is ours, from STATICTOP up.
      // TODO: We could in theory slice off the top of the HEAP when
      //       sbrk gets a negative increment in |bytes|...
      var self = _sbrk;
      if (!self.called) {
        STATICTOP = alignMemoryPage(STATICTOP); // make sure we start out aligned
        self.called = true;
        _sbrk.DYNAMIC_START = STATICTOP;
      }
      var ret = STATICTOP;
      if (bytes != 0) Runtime.staticAlloc(bytes);
      return ret;  // Previous break location.
    }

  function ___gxx_personality_v0() {
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }function ___cxa_find_matching_catch(thrown, throwntype, typeArray) {
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return { f0:thrown, f1:typeArray[i] };
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return { f0:thrown, f1 :throwntype };
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      Module.printErr('Compiled code throwing an exception, ' + [ptr,type,destructor] + ', at ' + new Error().stack);
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  function ___cxa_call_unexpected(exception) {
      ABORT = true;
      throw exception;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }

  
  function ___cxa_free_exception(ptr) {
      return _free(ptr);
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      __THREW__ = false;
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        FUNCTION_TABLE[destructor](ptr);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
var __ZNSt9exceptionD2Ev; // stub for __ZNSt9exceptionD2Ev





  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},pointerLock:false,moduleContextCreatedCallbacks:[],ensureObjects:function () {
        if (Browser.ensured) return;
        Browser.ensured = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : console.log("warning: cannot create object URLs");
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        function getMimetype(name) {
          return {
            'jpg': 'image/jpeg',
            'png': 'image/png',
            'bmp': 'image/bmp',
            'ogg': 'audio/ogg',
            'wav': 'audio/wav',
            'mp3': 'audio/mpeg'
          }[name.substr(-3)];
          return ret;
        }
  
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = [];
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return name.substr(-4) in { '.jpg': 1, '.png': 1, '.bmp': 1 };
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            setTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
      },createContext:function (canvas, useWebGL, setInModule) {
        try {
          var ctx = canvas.getContext(useWebGL ? 'experimental-webgl' : '2d');
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
        }
        return ctx;
      },requestFullScreen:function () {
        var canvas = Module['canvas'];
        function fullScreenChange() {
          var isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                        canvas['mozRequestPointerLock'] ||
                                        canvas['webkitRequestPointerLock'];
            canvas.requestPointerLock();
            isFullScreen = true;
          }
          if (Module['onFullScreen']) Module['onFullScreen'](isFullScreen);
        }
  
        document.addEventListener('fullscreenchange', fullScreenChange, false);
        document.addEventListener('mozfullscreenchange', fullScreenChange, false);
        document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen(); 
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200) {
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        addRunDependency('al ' + url);
      },setCanvasSize:function (width, height) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
      }};
__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___setErrNo(0);
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
Module["requestFullScreen"] = function() { Browser.requestFullScreen() };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  

// === Auto-generated postamble setup entry stuff ===

Module.callMain = function callMain(args) {
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_STATIC) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_STATIC));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_STATIC);

  return _main(argc, argv, 0);
}


var _find_block_tag_wordlist;
var __str;































var _markdown_char_ptrs;

var _char_escape_escape_chars;

var _rndr_newbuf_buf_size;










var _sd_autolink_issafe_valid_uris;








var _sdhtml_toc_renderer_cb_default;
var _sdhtml_renderer_cb_default;
































































var _smartypants_cb_ptrs;

var _smartypants_cb__ltag_skip_tags;





















var _HTML_ESCAPES;
var __str112;










var __gm_;
var _mparams;
var _stderr;



var __ZSt7nothrow;
var __ZL13__new_handler;
var __ZTVSt9bad_alloc;

var __ZTVSt20bad_array_new_length;

var __ZTVN10__cxxabiv120__si_class_type_infoE;

var __ZTISt9exception;
var __ZTISt9bad_alloc;

var __ZTISt20bad_array_new_length;
var __ZTVSt9exception;
_find_block_tag_wordlist=allocate(152, "i8", ALLOC_STATIC);
__str=allocate(1, "i8", ALLOC_STATIC);
STRING_TABLE.__str1=allocate([112,0] /* p\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2=allocate([100,108,0] /* dl\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3=allocate([100,105,118,0] /* div\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4=allocate([109,97,116,104,0] /* math\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5=allocate([116,97,98,108,101,0] /* table\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6=allocate([117,108,0] /* ul\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str7=allocate([100,101,108,0] /* del\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str8=allocate([102,111,114,109,0] /* form\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str9=allocate([98,108,111,99,107,113,117,111,116,101,0] /* blockquote\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str10=allocate([102,105,103,117,114,101,0] /* figure\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str11=allocate([111,108,0] /* ol\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str12=allocate([102,105,101,108,100,115,101,116,0] /* fieldset\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str13=allocate([104,49,0] /* h1\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str14=allocate([104,54,0] /* h6\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str15=allocate([112,114,101,0] /* pre\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str16=allocate([115,99,114,105,112,116,0] /* script\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str17=allocate([104,53,0] /* h5\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str18=allocate([110,111,115,99,114,105,112,116,0] /* noscript\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str19=allocate([115,116,121,108,101,0] /* style\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str20=allocate([105,102,114,97,109,101,0] /* iframe\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str21=allocate([104,52,0] /* h4\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str22=allocate([105,110,115,0] /* ins\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str23=allocate([104,51,0] /* h3\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str24=allocate([104,50,0] /* h2\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str25=allocate([115,114,99,47,109,97,114,107,100,111,119,110,46,99,0] /* src/markdown.c\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___sd_markdown_new=allocate([115,100,95,109,97,114,107,100,111,119,110,95,110,101,119,0] /* sd_markdown_new\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str26=allocate([109,97,120,95,110,101,115,116,105,110,103,32,62,32,48,32,38,38,32,99,97,108,108,98,97,99,107,115,0] /* max_nesting _ 0 && c */, "i8", ALLOC_STATIC);
STRING_TABLE._sd_markdown_render_UTF8_BOM=allocate([239,187,191] /* \EF\BB\BF */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___sd_markdown_render=allocate([115,100,95,109,97,114,107,100,111,119,110,95,114,101,110,100,101,114,0] /* sd_markdown_render\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str27=allocate([109,100,45,62,119,111,114,107,95,98,117,102,115,91,66,85,70,70,69,82,95,83,80,65,78,93,46,115,105,122,101,32,61,61,32,48,0] /* md-_work_bufs[BUFFER */, "i8", ALLOC_STATIC);
STRING_TABLE.__str28=allocate([109,100,45,62,119,111,114,107,95,98,117,102,115,91,66,85,70,70,69,82,95,66,76,79,67,75,93,46,115,105,122,101,32,61,61,32,48,0] /* md-_work_bufs[BUFFER */, "i8", ALLOC_STATIC);
_markdown_char_ptrs=allocate([0, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 18, 0, 0, 0, 20, 0, 0, 0, 22, 0, 0, 0, 24, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str29=allocate([104,116,116,112,58,47,47,0] /* http://\00 */, "i8", ALLOC_STATIC);
_char_escape_escape_chars=allocate(4, "i8", ALLOC_STATIC);
STRING_TABLE.__str30=allocate([92,96,42,95,123,125,91,93,40,41,35,43,45,46,33,58,124,38,60,62,94,126,0] /* \5C`__{}[]()#+-.!:|& */, "i8", ALLOC_STATIC);
_rndr_newbuf_buf_size=allocate([256, 0, 0, 0, 64, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE._hash_block_tag_asso_values=allocate([38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,8,30,25,20,15,10,38,38,38,38,38,38,38,38,38,38,0,38,0,38,5,5,5,15,0,38,38,0,15,10,0,38,38,15,0,5,38,38,38,38,38,38,38,38,38,38,38,38,0,38,0,38,5,5,5,15,0,38,38,0,15,10,0,38,38,15,0,5,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38] /* &&&&&&&&&&&&&&&&&&&& */, "i8", ALLOC_STATIC);
STRING_TABLE.__str31=allocate([115,114,99,47,98,117,102,102,101,114,46,99,0] /* src/buffer.c\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufprefix=allocate([98,117,102,112,114,101,102,105,120,0] /* bufprefix\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str132=allocate([98,117,102,32,38,38,32,98,117,102,45,62,117,110,105,116,0] /* buf && buf-_unit\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufgrow=allocate([98,117,102,103,114,111,119,0] /* bufgrow\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufcstr=allocate([98,117,102,99,115,116,114,0] /* bufcstr\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufprintf=allocate([98,117,102,112,114,105,110,116,102,0] /* bufprintf\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufput=allocate([98,117,102,112,117,116,0] /* bufput\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufputc=allocate([98,117,102,112,117,116,99,0] /* bufputc\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___bufslurp=allocate([98,117,102,115,108,117,114,112,0] /* bufslurp\00 */, "i8", ALLOC_STATIC);
_sd_autolink_issafe_valid_uris=allocate(20, "i8", ALLOC_STATIC);
STRING_TABLE.__str43=allocate([47,0] /* /\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str144=allocate([104,116,116,112,58,47,47,0] /* http://\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str245=allocate([104,116,116,112,115,58,47,47,0] /* https://\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str346=allocate([102,116,112,58,47,47,0] /* ftp://\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str447=allocate([109,97,105,108,116,111,58,0] /* mailto:\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str548=allocate([119,119,119,46,0] /* www.\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str649=allocate([46,43,45,95,0] /* .+-_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str750=allocate([63,33,46,44,0] /* ?!.,\00 */, "i8", ALLOC_STATIC);
_sdhtml_toc_renderer_cb_default=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 30, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
_sdhtml_renderer_cb_default=allocate([44, 0, 0, 0, 46, 0, 0, 0, 48, 0, 0, 0, 50, 0, 0, 0, 52, 0, 0, 0, 54, 0, 0, 0, 56, 0, 0, 0, 58, 0, 0, 0, 60, 0, 0, 0, 62, 0, 0, 0, 64, 0, 0, 0, 66, 0, 0, 0, 28, 0, 0, 0, 30, 0, 0, 0, 32, 0, 0, 0, 68, 0, 0, 0, 70, 0, 0, 0, 72, 0, 0, 0, 74, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str57=allocate([115,116,121,108,101,0] /* style\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str158=allocate([97,0] /* a\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str259=allocate([105,109,103,0] /* img\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str360=allocate([60,97,32,104,114,101,102,61,34,0] /* _a href=\22\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str461=allocate([34,32,116,105,116,108,101,61,34,0] /* \22 title=\22\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str562=allocate([34,62,0] /* \22_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str663=allocate([60,47,97,62,0] /* _/a_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str764=allocate([60,98,114,47,62,10,0] /* _br/_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str865=allocate([60,98,114,62,10,0] /* _br_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str966=allocate([60,105,109,103,32,115,114,99,61,34,0] /* _img src=\22\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1067=allocate([34,32,97,108,116,61,34,0] /* \22 alt=\22\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1168=allocate([34,47,62,0] /* \22/_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1269=allocate([109,97,105,108,116,111,58,0] /* mailto:\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1370=allocate([60,116,104,0] /* _th\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1471=allocate([60,116,100,0] /* _td\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1572=allocate([32,97,108,105,103,110,61,34,99,101,110,116,101,114,34,62,0] /*  align=\22center\22_ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1673=allocate([32,97,108,105,103,110,61,34,108,101,102,116,34,62,0] /*  align=\22left\22_\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1774=allocate([32,97,108,105,103,110,61,34,114,105,103,104,116,34,62,0] /*  align=\22right\22_\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1875=allocate([62,0] /* _\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1976=allocate([60,47,116,104,62,10,0] /* _/th_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2077=allocate([60,47,116,100,62,10,0] /* _/td_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2178=allocate([60,116,114,62,10,0] /* _tr_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2279=allocate([60,47,116,114,62,10,0] /* _/tr_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2380=allocate([60,116,97,98,108,101,62,60,116,104,101,97,100,62,10,0] /* _table__thead_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2481=allocate([60,47,116,104,101,97,100,62,60,116,98,111,100,121,62,10,0] /* _/thead__tbody_\0A\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2582=allocate([60,47,116,98,111,100,121,62,60,47,116,97,98,108,101,62,10,0] /* _/tbody__/table_\0A\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2683=allocate([60,112,62,0] /* _p_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2784=allocate([60,47,112,62,10,0] /* _/p_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2885=allocate([60,108,105,62,0] /* _li_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2986=allocate([60,47,108,105,62,10,0] /* _/li_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3087=allocate([60,111,108,62,10,0] /* _ol_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3188=allocate([60,117,108,62,10,0] /* _ul_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str32=allocate([60,47,111,108,62,10,0] /* _/ol_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str33=allocate([60,47,117,108,62,10,0] /* _/ul_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str34=allocate([60,104,114,47,62,10,0] /* _hr/_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str35=allocate([60,104,114,62,10,0] /* _hr_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str36=allocate([60,104,37,100,32,105,100,61,34,116,111,99,95,37,100,34,62,0] /* _h%d id=\22toc_%d\22 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str37=allocate([60,104,37,100,62,0] /* _h%d_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str38=allocate([60,47,104,37,100,62,10,0] /* _/h%d_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str39=allocate([60,98,108,111,99,107,113,117,111,116,101,62,10,0] /* _blockquote_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str40=allocate([60,47,98,108,111,99,107,113,117,111,116,101,62,10,0] /* _/blockquote_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str41=allocate([60,112,114,101,62,60,99,111,100,101,32,99,108,97,115,115,61,34,0] /* _pre__code class=\22 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str42=allocate([60,112,114,101,62,60,99,111,100,101,62,0] /* _pre__code_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4389=allocate([60,47,99,111,100,101,62,60,47,112,114,101,62,10,0] /* _/code__/pre_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str44=allocate([60,47,108,105,62,10,60,47,117,108,62,10,0] /* _/li_\0A_/ul_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str45=allocate([60,115,117,112,62,0] /* _sup_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str46=allocate([60,47,115,117,112,62,0] /* _/sup_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str47=allocate([60,100,101,108,62,0] /* _del_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str48=allocate([60,47,100,101,108,62,0] /* _/del_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str49=allocate([60,115,116,114,111,110,103,62,60,101,109,62,0] /* _strong__em_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str50=allocate([60,47,101,109,62,60,47,115,116,114,111,110,103,62,0] /* _/em__/strong_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str51=allocate([60,101,109,62,0] /* _em_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str52=allocate([60,47,101,109,62,0] /* _/em_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str53=allocate([60,115,116,114,111,110,103,62,0] /* _strong_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str54=allocate([60,47,115,116,114,111,110,103,62,0] /* _/strong_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str55=allocate([60,99,111,100,101,62,0] /* _code_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str56=allocate([60,47,99,111,100,101,62,0] /* _/code_\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5790=allocate([60,117,108,62,10,60,108,105,62,10,0] /* _ul_\0A_li_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str58=allocate([60,47,117,108,62,10,60,47,108,105,62,10,0] /* _/ul_\0A_/li_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str59=allocate([60,108,105,62,10,0] /* _li_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str60=allocate([60,47,108,105,62,10,60,108,105,62,10,0] /* _/li_\0A_li_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str61=allocate([60,97,32,104,114,101,102,61,34,35,116,111,99,95,37,100,34,62,0] /* _a href=\22#toc_%d\2 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str62=allocate([60,47,97,62,10,0] /* _/a_\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE._smartypants_cb_chars=allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,3,2,0,0,0,0,1,6,0,0,7,0,7,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] /* \00\00\00\00\00\00\0 */, "i8", ALLOC_STATIC);
_smartypants_cb_ptrs=allocate([0, 0, 0, 0, 78, 0, 0, 0, 80, 0, 0, 0, 82, 0, 0, 0, 84, 0, 0, 0, 86, 0, 0, 0, 88, 0, 0, 0, 90, 0, 0, 0, 92, 0, 0, 0, 94, 0, 0, 0, 96, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str91=allocate([38,37,99,37,99,113,117,111,59,0] /* &%c%cquo;\00 */, "i8", ALLOC_STATIC);
_smartypants_cb__ltag_skip_tags=allocate(32, "i8", ALLOC_STATIC);
STRING_TABLE.__str192=allocate([112,114,101,0] /* pre\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str293=allocate([99,111,100,101,0] /* code\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str394=allocate([118,97,114,0] /* var\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str495=allocate([115,97,109,112,0] /* samp\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str596=allocate([107,98,100,0] /* kbd\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str697=allocate([109,97,116,104,0] /* math\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str798=allocate([115,99,114,105,112,116,0] /* script\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str899=allocate([115,116,121,108,101,0] /* style\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str9100=allocate([38,102,114,97,99,49,50,59,0] /* &frac12;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str10101=allocate([38,102,114,97,99,49,52,59,0] /* &frac14;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str11102=allocate([38,102,114,97,99,51,52,59,0] /* &frac34;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str12103=allocate([38,104,101,108,108,105,112,59,0] /* &hellip;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str13104=allocate([38,113,117,111,116,59,0] /* &quot;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str14105=allocate([38,35,48,59,0] /* &#0;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str15106=allocate([38,114,115,113,117,111,59,0] /* &rsquo;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str16107=allocate([38,99,111,112,121,59,0] /* &copy;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str17108=allocate([38,114,101,103,59,0] /* &reg;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str18109=allocate([38,116,114,97,100,101,59,0] /* &trade;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str19110=allocate([38,109,100,97,115,104,59,0] /* &mdash;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str20111=allocate([38,110,100,97,115,104,59,0] /* &ndash;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE._HTML_ESCAPE_TABLE=allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,5,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] /* \00\00\00\00\00\00\0 */, "i8", ALLOC_STATIC);
_HTML_ESCAPES=allocate(28, "i8", ALLOC_STATIC);
__str112=allocate(1, "i8", ALLOC_STATIC);
STRING_TABLE.__str1113=allocate([38,113,117,111,116,59,0] /* &quot;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2114=allocate([38,97,109,112,59,0] /* &amp;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3115=allocate([38,35,51,57,59,0] /* &#39;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4116=allocate([38,35,52,55,59,0] /* &#47;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5117=allocate([38,108,116,59,0] /* &lt;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6118=allocate([38,103,116,59,0] /* &gt;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE._houdini_escape_href_hex_chars=allocate([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0] /* 0123456789ABCDEF\00 */, "i8", ALLOC_STATIC);
STRING_TABLE._HREF_SAFE=allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] /* \00\00\00\00\00\00\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str121=allocate([38,97,109,112,59,0] /* &amp;\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1122=allocate([38,35,120,50,55,59,0] /* &#x27;\00 */, "i8", ALLOC_STATIC);
__gm_=allocate(468, "i8", ALLOC_STATIC);
_mparams=allocate(24, "i8", ALLOC_STATIC);
STRING_TABLE.__str63=allocate([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0] /* max system bytes = % */, "i8", ALLOC_STATIC);
STRING_TABLE.__str164=allocate([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0] /* system bytes     = % */, "i8", ALLOC_STATIC);
STRING_TABLE.__str265=allocate([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0] /* in use bytes     = % */, "i8", ALLOC_STATIC);
__ZSt7nothrow=allocate(1, "i8", ALLOC_STATIC);
__ZL13__new_handler=allocate(4, "i8", ALLOC_STATIC);
__ZTVSt9bad_alloc=allocate([0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 98, 0, 0, 0, 100, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "i8", ALLOC_STATIC);
STRING_TABLE.__str366=allocate([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0] /* std::bad_alloc\00 */, "i8", ALLOC_STATIC);
__ZTVSt20bad_array_new_length=allocate([0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 104, 0, 0, 0, 106, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "i8", ALLOC_STATIC);
STRING_TABLE.__str1467=allocate([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0] /* bad_array_new_length */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZTSSt9bad_alloc=allocate([83,116,57,98,97,100,95,97,108,108,111,99,0] /* St9bad_alloc\00 */, "i8", ALLOC_STATIC);
__ZTISt9bad_alloc=allocate(12, "i8", ALLOC_STATIC);
STRING_TABLE.__ZTSSt20bad_array_new_length=allocate([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0] /* St20bad_array_new_le */, "i8", ALLOC_STATIC);
__ZTISt20bad_array_new_length=allocate(12, "i8", ALLOC_STATIC);
HEAP32[((_find_block_tag_wordlist)>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(4))>>2)]=((STRING_TABLE.__str1)|0);
HEAP32[(((_find_block_tag_wordlist)+(8))>>2)]=((STRING_TABLE.__str2)|0);
HEAP32[(((_find_block_tag_wordlist)+(12))>>2)]=((STRING_TABLE.__str3)|0);
HEAP32[(((_find_block_tag_wordlist)+(16))>>2)]=((STRING_TABLE.__str4)|0);
HEAP32[(((_find_block_tag_wordlist)+(20))>>2)]=((STRING_TABLE.__str5)|0);
HEAP32[(((_find_block_tag_wordlist)+(24))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(28))>>2)]=((STRING_TABLE.__str6)|0);
HEAP32[(((_find_block_tag_wordlist)+(32))>>2)]=((STRING_TABLE.__str7)|0);
HEAP32[(((_find_block_tag_wordlist)+(36))>>2)]=((STRING_TABLE.__str8)|0);
HEAP32[(((_find_block_tag_wordlist)+(40))>>2)]=((STRING_TABLE.__str9)|0);
HEAP32[(((_find_block_tag_wordlist)+(44))>>2)]=((STRING_TABLE.__str10)|0);
HEAP32[(((_find_block_tag_wordlist)+(48))>>2)]=((STRING_TABLE.__str11)|0);
HEAP32[(((_find_block_tag_wordlist)+(52))>>2)]=((STRING_TABLE.__str12)|0);
HEAP32[(((_find_block_tag_wordlist)+(56))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(60))>>2)]=((STRING_TABLE.__str13)|0);
HEAP32[(((_find_block_tag_wordlist)+(64))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(68))>>2)]=((STRING_TABLE.__str14)|0);
HEAP32[(((_find_block_tag_wordlist)+(72))>>2)]=((STRING_TABLE.__str15)|0);
HEAP32[(((_find_block_tag_wordlist)+(76))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(80))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(84))>>2)]=((STRING_TABLE.__str16)|0);
HEAP32[(((_find_block_tag_wordlist)+(88))>>2)]=((STRING_TABLE.__str17)|0);
HEAP32[(((_find_block_tag_wordlist)+(92))>>2)]=((STRING_TABLE.__str18)|0);
HEAP32[(((_find_block_tag_wordlist)+(96))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(100))>>2)]=((STRING_TABLE.__str19)|0);
HEAP32[(((_find_block_tag_wordlist)+(104))>>2)]=((STRING_TABLE.__str20)|0);
HEAP32[(((_find_block_tag_wordlist)+(108))>>2)]=((STRING_TABLE.__str21)|0);
HEAP32[(((_find_block_tag_wordlist)+(112))>>2)]=((STRING_TABLE.__str22)|0);
HEAP32[(((_find_block_tag_wordlist)+(116))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(120))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(124))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(128))>>2)]=((STRING_TABLE.__str23)|0);
HEAP32[(((_find_block_tag_wordlist)+(132))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(136))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(140))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(144))>>2)]=((__str)|0);
HEAP32[(((_find_block_tag_wordlist)+(148))>>2)]=((STRING_TABLE.__str24)|0);
HEAP32[((_char_escape_escape_chars)>>2)]=((STRING_TABLE.__str30)|0);
HEAP32[((_sd_autolink_issafe_valid_uris)>>2)]=((STRING_TABLE.__str43)|0);
HEAP32[(((_sd_autolink_issafe_valid_uris)+(4))>>2)]=((STRING_TABLE.__str144)|0);
HEAP32[(((_sd_autolink_issafe_valid_uris)+(8))>>2)]=((STRING_TABLE.__str245)|0);
HEAP32[(((_sd_autolink_issafe_valid_uris)+(12))>>2)]=((STRING_TABLE.__str346)|0);
HEAP32[(((_sd_autolink_issafe_valid_uris)+(16))>>2)]=((STRING_TABLE.__str447)|0);
HEAP32[((_smartypants_cb__ltag_skip_tags)>>2)]=((STRING_TABLE.__str192)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(4))>>2)]=((STRING_TABLE.__str293)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(8))>>2)]=((STRING_TABLE.__str394)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(12))>>2)]=((STRING_TABLE.__str495)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(16))>>2)]=((STRING_TABLE.__str596)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(20))>>2)]=((STRING_TABLE.__str697)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(24))>>2)]=((STRING_TABLE.__str798)|0);
HEAP32[(((_smartypants_cb__ltag_skip_tags)+(28))>>2)]=((STRING_TABLE.__str899)|0);
HEAP32[((_HTML_ESCAPES)>>2)]=((__str112)|0);
HEAP32[(((_HTML_ESCAPES)+(4))>>2)]=((STRING_TABLE.__str1113)|0);
HEAP32[(((_HTML_ESCAPES)+(8))>>2)]=((STRING_TABLE.__str2114)|0);
HEAP32[(((_HTML_ESCAPES)+(12))>>2)]=((STRING_TABLE.__str3115)|0);
HEAP32[(((_HTML_ESCAPES)+(16))>>2)]=((STRING_TABLE.__str4116)|0);
HEAP32[(((_HTML_ESCAPES)+(20))>>2)]=((STRING_TABLE.__str5117)|0);
HEAP32[(((_HTML_ESCAPES)+(24))>>2)]=((STRING_TABLE.__str6118)|0);
HEAP32[(((__ZTVSt9bad_alloc)+(4))>>2)]=__ZTISt9bad_alloc;
HEAP32[(((__ZTVSt20bad_array_new_length)+(4))>>2)]=__ZTISt20bad_array_new_length;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([2,0,0,0], ["i8*",0,0,0], ALLOC_STATIC);
HEAP32[((__ZTISt9bad_alloc)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[(((__ZTISt9bad_alloc)+(4))>>2)]=((STRING_TABLE.__ZTSSt9bad_alloc)|0);
HEAP32[(((__ZTISt9bad_alloc)+(8))>>2)]=__ZTISt9exception;
HEAP32[((__ZTISt20bad_array_new_length)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[(((__ZTISt20bad_array_new_length)+(4))>>2)]=((STRING_TABLE.__ZTSSt20bad_array_new_length)|0);
HEAP32[(((__ZTISt20bad_array_new_length)+(8))>>2)]=__ZTISt9bad_alloc;
FUNCTION_TABLE = [0,0,__ZNSt9bad_allocD1Ev,0,_char_emphasis,0,_char_codespan,0,_char_linebreak,0,_char_link,0,_char_langle_tag,0,_char_escape,0,_char_entity,0,_char_autolink_url,0,_char_autolink_email,0,_char_autolink_www,0,_char_superscript,0,_toc_header,0,_rndr_codespan,0,_rndr_double_emphasis,0,_rndr_emphasis,0,_toc_link,0,_rndr_triple_emphasis,0,_rndr_strikethrough,0,_rndr_superscript,0,_toc_finalize,0,_rndr_blockcode,0,_rndr_blockquote,0,_rndr_raw_block,0,_rndr_header,0,_rndr_hrule,0,_rndr_list,0,_rndr_listitem,0,_rndr_paragraph,0,_rndr_table,0,_rndr_tablerow,0,_rndr_tablecell,0,_rndr_autolink,0,_rndr_image,0,_rndr_linebreak,0,_rndr_link,0,_rndr_raw_html,0,_rndr_normal_text,0,_smartypants_cb__dash,0,_smartypants_cb__parens,0,_smartypants_cb__squote,0,_smartypants_cb__dquote,0,_smartypants_cb__amp,0,_smartypants_cb__period,0,_smartypants_cb__number,0,_smartypants_cb__ltag,0,_smartypants_cb__backtick,0,_smartypants_cb__escape,0,__ZNSt9bad_allocD0Ev,0,__ZNKSt9bad_alloc4whatEv,0,__ZNSt20bad_array_new_lengthD1Ev,0,__ZNSt20bad_array_new_lengthD0Ev,0,__ZNKSt20bad_array_new_length4whatEv,0]; Module["FUNCTION_TABLE"] = FUNCTION_TABLE;


function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return 0;
  }

  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    var toRun = Module['preRun'];
    Module['preRun'] = [];
    for (var i = toRun.length-1; i >= 0; i--) {
      toRun[i]();
    }
    if (runDependencies > 0) {
      // a preRun added a dependency, run will be called later
      return 0;
    }
  }

  function doRun() {
    var ret = 0;
    calledRun = true;
    if (Module['_main']) {
      preMain();
      ret = Module.callMain(args);
      if (!Module['noExitRuntime']) {
        exitRuntime();
      }
    }
    if (Module['postRun']) {
      if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
      while (Module['postRun'].length > 0) {
        Module['postRun'].pop()();
      }
    }
    return ret;
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
    return 0;
  } else {
    return doRun();
  }
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

initRuntime();

var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

if (shouldRunNow) {
  var ret = run();
}

// {{POST_RUN_ADDITIONS}}





  // {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["_hash_block_tag","_find_block_tag","_sd_markdown_new","_sd_markdown_render","_is_ref","_sd_version","_is_atxheader","_expand_tabs","_parse_block","_free_link_refs","_sd_markdown_free","_parse_atxheader","_is_empty","_is_hrule","_parse_htmlblock","_parse_fencedcode","_prefix_quote","_prefix_code","_parse_table","_parse_blockquote","_parse_blockcode","_prefix_uli","_parse_list","_prefix_oli","_parse_paragraph","_is_headerline","_rndr_popbuf","_is_codefence","_rndr_newbuf","_parse_inline","_char_emphasis","_char_codespan","_char_linebreak","_char_link","__isspace","_char_langle_tag","_char_escape","_char_entity","_char_autolink_url","_char_autolink_email","_char_autolink_www","_char_superscript","_tag_length","_unscape_text","_is_mail_autolink","_find_link_ref","_hash_link_ref","_parse_emph1","_find_emph_char","_parse_emph2","_parse_emph3","_prefix_codefence","_is_next_headerline","_parse_listitem","_parse_table_header","_parse_table_row","_htmlblock_end","_stack_pop","_stack_top","_htmlblock_end_tag","_add_link_ref","_stack_grow","_stack_free","_stack_init","_stack_push","_bufprefix","_bufgrow","_bufnew","_bufcstr","_bufprintf","_bufput","_bufputs","_bufputc","_bufrelease","_bufreset","_bufslurp","_sd_autolink_issafe","_sd_autolink__www","_check_domain","_autolink_delim","_sd_autolink__email","_sd_autolink__url","_sdhtml_is_tag","_sdhtml_toc_renderer","_toc_header","_rndr_codespan","_rndr_double_emphasis","_rndr_emphasis","_toc_link","_rndr_triple_emphasis","_rndr_strikethrough","_rndr_superscript","_toc_finalize","_sdhtml_renderer","_rndr_blockcode","_rndr_blockquote","_rndr_raw_block","_rndr_header","_rndr_hrule","_rndr_list","_rndr_listitem","_rndr_paragraph","_rndr_table","_rndr_tablerow","_rndr_tablecell","_rndr_autolink","_rndr_image","_rndr_linebreak","_rndr_link","_rndr_raw_html","_rndr_normal_text","_escape_html","_escape_href","_sdhtml_smartypants","_smartypants_cb__dash","_smartypants_cb__parens","_smartypants_cb__squote","_smartypants_cb__dquote","_smartypants_cb__amp","_smartypants_cb__period","_smartypants_cb__number","_smartypants_cb__ltag","_smartypants_cb__backtick","_smartypants_cb__escape","_smartypants_quotes","_word_boundary","_houdini_escape_html0","_houdini_escape_html","_houdini_escape_href","_malloc","_tmalloc_small","_tmalloc_large","_sys_alloc","_free","_sys_trim","_calloc","_realloc","_release_unused_segments","_memalign","_internal_memalign","_independent_calloc","_internal_realloc","_malloc_footprint","_malloc_max_footprint","_ialloc","_independent_comalloc","_valloc","_pvalloc","_malloc_trim","_mallinfo","_internal_mallinfo","_malloc_stats","_internal_malloc_stats","_mallopt","_init_mparams","_malloc_usable_size","_mmap_resize","_segment_holding","_init_top","_mmap_alloc","_init_bins","_change_mparam","_prepend_alloc","__ZNKSt9bad_alloc4whatEv","__ZSt15get_new_handlerv","__ZSt15set_new_handlerPFvvE","__ZNSt9bad_allocC2Ev","__ZNSt9bad_allocC1Ev","__ZNSt9bad_allocD1Ev","__ZdlPv","__ZdlPvRKSt9nothrow_t","__ZdaPv","__ZdaPvRKSt9nothrow_t","__ZNSt9bad_allocD0Ev","__ZNSt9bad_allocD2Ev","_add_segment","__Znwj","__ZnwjRKSt9nothrow_t","__Znaj","__ZnajRKSt9nothrow_t","__ZNKSt20bad_array_new_length4whatEv","__ZNSt20bad_array_new_lengthC1Ev","__ZNSt20bad_array_new_lengthC2Ev","__ZNSt20bad_array_new_lengthD0Ev","__ZNSt20bad_array_new_lengthD1Ev","__ZNSt20bad_array_new_lengthD2Ev","__ZSt17__throw_bad_allocv"]

